{"version":3,"sources":["firebase/Firebase.js","firebase/Auth.js","firebase/FirebaseFunctions.js","components/SignOut.js","components/Navigation.js","components/Home.js","components/Charts.js","components/News.js","components/SocialSignIn.js","components/SignIn.js","components/Loading.js","components/SignUp.js","components/ChangePassword.js","components/Account.js","components/PrivateRoute.js","components/Profile.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loadingUser","setLoadingUser","useEffect","auth","onAuthStateChanged","user","Provider","value","doCreateUserWithEmailAndPassword","email","password","displayName","a","createUserWithEmailAndPassword","updateProfile","doChangePassword","oldPassword","newPassword","credential","EmailAuthProvider","reauthenticateWithCredential","updatePassword","doSignOut","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSocialSignIn","provider","socialProvider","GoogleAuthProvider","signInWithPopup","sendPasswordResetEmail","signOut","SignOutButton","to","onClick","Sider","Layout","Navigation","NavigationAuth","className","style","overflow","height","position","left","theme","defaultSelectedKeys","mode","Item","SignOut","NavigationUnAuth","useContext","Title","Select","Option","Typography","userTest","Header","Content","id","stockList","Home","props","undefined","userData","userOneMonData","userThreeMonData","userSixMonData","userOneYearData","chartData","setChartData","loading","setLoading","error","setError","chartType","timeType","symbol","baseUrl2","func2","key2","sleep","ms","Promise","resolve","setTimeout","Object","assign","console","log","resultList","i","length","url","axios","get","single","data","symbolResult","curr","xyObject","date","substring","low","high","close","open","push","obj","index","symbolData","fetchData","showData","buildBarChart","xs","sm","md","lg","BarChart","width","barCategoryGap","reverseStackOrder","CartesianGrid","strokeDasharray","XAxis","dataKey","padding","right","YAxis","type","domain","Tooltip","Legend","verticalAlign","Bar","fill","toString","buildLineChart","LineChart","margin","top","bottom","Line","dot","stroke","buildBarChartForUser","body","Group","Button","map","chart","buildLineChartForUser","ComposedChart","Area","buildComChartForUser","buildComChart","gutter","message","description","lineHeight","borderRadius","backgroundColor","color","textAlign","fontSize","Charts","content","setUserData","setUserOneMonData","setUserThreeMonData","setUserSixMonData","setUserOneYearData","setType","setTime","func3","serverUrl","getIntodayData","getOneMonthData","getThreeMonthData","getSixMonthData","getOneYearData","getUserData","userId","uid","syb","today","Date","yesterday","setDate","getDate","toISOString","endDate","thisMonth","getMonth","startDate4","setMonth","url_1year","getData","dataArr","j","newElement","Obj","startDate3","url_6month","SixMonObj","startDate2","url_3month","ThreeMonObj","startDate1","url_1month","OneMonObj","userResultList","currDate","getUTCDate","toLocaleTimeString","last","handleTypeChange","e","target","handleTimeChange","userDataDiv","selectDiv","onChange","selectTimeDiv","News","news","setNews","userNews","setUserNews","searchNews","baseUrl","key","getCompanyName","ticker","nameData","symbolList","name","shuffle","arr","x","Math","floor","random","y","temp0","articles","currNews","uuidv4","newsDate","publishedAt","toLocaleString","item","title","image","urlToImage","source","author","result","fetchNewsList","companyName","newName","split","fetchPulicNews","buildSlide","hoverable","extra","href","aria-label","src","alt","datetime","newsBody","infoDiv","singleNews","SocialSignIn","socialSignOn","alert","SignIn","handleLogin","event","preventDefault","elements","onSubmit","placeholder","required","document","getElementById","doPasswordReset","Loading","SignUp","pwMatch","setPwMatch","handleSignUp","passwordOne","passwordTwo","ChangePassword","submitForm","currentPassword","newPasswordOne","newPasswordTwo","providerData","providerId","Account","PrivateRoute","RouteComponent","component","rest","render","routeProps","Profile","profileData","setProfileData","setloading","base_url","userName","addStock","deleteStock","user_info","old_stock_list","updateName","includes","splice","patch","profileImg","html_stock_list","stock_name","each_stock","About","itemLayout","dataSource","github","renderItem","Meta","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.3e41e561.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyADpCYy5NTH_XfmPZ3aLBoy3kEVsdMqk-8\",\r\n    authDomain: \"stock-web-19682.firebaseapp.com\",\r\n    databaseURL: \"https://stock-web-19682-default-rtdb.firebaseio.com\",\r\n    projectId: \"stock-web-19682\",\r\n    storageBucket: \"stock-web-19682.appspot.com\",\r\n    messagingSenderId: \"829141757660\",\r\n    appId: \"1:829141757660:web:43e343088f8719efaace19\",\r\n    measurementId: \"G-WXP8M5V4PM\"\r\n});\r\n\r\nconst storage = firebase.storage();\r\n\r\nexport { storage, firebaseApp as default};","import React, { useState, useEffect } from 'react';\r\nimport firebaseApp from './Firebase';\r\n\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [loadingUser, setLoadingUser] = useState(true);\r\n\r\n    useEffect(() => {\r\n        firebaseApp.auth().onAuthStateChanged((user) => {\r\n            setCurrentUser(user);\r\n            setLoadingUser(false);\r\n        });\r\n    }, []);\r\n\r\n    if (loadingUser) {\r\n        return <div>Loading....</div>;\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ currentUser }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};","import firebase from 'firebase/app';\r\n\r\nasync function doCreateUserWithEmailAndPassword(email, password, displayName) {\r\n    await firebase.auth().createUserWithEmailAndPassword(email, password);\r\n    firebase.auth().currentUser.updateProfile({displayName: displayName});\r\n}\r\n\r\nasync function doChangePassword(email, oldPassword, newPassword) {\r\n    let credential = firebase.auth.EmailAuthProvider.credential(\r\n        email,\r\n        oldPassword\r\n    );\r\n    await firebase.auth().currentUser.reauthenticateWithCredential(credential);\r\n    await firebase.auth().currentUser.updatePassword(newPassword);\r\n    await doSignOut();\r\n}\r\n\r\nasync function doSignInWithEmailAndPassword(email, password) {\r\n    await firebase.auth().signInWithEmailAndPassword(email,password);\r\n}\r\n\r\nasync function doSocialSignIn(provider) {\r\n    let socialProvider = null;\r\n    if (provider === 'google') {\r\n        socialProvider = new firebase.auth.GoogleAuthProvider();\r\n    } \r\n    await firebase.auth().signInWithPopup(socialProvider);\r\n}\r\n\r\nasync function doPasswordReset(email) {\r\n    await firebase.auth().sendPasswordResetEmail(email);\r\n}\r\n\r\nasync function doSignOut() {\r\n    await firebase.auth().signOut();\r\n}\r\n\r\nexport {\r\n    doCreateUserWithEmailAndPassword,\r\n    doChangePassword,\r\n    doSignInWithEmailAndPassword,\r\n    doSocialSignIn,\r\n    doPasswordReset,\r\n    doSignOut\r\n};\r\n","import React from 'react';\r\nimport { doSignOut } from '../firebase/FirebaseFunctions';\r\nimport { Link,Route } from 'react-router-dom';\r\nconst SignOutButton = () => {\r\n  return (\r\n   \r\n    // <button className =\"signOut\" type=\"button\" onClick={doSignOut}>\r\n    //   Sign Out\r\n    // </button>\r\n    <Link to='/' onClick={doSignOut}>Sign Out</Link>\r\n   \r\n  );\r\n};\r\n\r\nexport default SignOutButton;","import React, {useContext} from 'react';\r\nimport { Link,Route } from 'react-router-dom';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport SignOutButton from './SignOut' \r\nimport '../App.css';\r\n\r\nimport { Layout, Menu } from 'antd';\r\n\r\nconst { Sider } = Layout;\r\n\r\nconst Navigation = () => {\r\n    const currentUser  = useContext(AuthContext);\r\n\r\n    const NavigationAuth = () => {\r\n        return(\r\n            <Layout className='hide-mobile'>\r\n                <Sider\r\n                    style={{\r\n                        overflow:'auto',\r\n                        height:'100vh',\r\n                        position:'fixed',\r\n                        left:0,\r\n                    }}\r\n                >\r\n                    <Menu theme='dark' defaultSelectedKeys={['0']} mode='inline'>\r\n                        <Menu.Item key='0' className='logo'>\r\n                            <Link to='/'>STOCKWEB</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='1'>\r\n                            <Link to='/'>Home</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='2'>\r\n                            <Link to='/aboutUs'>About Us</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='8'>\r\n                            <Link to='/account'>Account information</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='3'>\r\n                            <Link to='/profile'>Profile</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='4'>\r\n                            <Link to='/charts'>Charts</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='5'>\r\n                            <Link to='/models'>Models</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='6'>\r\n                            <Link to='/News' >News</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='7'>\r\n                            <SignOutButton/>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n            </Layout>\r\n        );\r\n    };\r\n\r\n    const NavigationUnAuth = () => {\r\n        return (\r\n            <Layout className='hide-mobile'>\r\n                <Sider\r\n                    style={{\r\n                        overflow:'auto',\r\n                        height:'100vh',\r\n                        position:'fixed',\r\n                        left:0,\r\n                    }}\r\n                >\r\n                    <Menu theme='dark' defaultSelectedKeys={['0']} mode='inline'>\r\n                        <Menu.Item key='1' className='logo'>\r\n                            <Link to='/'>STOCKWEB</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='2'>\r\n                            <Link to='/'>Home</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='3'>\r\n                            <Link to='/aboutUs'>About Us</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='4'>\r\n                            <Link to='/sigin'>Sign-In</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='8'>\r\n                            <Link to='/signup'>Sign-Up</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='5'>\r\n                            <Link to='/charts'>Charts</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='6'>\r\n                            <Link to='/models'>Models</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='7'>\r\n                            <Link to='/news'>News</Link>\r\n                        </Menu.Item>\r\n                        {/* <Menu.Item key='7'>\r\n                            <Link to='/logout'>Logout</Link>\r\n                        </Menu.Item> */}\r\n                    </Menu>\r\n                </Sider>\r\n            </Layout>\r\n        );\r\n    };\r\n\r\n    if(currentUser.currentUser){\r\n        return (<div><NavigationAuth/></div>)\r\n    }\r\n    else{\r\n        return (<div><NavigationUnAuth/></div>)\r\n    }\r\n};\r\n\r\nexport default Navigation;","import React, {useEffect, useState,useContext} from 'react';\r\nimport {AuthContext} from '../firebase/Auth';\r\nimport axios from 'axios'\r\n\r\nimport '../antd.css';\r\nimport { Layout, Row, Col, Select, Radio, Alert, Typography, BackTop } from 'antd';\r\nimport { BarChart, Bar, Line, Area, ComposedChart, LineChart, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\nconst { Header, Sider, Content } = Layout;\r\nconst userTest = { id: 'idabc', stockList: ['AAPL', 'IBM', 'BA', 'GOOGL', 'FB', 'NVDA'] }\r\nlet testMode = true;\r\n\r\nconst style = {\r\n    height: 30,\r\n    width: 30,\r\n    lineHeight: '40px',\r\n    borderRadius: 4,\r\n    backgroundColor: '#00254d',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    fontSize: 14,\r\n};\r\n\r\nfunction Home(props) {\r\n    // const {currentUser} = useContext(AuthContext);\r\n    const [userData, setUserData] = useState(undefined);\r\n    const [userOneMonData, setUserOneMonData] = useState(undefined);//1 month\r\n    const [userThreeMonData, setUserThreeMonData] = useState(undefined);//3 month\r\n    const [userSixMonData, setUserSixMonData] = useState(undefined);//6 month\r\n    const [userOneYearData, setUserOneYearData] = useState(undefined);//1 year\r\n    const [user, setUser] = useState(undefined);\r\n    //user.stockList\r\n    const [chartData, setChartData] = useState(undefined);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [chartType, setType] = useState('Bar');\r\n    const [timeType, setTime] = useState('today');\r\n    const symbol = ['GOOG', 'AAPL', 'AMZN','NKE','SBUX','BA']\r\n\r\n    const key = \"AWWY4QSC0AS018VB\"\r\n    const func = 'TIME_SERIES_INTRADAY'\r\n    const baseUrl1 = `https://www.alphavantage.co/query?`\r\n    const baseUrl2 = 'https://api.marketstack.com/v1/'\r\n    const func2 = \"eod?\"\r\n    const func3 = \"intraday?\"\r\n    const key2 = 'access_key=bc3f4991e9abb86d188bede651d502f4&'\r\n\r\n\r\n    const setUserFunc = () => {\r\n        setUser(userTest);\r\n    }\r\n    let currentUser = Object.assign(userTest);\r\n    //set delay because of API limitition...\r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    //effect when user not loggin\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                console.log(\"user not login useEffect fired.\")\r\n                let resultList = [];\r\n                for (let i = 0; i < symbol.length; i++) {\r\n                    let syb = symbol[i]\r\n                    // let url = baseUrl1+`function=${func}&symbol=${syb}&interval=15min&apikey=${key}`;\r\n                    let url = baseUrl2 + func2 + key2 + `symbols=${syb}&interval=15min`\r\n                    // console.log(url)\r\n                    const single = await axios.get(url);\r\n                    let { data } = single\r\n                    await sleep(1100);\r\n                    // console.log(\"data for chart:\\n\")\r\n                    //  console.log(data)\r\n                    if (data.data) {\r\n                        //   console.log(data.data);\r\n                        let symbolResult = []\r\n                        for (let i = data.data.length - 1; i >= 0; i--) {\r\n                            let curr = data.data[i]\r\n                            //only show today's data\r\n                            //To do: add 1week,1month 6month,1year,5year\r\n                            let xyObject = {\r\n                                date: curr.date.substring(0, 10),\r\n                                low: curr.low,\r\n                                high: curr.high,\r\n                                close: curr.close,\r\n                                \"Low - High\": [curr.low, curr.high],\r\n                                \"open - close\": [curr.open, curr.close]\r\n                            }\r\n                            symbolResult.push(xyObject)\r\n                        }\r\n                        let obj = {\r\n                            index: i,\r\n                            symbol: symbol[i],\r\n                            symbolData: symbolResult\r\n                        }\r\n                        resultList.push(obj);\r\n                    }\r\n                }\r\n                setChartData(resultList);\r\n                setLoading(false);\r\n                // console.log(resultList);           \r\n            } catch (error) {\r\n                setError(true);\r\n            }\r\n        }\r\n        fetchData();\r\n        // if (!!currentUser) {\r\n        //     getIntodayData();\r\n        //     getOneMonthData();\r\n        //     getThreeMonthData();\r\n        //     getSixMonthData();\r\n        //     getOneYearData();\r\n        // }\r\n\r\n    }, [])\r\n\r\n    async function getIntodayData() {\r\n        let userResultList = [];\r\n        if (currentUser.stockList.length > 0) {\r\n            for (let i = 0; i < currentUser.stockList.length; i++) {\r\n\r\n                let syb = currentUser.stockList[i];\r\n                //for logged in user, get intraday data.\r\n                let url = baseUrl2 + func3 + key2 + `symbols=${syb}&interval=15min`\r\n                // console.log(url);\r\n                try {\r\n                    const single = await axios.get(url);\r\n                    let { data } = single\r\n                    await sleep(1100);\r\n                    // console.log(data)\r\n                    if (data.data) {\r\n                        let symbolResult = []\r\n                        for (let i = data.data.length - 1; i >= 0; i--) {//reverse time\r\n                            let curr = data.data[i]\r\n                            // console.log(curr)\r\n                            const today = new Date();\r\n                            // console.log(today.getUTCDate());\r\n                            const currDate = new Date(data.data[i].date);\r\n                            if (today.getUTCDate() === currDate.getUTCDate()) {\r\n                                //only show today's data\r\n                                //To do: add 1week,1month 6month,1year,5year\r\n                                let xyObject = {\r\n                                    date: currDate.toLocaleTimeString(),\r\n                                    low: curr.low,\r\n                                    last: curr.last,\r\n                                    high: curr.high,\r\n                                    close: curr.close,\r\n                                    open: curr.open,\r\n                                    \"open - last\": [curr.open, curr.last],\r\n                                    \"Low - High\": [curr.low, curr.high],\r\n                                    \"open - close\": [curr.open, curr.close],\r\n                                }\r\n                                symbolResult.push(xyObject)\r\n                            }\r\n                        }\r\n                        let obj = {\r\n                            index: i,\r\n                            symbol: syb,\r\n                            symbolData: symbolResult\r\n                        }\r\n                        userResultList.push(obj);\r\n                    } else {\r\n                        console.log(error);\r\n                        continue\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                    continue\r\n                }\r\n            }\r\n            setUserData(userResultList);\r\n            console.log('Introday user data', userResultList)\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    async function getOneMonthData() {\r\n        let currentUser = Object.assign(userTest);\r\n        let userData = [];\r\n        //for test\r\n        // console.log(currentUser);\r\n        if (currentUser.stockList.length > 0) {\r\n            for (let i = 0; i < currentUser.stockList.length; i++) {\r\n                let syb = currentUser.stockList[i];\r\n                let today = new Date();\r\n                let yesterday = new Date(today.setDate(today.getDate() - 1)).toISOString().substring(0, 10);\r\n                // console.log('yesterDay',yesterday);\r\n                let endDate = yesterday;\r\n                //  console.log('endDate',endDate);\r\n                let thisMonth = today.getMonth();\r\n                let startDate1; // 1 month ago\r\n                startDate1 = new Date(today.setMonth(thisMonth - 1)).toISOString().substring(0, 10);\r\n                let url_1month = baseUrl2 + func2 + key2 + `symbols=${syb}&date_from=${startDate1}&date_to=${endDate}`;\r\n                try {\r\n                    const getData = await axios.get(url_1month);\r\n                    await sleep(1100);\r\n                    if (getData && getData.data && getData.data.data) {\r\n                        let dataArr = getData.data.data;\r\n                        //console.log('SixMonData',dataArr);\r\n                        let resultList = [];\r\n                        for (let j = dataArr.length - 1; j >= 0; j--) {\r\n                            let curr = dataArr[j];\r\n                            let newElement = {\r\n                                date: curr.date.substring(0, 10),\r\n                                open: curr.open,\r\n                                close: curr.close,\r\n                                high: curr.high,\r\n                                low: curr.low,\r\n                                \"Low - High\": [curr.low, curr.high],\r\n                                \"open - close\": [curr.open, curr.close]\r\n                            }\r\n                            resultList.push(newElement);\r\n                        }\r\n                        // console.log('resultList',resultList);\r\n                        let OneMonObj = {\r\n                            index: i,\r\n                            symbol: syb,\r\n                            symbolData: resultList\r\n                        }\r\n                        userData.push(OneMonObj);\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                     continue;\r\n                }\r\n            }\r\n            console.log('One Mon user data', userData);\r\n            setUserOneMonData(userData);\r\n        }\r\n\r\n    }\r\n\r\n    async function getThreeMonthData() {\r\n        let currentUser = Object.assign(userTest);\r\n        let userData = [];\r\n        //for test\r\n        // console.log(currentUser);\r\n        if (currentUser.stockList.length > 0) {\r\n            for (let i = 0; i < currentUser.stockList.length; i++) {\r\n                let syb = currentUser.stockList[i];\r\n                let today = new Date();\r\n                let yesterday = new Date(today.setDate(today.getDate() - 1)).toISOString().substring(0, 10);\r\n                // console.log('yesterDay',yesterday);\r\n                let endDate = yesterday;\r\n                //  console.log('endDate',endDate);\r\n                let thisMonth = today.getMonth();\r\n                //  let startDate1; // 1 month ago\r\n                let startDate2; // 6 month ago\r\n                //  let startDate3; // 12 month ago\r\n                // startDate1 = new Date(today.setMonth(thisMonth - 1)).toISOString().substring(0,10);\r\n                startDate2 = new Date(today.setMonth(thisMonth - 3)).toISOString().substring(0, 10);\r\n                let url_3month = baseUrl2 + func2 + key2 + `symbols=${syb}&date_from=${startDate2}&date_to=${endDate}`;\r\n                try {\r\n                    const getData = await axios.get(url_3month);\r\n                    await sleep(1100);\r\n                    if (getData && getData.data && getData.data.data) {\r\n                        let dataArr = getData.data.data;\r\n                        //console.log('SixMonData',dataArr);\r\n                        let resultList = [];\r\n\r\n                        for (let j = dataArr.length - 1; j >= 0; j--) {\r\n                            let curr = dataArr[j];\r\n                            let newElement = {\r\n                                date: curr.date.substring(0, 10),\r\n                                open: curr.open,\r\n                                close: curr.close,\r\n                                high: curr.high,\r\n                                low: curr.low,\r\n                                \"Low - High\": [curr.low, curr.high],\r\n                                \"open - close\": [curr.open, curr.close]\r\n                            }\r\n                            resultList.push(newElement);\r\n                        }\r\n                        // console.log('resultList',resultList);\r\n                        let ThreeMonObj = {\r\n                            index: i,\r\n                            symbol: syb,\r\n                            symbolData: resultList\r\n                        }\r\n                        userData.push(ThreeMonObj);\r\n\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                     continue;\r\n                }\r\n\r\n\r\n            }\r\n            console.log('three Month user data', userData);\r\n            setUserThreeMonData(userData);\r\n        }\r\n\r\n    }\r\n    //------------get six month data--------------------------------------- \r\n    async function getSixMonthData() {\r\n        let currentUser = Object.assign(userTest);\r\n        let userData = [];\r\n        //for test\r\n        // console.log(currentUser);\r\n        if (currentUser.stockList.length > 0) {\r\n            for (let i = 0; i < currentUser.stockList.length; i++) {\r\n                let syb = currentUser.stockList[i];\r\n                let today = new Date();\r\n                let yesterday = new Date(today.setDate(today.getDate() - 1)).toISOString().substring(0, 10);\r\n                // console.log('yesterDay',yesterday);\r\n                let endDate = yesterday;\r\n                //  console.log('endDate',endDate);\r\n                let thisMonth = today.getMonth();\r\n                let startDate3; // 12 month ago\r\n                startDate3 = new Date(today.setMonth(thisMonth - 6)).toISOString().substring(0, 10);\r\n                let url_6month = baseUrl2 + func2 + key2 + `symbols=${syb}&date_from=${startDate3}&date_to=${endDate}`;\r\n               \r\n                try {\r\n                    const getData = await axios.get(url_6month);\r\n                    await sleep(1100);\r\n                    if (getData && getData.data && getData.data.data) {\r\n                        let dataArr = getData.data.data;\r\n                        //console.log('SixMonData',dataArr);\r\n                        let resultList = [];\r\n\r\n                        for (let j = dataArr.length - 1; j >= 0; j--) {\r\n                            let curr = dataArr[j];\r\n                            let newElement = {\r\n                                date: curr.date.substring(0, 10),\r\n                                open: curr.open,\r\n                                close: curr.close,\r\n                                high: curr.high,\r\n                                low: curr.low,\r\n                                \"Low - High\": [curr.low, curr.high],\r\n                                \"open - close\": [curr.open, curr.close]\r\n                            }\r\n                            resultList.push(newElement);\r\n                        }\r\n                        // console.log('resultList',resultList);\r\n                        let SixMonObj = {\r\n                            index: i,\r\n                            symbol: syb,\r\n                            symbolData: resultList\r\n                        }\r\n                        userData.push(SixMonObj);\r\n\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                     continue;\r\n                }\r\n\r\n\r\n            }\r\n            console.log('Six Month user data', userData);\r\n            setUserSixMonData(userData);\r\n        }\r\n\r\n    }\r\n    //------------get one year data--------------------------------------- \r\n    async function getOneYearData() {\r\n        let currentUser = Object.assign(userTest);\r\n        let userData = [];\r\n        //for test\r\n        // console.log(currentUser);\r\n        if (currentUser.stockList.length > 0) {\r\n            for (let i = 0; i < currentUser.stockList.length; i++) {\r\n                let syb = currentUser.stockList[i];\r\n                let today = new Date();\r\n                let yesterday = new Date(today.setDate(today.getDate() - 1)).toISOString().substring(0, 10);\r\n                // console.log('yesterDay',yesterday);\r\n                let endDate = yesterday;\r\n                let thisMonth = today.getMonth();\r\n                let startDate4;  //12 month\r\n                startDate4 = new Date(today.setMonth(thisMonth - 12)).toISOString().substring(0, 10);\r\n\r\n                let url_1year = baseUrl2 + func2 + key2 + `symbols=${syb}&date_from=${startDate4}&date_to=${endDate}`;\r\n                try {\r\n                    const getData = await axios.get(url_1year);\r\n                    await sleep(1100);\r\n                    if (getData && getData.data && getData.data.data) {\r\n                        let dataArr = getData.data.data;\r\n                        //console.log('SixMonData',dataArr);\r\n                        let resultList = [];\r\n\r\n                        for (let j = dataArr.length - 1; j >= 0; j--) {\r\n                            let curr = dataArr[j];\r\n                            let newElement = {\r\n                                date: curr.date.substring(0, 10),\r\n                                open: curr.open,\r\n                                close: curr.close,\r\n                                high: curr.high,\r\n                                low: curr.low,\r\n                                \"Low - High\": [curr.low, curr.high],\r\n                                \"open - close\": [curr.open, curr.close]\r\n                            }\r\n                            resultList.push(newElement);\r\n                        }\r\n                        // console.log('resultList',resultList);\r\n                        let Obj = {\r\n                            index: i,\r\n                            symbol: syb,\r\n                            symbolData: resultList\r\n                        }\r\n                        userData.push(Obj);\r\n\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                    continue;\r\n                }\r\n\r\n\r\n            }\r\n            console.log('12 Month user data', userData);\r\n            setUserOneYearData(userData);\r\n        }\r\n\r\n    }\r\n\r\n    //build bar chart-----------------------\r\n    const buildBarChart = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12}>\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n                <BarChart width={500} height={250} data={data} barCategoryGap={'30%'} reverseStackOrder={true}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" padding={{ left: 20, right: 20 }} />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={36} />\r\n                    <Bar dataKey=\"Low - High\" fill=\"#00cc00\" />\r\n                </BarChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //build line chart-----------------------\r\n    const buildLineChart = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12}>\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n                <LineChart width={500} height={250} data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={36} />\r\n                    <Line type='natural' dot={false} dataKey=\"high\" stroke=\"#6e69cb\" />\r\n                    <Line type='natural' dot={false} dataKey=\"low\" stroke=\"#008800\" />\r\n                </LineChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //build combo chart-----------------------------\r\n    const buildComChart = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12}>\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n                <ComposedChart width={500} height={250} data={data}>\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={36} />\r\n                    <CartesianGrid stroke=\"#f5f5f5\" />\r\n                    <Bar dataKey=\"Low - High\" fill=\"#00cc00\" />\r\n                    {/* <Bar dataKey=\"open - close\" fill=\"#cc33ff\"/> */}\r\n                    <Area type=\"monotSix\" dataKey=\"close\" fill=\" #4da3ff\" stroke=\" #cce5ff\" />\r\n                </ComposedChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //Build Charts for symbol (loggin user)  --------------------\r\n    //build bar chart-----------------------\r\n    const buildBarChartForUser = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n\r\n                <BarChart width={500} height={250} data={data} barCategoryGap={'30%'} reverseStackOrder={true}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={36} />\r\n                    <Bar dataKey=\"open - last\" fill=\"#00cc00\" />\r\n                </BarChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //build line chart-----------------------\r\n    const buildLineChartForUser = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n\r\n                <LineChart width={500} height={250} data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={36} />\r\n                    <Line type='natural' dot={false} dataKey=\"last\" stroke=\"#4da3ff\" />\r\n                </LineChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //build combo chart-----------------------------\r\n    const buildComChartForUser = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n\r\n                <ComposedChart width={500} height={250} data={data}>\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={36} />\r\n                    <CartesianGrid stroke=\"#f5f5f5\" />\r\n                    <Bar dataKey=\"Low - High\" fill=\"#00cc00\" />\r\n                    {/* <Bar dataKey=\"open - close\" fill=\"#cc33ff\"/> */}\r\n                    <Area type=\"monotSix\" dataKey=\"last\" fill=\"#4da3ff\" stroke=\" #cce5ff\" />\r\n                </ComposedChart>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    //build a selection div for chart types---------\r\n\r\n    const handleTypeChange = (e) => {\r\n        setType(e.target.value);\r\n    };\r\n    const buildSelection = () => {\r\n        return (\r\n            <Radio.Group value={chartType} onChange={handleTypeChange}>\r\n                {/* <Radio.Button value=\"Bar\">Bar Chart</Radio.Button>\r\n                <Radio.Button value=\"Line\">Line Chart</Radio.Button>\r\n                <Radio.Button value=\"Combo\">Combined Chart</Radio.Button> */}\r\n            </Radio.Group>\r\n\r\n        )\r\n    }\r\n\r\n    //build a selection div for data time ---------\r\n    const handleTimeChange = (e) => {\r\n        setTime(e.target.value);\r\n    };\r\n    const buildTimeSelection = () => {\r\n        return (\r\n            <Radio.Group value={timeType} onChange={handleTimeChange}>\r\n                <Radio.Button value=\"today\">TODAY</Radio.Button>\r\n                <Radio.Button value=\"1month\">1 MONTH</Radio.Button>\r\n                <Radio.Button value=\"3month\">3 MONTH</Radio.Button>\r\n                <Radio.Button value=\"6month\">6 MONTH</Radio.Button>\r\n                <Radio.Button value=\"1year\">1 YEAR</Radio.Button>\r\n            </Radio.Group>\r\n\r\n        )\r\n    }\r\n\r\n    let body = null\r\n    let userDataDiv = null;\r\n    let showData;\r\n    let selectDiv = buildSelection();\r\n    let selectTimeDiv = buildTimeSelection();\r\n    // set user customized stock data----------------------------------\r\n    if (timeType === '1month') {\r\n        showData = userOneMonData;\r\n        console.log('showData', showData);\r\n    } else if (timeType === '3month') {\r\n        showData = userThreeMonData;\r\n    } else if (timeType === '6month') {\r\n        showData = userSixMonData;\r\n    } else if (timeType === '1year') {\r\n        showData = userOneYearData;\r\n    } else {\r\n        showData = userData;\r\n    }\r\n    console.log('showData', showData);\r\n\r\n    if (showData) {\r\n        if (timeType === 'today') {\r\n            if (chartType === 'Bar') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildBarChartForUser(chart);\r\n                })\r\n            } else if (chartType === 'Line') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildLineChartForUser(chart);\r\n                })\r\n            } else if (chartType === 'Combo') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildComChartForUser(chart);\r\n\r\n                })\r\n            } else {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildBarChartForUser(chart);\r\n                })\r\n            }\r\n        } else {\r\n            if (chartType === 'Bar') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildBarChart(chart);\r\n                })\r\n            } else if (chartType === 'Line') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildLineChart(chart);\r\n                })\r\n            } else if (chartType === 'Combo') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildComChart(chart);\r\n\r\n                })\r\n            } else {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildBarChart(chart);\r\n                })\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n    // return---------------------------------\r\n    if (chartData) {\r\n        // if (chartType === 'Bar') {\r\n        //     body = chartData.map((chart) => {\r\n        //         return buildBarChart(chart);\r\n        //     })\r\n        // } else if (chartType === 'Line') {\r\n        //     body = chartData.map((chart) => {\r\n        //         return buildLineChart(chart);\r\n        //     })\r\n        // } else if (chartType === 'Combo') {\r\n        //     body = chartData.map((chart) => {\r\n        //         return buildComChart(chart);\r\n\r\n        //     })\r\n        // } else {\r\n        body = chartData.map((chart) => {\r\n            return buildLineChart(chart);\r\n        })\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <Title>Welcome to Stock Web!</Title>\r\n                {/* <Header className=\"site-layout-background\" style={{ textAlign: 'center' }} style={{ padding: 0 }} >\r\n                    {selectDiv}\r\n                </Header> */}\r\n                <Typography><p className=\"chartName\">Popular Stock Prices</p></Typography>\r\n                <Row gutter={16}>\r\n                    {body}\r\n                </Row>\r\n                <br />\r\n                <br />\r\n                {/* <Typography><Title level={3}>Top Stocks</Title></Typography>\r\n                <Header className=\"site-layout-background\" style={{ textAlign: 'center' }} style={{ padding: 0 }} >\r\n                    {selectTimeDiv}\r\n                </Header>\r\n                <Row gutter={16}>\r\n                    <br />\r\n                    {userDataDiv ? userDataDiv : (<Typography><Title level={4}>Your are not Following any Stocks</Title></Typography>)}\r\n                </Row>\r\n                <BackTop>\r\n                    <div style={style}>UP</div>\r\n                </BackTop> */}\r\n            </div>\r\n\r\n        )\r\n\r\n    } else if (loading) {\r\n        return (\r\n            <Alert\r\n                message=\"Loading\"\r\n                description=\"Please wait a second...\"\r\n                type=\"info\"\r\n            />)\r\n    } else if (error) {\r\n        return (\r\n            <Alert\r\n                message=\"404 Error\"\r\n                description=\"Something wrong, please try again.\"\r\n                type=\"error\"\r\n            />)\r\n    }\r\n\r\n}\r\nexport default Home;","import React, { useEffect, useState, useContext } from 'react';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport axios from 'axios'\r\nimport '../antd.css';\r\nimport '../App.css';\r\n//import uuid from 'uuid'\r\nimport { Layout, Row, Col, Select, Radio, Alert, Typography, BackTop } from 'antd';\r\nimport { BarChart, Bar, Line, Area, ComposedChart, LineChart, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nconst { Header } = Layout;\r\nconst userTest = { id: 'idabc', stockList: ['AAPL', 'IBM', 'BA', 'GOOGL', 'FB'] }\r\nlet testMode = false;\r\n\r\nconst style = {\r\n    height: 30,\r\n    width: 30,\r\n    lineHeight: '40px',\r\n    borderRadius: 4,\r\n    backgroundColor: '#00254d',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    fontSize: 14,\r\n};\r\n\r\nfunction Charts() {\r\n    const content = useContext(AuthContext);\r\n    const [userData, setUserData] = useState(undefined);\r\n    const [userOneMonData, setUserOneMonData] = useState(undefined);//1 month\r\n    const [userThreeMonData, setUserThreeMonData] = useState(undefined);//3 month\r\n    const [userSixMonData, setUserSixMonData] = useState(undefined);//6 month\r\n    const [userOneYearData, setUserOneYearData] = useState(undefined);//1 year\r\n    const [user, setUser] = useState(undefined);\r\n    //user.stockList\r\n    const [chartData, setChartData] = useState(undefined);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [chartType, setType] = useState('Bar');\r\n    const [timeType, setTime] = useState('today');\r\n    const symbol = ['DJI.INDX', 'NDX.INDX', 'NYA.INDX']\r\n\r\n\r\n    const baseUrl2 = 'http://api.marketstack.com/v1/'\r\n    const func2 = \"eod?\"\r\n    const func3 = \"intraday?\"\r\n    const key2 = 'access_key=bc3f4991e9abb86d188bede651d502f4&'\r\n    const serverUrl = \"https://cors-anywhere.herokuapp.com/http://ownstockmodel.herokuapp.com/api/user/\"\r\n\r\n\r\n\r\n    //set delay because of API limitition...\r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    //effect when user not loggin\r\n    useEffect(async () => {\r\n        async function fetchData() {\r\n            try {\r\n                \r\n                console.log(\"user not login useEffect fired.\")\r\n                let resultList = [];\r\n                for (let i = 0; i < symbol.length; i++) {\r\n                    await sleep(1100);\r\n                    let syb = symbol[i]\r\n                    // let url = baseUrl1+`function=${func}&symbol=${syb}&interval=15min&apikey=${key}`;\r\n                    let url = baseUrl2 + func2 + key2 + `symbols=${syb}&interval=15min`\r\n                    // console.log(url)\r\n                    const single = await axios.get(url);\r\n                    let { data } = single\r\n                    await sleep(1100);\r\n                    // console.log(\"data for chart:\\n\")\r\n                    //  console.log(data)\r\n                    if (data.data) {\r\n                        //   console.log(data.data);\r\n                        let symbolResult = []\r\n                        for (let i = data.data.length - 1; i >= 0; i--) {\r\n                            let curr = data.data[i]\r\n                            //only show today's data\r\n                            //To do: add 1week,1month 6month,1year,5year\r\n                            let xyObject = {\r\n                                date: curr.date.substring(0, 10),\r\n                                low: curr.low,\r\n                                high: curr.high,\r\n                                close: curr.close,\r\n                                \"Low - High\": [curr.low, curr.high],\r\n                                \"open - close\": [curr.open, curr.close]\r\n                            }\r\n                            symbolResult.push(xyObject)\r\n                        }\r\n                        let obj = {\r\n                            index: i,\r\n                            symbol: symbol[i],\r\n                            symbolData: symbolResult\r\n                        }\r\n                        resultList.push(obj);\r\n                    }\r\n                }\r\n                setChartData(resultList);\r\n                setLoading(false);\r\n                // console.log(resultList);           \r\n            } catch (error) {\r\n                setError(true);\r\n            }\r\n        }\r\n        //get introday \r\n        async function getIntodayData(stockList) {\r\n            if (!stockList) throw 'no stockList'\r\n            let userResultList = [];\r\n            if (stockList.length > 0) {\r\n                for (let i = 0; i < stockList.length; i++) {\r\n\r\n                    let syb = stockList[i];\r\n                    //for logged in user, get intraday data.\r\n                    let url = baseUrl2 + func3 + key2 + `symbols=${syb}&interval=15min`\r\n                    // console.log(url);\r\n                    await sleep(1100);\r\n                    try {\r\n                        const single = await axios.get(url);\r\n                        let { data } = single\r\n\r\n                        // console.log(data)\r\n                        if (data.data) {\r\n                            let symbolResult = []\r\n                            for (let i = data.data.length - 1; i >= 0; i--) {//reverse time\r\n                                let curr = data.data[i]\r\n                                // console.log(curr)\r\n                                const today = new Date();\r\n                                // console.log(today.getUTCDate());\r\n                                const currDate = new Date(data.data[i].date);\r\n                                if (today.getUTCDate() === currDate.getUTCDate()) {\r\n                                    //only show today's data\r\n                                    //To do: add 1week,1month 6month,1year,5year\r\n                                    let xyObject = {\r\n                                        date: currDate.toLocaleTimeString(),\r\n                                        low: curr.low,\r\n                                        last: curr.last,\r\n                                        high: curr.high,\r\n                                        close: curr.close,\r\n                                        open: curr.open,\r\n                                        \"open - last\": [curr.open, curr.last],\r\n                                        \"Low - High\": [curr.low, curr.high],\r\n                                        \"open - close\": [curr.open, curr.close],\r\n                                    }\r\n                                    symbolResult.push(xyObject)\r\n                                }\r\n                            }\r\n                            let obj = {\r\n                                index: i,\r\n                                symbol: syb,\r\n                                symbolData: symbolResult\r\n                            }\r\n                            userResultList.push(obj);\r\n                        } else {\r\n                            // console.log(error);\r\n                            continue\r\n                        }\r\n                    } catch (error) {\r\n                        //  console.log(error);\r\n                        continue\r\n                    }\r\n                }\r\n                setUserData(userResultList);\r\n                console.log('Introday user data', userResultList)\r\n                setLoading(false);\r\n\r\n            }\r\n        }\r\n\r\n        //get One Month data\r\n        async function getOneMonthData(stockList) {\r\n            if (!stockList) throw 'no stockList'\r\n            let userData = [];\r\n\r\n            if (stockList.length > 0) {\r\n                for (let i = 0; i < stockList.length; i++) {\r\n                    let syb = stockList[i];\r\n                    let today = new Date();\r\n                    let yesterday = new Date(today.setDate(today.getDate() - 1)).toISOString().substring(0, 10);\r\n                    // console.log('yesterDay',yesterday);\r\n                    let endDate = yesterday;\r\n                    //  console.log('endDate',endDate);\r\n                    let thisMonth = today.getMonth();\r\n                    let startDate1; // 1 month ago\r\n                    startDate1 = new Date(today.setMonth(thisMonth - 1)).toISOString().substring(0, 10);\r\n                    let url_1month = baseUrl2 + func2 + key2 + `symbols=${syb}&date_from=${startDate1}&date_to=${endDate}`;\r\n                    await sleep(1100);\r\n                    try {\r\n                        const getData = await axios.get(url_1month);\r\n\r\n                        if (getData && getData.data && getData.data.data) {\r\n                            let dataArr = getData.data.data;\r\n                            //console.log('SixMonData',dataArr);\r\n                            let resultList = [];\r\n                            for (let j = dataArr.length - 1; j >= 0; j--) {\r\n                                let curr = dataArr[j];\r\n                                let newElement = {\r\n                                    date: curr.date.substring(0, 10),\r\n                                    open: curr.open,\r\n                                    close: curr.close,\r\n                                    high: curr.high,\r\n                                    low: curr.low,\r\n                                    \"Low - High\": [curr.low, curr.high],\r\n                                    \"open - close\": [curr.open, curr.close]\r\n                                }\r\n                                resultList.push(newElement);\r\n                            }\r\n                            // console.log('resultList',resultList);\r\n                            let OneMonObj = {\r\n                                index: i,\r\n                                symbol: syb,\r\n                                symbolData: resultList\r\n                            }\r\n                            userData.push(OneMonObj);\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        continue;\r\n                    }\r\n                }\r\n                console.log('One Mon user data', userData);\r\n                setUserOneMonData(userData);\r\n\r\n            }\r\n\r\n        }\r\n        //get threee month data\r\n        async function getThreeMonthData(stockList) {\r\n            if (!stockList) throw 'no stockList'\r\n            let userData = [];\r\n\r\n            if (stockList.length > 0) {\r\n                for (let i = 0; i < stockList.length; i++) {\r\n                    let syb = stockList[i];\r\n                    let today = new Date();\r\n                    let yesterday = new Date(today.setDate(today.getDate() - 1)).toISOString().substring(0, 10);\r\n                    // console.log('yesterDay',yesterday);\r\n                    let endDate = yesterday;\r\n                    //  console.log('endDate',endDate);\r\n                    let thisMonth = today.getMonth();\r\n                    //  let startDate1; // 1 month ago\r\n                    let startDate2; // 6 month ago\r\n                    //  let startDate3; // 12 month ago\r\n                    // startDate1 = new Date(today.setMonth(thisMonth - 1)).toISOString().substring(0,10);\r\n                    startDate2 = new Date(today.setMonth(thisMonth - 3)).toISOString().substring(0, 10);\r\n                    let url_3month = baseUrl2 + func2 + key2 + `symbols=${syb}&date_from=${startDate2}&date_to=${endDate}`;\r\n                    await sleep(1100);\r\n                    try {\r\n                        const getData = await axios.get(url_3month);\r\n\r\n                        if (getData && getData.data && getData.data.data) {\r\n                            let dataArr = getData.data.data;\r\n                            //console.log('SixMonData',dataArr);\r\n                            let resultList = [];\r\n\r\n                            for (let j = dataArr.length - 1; j >= 0; j--) {\r\n                                let curr = dataArr[j];\r\n                                let newElement = {\r\n                                    date: curr.date.substring(0, 10),\r\n                                    open: curr.open,\r\n                                    close: curr.close,\r\n                                    high: curr.high,\r\n                                    low: curr.low,\r\n                                    \"Low - High\": [curr.low, curr.high],\r\n                                    \"open - close\": [curr.open, curr.close]\r\n                                }\r\n                                resultList.push(newElement);\r\n                            }\r\n                            // console.log('resultList',resultList);\r\n                            let ThreeMonObj = {\r\n                                index: i,\r\n                                symbol: syb,\r\n                                symbolData: resultList\r\n                            }\r\n                            userData.push(ThreeMonObj);\r\n\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        continue;\r\n                    }\r\n\r\n\r\n                }\r\n                console.log('three Month user data', userData);\r\n                setUserThreeMonData(userData);\r\n\r\n            }\r\n\r\n        }\r\n        //------------get six month data--------------------------------------- \r\n        async function getSixMonthData(stockList) {\r\n            if (!stockList) throw 'no stockList'\r\n            let userData = [];\r\n            //for test\r\n\r\n            if (stockList.length > 0) {\r\n                for (let i = 0; i < stockList.length; i++) {\r\n                    let syb = stockList[i];\r\n                    let today = new Date();\r\n                    let yesterday = new Date(today.setDate(today.getDate() - 1)).toISOString().substring(0, 10);\r\n                    // console.log('yesterDay',yesterday);\r\n                    let endDate = yesterday;\r\n                    //  console.log('endDate',endDate);\r\n                    let thisMonth = today.getMonth();\r\n                    let startDate3; // 12 month ago\r\n                    startDate3 = new Date(today.setMonth(thisMonth - 6)).toISOString().substring(0, 10);\r\n                    let url_6month = baseUrl2 + func2 + key2 + `symbols=${syb}&date_from=${startDate3}&date_to=${endDate}`;\r\n                    await sleep(1100);\r\n                    try {\r\n                        const getData = await axios.get(url_6month);\r\n\r\n                        if (getData && getData.data && getData.data.data) {\r\n                            let dataArr = getData.data.data;\r\n                            //console.log('SixMonData',dataArr);\r\n                            let resultList = [];\r\n\r\n                            for (let j = dataArr.length - 1; j >= 0; j--) {\r\n                                let curr = dataArr[j];\r\n                                let newElement = {\r\n                                    date: curr.date.substring(0, 10),\r\n                                    open: curr.open,\r\n                                    close: curr.close,\r\n                                    high: curr.high,\r\n                                    low: curr.low,\r\n                                    \"Low - High\": [curr.low, curr.high],\r\n                                    \"open - close\": [curr.open, curr.close]\r\n                                }\r\n                                resultList.push(newElement);\r\n                            }\r\n                            // console.log('resultList',resultList);\r\n                            let SixMonObj = {\r\n                                index: i,\r\n                                symbol: syb,\r\n                                symbolData: resultList\r\n                            }\r\n                            userData.push(SixMonObj);\r\n\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        continue;\r\n                    }\r\n\r\n\r\n                }\r\n                console.log('Six Month user data', userData);\r\n                setUserSixMonData(userData);\r\n\r\n            }\r\n\r\n        }\r\n        //------------get one year data--------------------------------------- \r\n        async function getOneYearData(stockList) {\r\n            if (!stockList) throw 'no stockList'\r\n\r\n            let userData = [];\r\n            //for test\r\n\r\n            if (stockList.length > 0) {\r\n                for (let i = 0; i < stockList.length; i++) {\r\n                    let syb = stockList[i];\r\n                    let today = new Date();\r\n                    let yesterday = new Date(today.setDate(today.getDate() - 1)).toISOString().substring(0, 10);\r\n                    // console.log('yesterDay',yesterday);\r\n                    let endDate = yesterday;\r\n                    let thisMonth = today.getMonth();\r\n                    let startDate4;  //12 month\r\n                    startDate4 = new Date(today.setMonth(thisMonth - 12)).toISOString().substring(0, 10);\r\n\r\n                    let url_1year = baseUrl2 + func2 + key2 + `symbols=${syb}&date_from=${startDate4}&date_to=${endDate}&limit=500`;\r\n                    await sleep(1100);\r\n                    try {\r\n                        const getData = await axios.get(url_1year);\r\n\r\n                        if (getData && getData.data && getData.data.data) {\r\n                            let dataArr = getData.data.data;\r\n                            //console.log('SixMonData',dataArr);\r\n                            let resultList = [];\r\n\r\n                            for (let j = dataArr.length - 1; j >= 0; j--) {\r\n                                let curr = dataArr[j];\r\n                                let newElement = {\r\n                                    date: curr.date.substring(0, 10),\r\n                                    open: curr.open,\r\n                                    close: curr.close,\r\n                                    high: curr.high,\r\n                                    low: curr.low,\r\n                                    \"Low - High\": [curr.low, curr.high],\r\n                                    \"open - close\": [curr.open, curr.close]\r\n                                }\r\n                                resultList.push(newElement);\r\n                            }\r\n                            // console.log('resultList',resultList);\r\n                            let Obj = {\r\n                                index: i,\r\n                                symbol: syb,\r\n                                symbolData: resultList\r\n                            }\r\n                            userData.push(Obj);\r\n\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        continue;\r\n                    }\r\n\r\n\r\n                }\r\n                console.log('12 Month user data', userData);\r\n                setUserOneYearData(userData);\r\n            }\r\n\r\n        }\r\n\r\n        fetchData();\r\n        //get user info\r\n \r\n        async function getUserData(){\r\n            if (content) {\r\n                const { currentUser } = content\r\n               // console.log(currenUser);\r\n                if (currentUser) {\r\n                    let userId = currentUser.uid \r\n                    console.log('user id', userId)\r\n                    try {\r\n                        let user = await axios.get(serverUrl+userId);\r\n                       // let user = Object.assign({},userTest)\r\n                        console.log('test user here', user)\r\n                        if(user){\r\n                            getIntodayData(user.data.stockList);\r\n                            getOneMonthData(user.data.stockList);\r\n                            getThreeMonthData(user.data.stockList);\r\n                            getSixMonthData(user.data.stockList);\r\n                            getOneYearData(user.data.stockList);\r\n                        }else{\r\n                            throw 'user not found'\r\n                        }\r\n                        \r\n                    } catch (error) {\r\n                        console.log(error);\r\n                    }\r\n    \r\n                }\r\n    \r\n    \r\n    \r\n            }\r\n        }\r\n        getUserData()\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    //build bar chart-----------------------\r\n    const buildBarChart = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n                <BarChart width={500} height={250} data={data} barCategoryGap={'30%'} reverseStackOrder={true}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" padding={{ left: 20, right: 20 }} />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={40} />\r\n                    <Bar dataKey=\"Low - High\" fill=\"#008800\" />\r\n                </BarChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //build line chart-----------------------\r\n    const buildLineChart = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n                <LineChart width={500} height={250} data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={40} />\r\n                    <Line type='natural' dot={false} dataKey=\"high\" stroke=\"#6e69cb\" />\r\n                    <Line type='natural' dot={false} dataKey=\"low\" stroke=\"#008800\" />\r\n                </LineChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //build combo chart-----------------------------\r\n    const buildComChart = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n                <ComposedChart width={500} height={250} data={data}>\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={40} />\r\n                    <CartesianGrid stroke=\"#f5f5f5\" />\r\n                    <Bar dataKey=\"Low - High\" fill=\"#008800\" />\r\n                    {/* <Bar dataKey=\"open - close\" fill=\"#cc33ff\"/> */}\r\n                    <Area type=\"monotSix\" dataKey=\"close\" fill=\" #4da3ff\" stroke=\"#267bad\" />\r\n                </ComposedChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //Build Charts for symbol (loggin user)  --------------------\r\n    //build bar chart-----------------------\r\n    const buildBarChartForUser = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n\r\n                <BarChart width={500} height={250} data={data} barCategoryGap={'30%'} reverseStackOrder={true}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={40} />\r\n                    <Bar dataKey=\"open - last\" fill=\"#008800\" />\r\n                </BarChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //build line chart-----------------------\r\n    const buildLineChartForUser = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n\r\n                <LineChart width={500} height={250} data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={40} />\r\n                    <Line type='natural' dot={false} dataKey=\"last\" stroke=\"#4da3ff\" />\r\n                </LineChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //build combo chart-----------------------------\r\n    const buildComChartForUser = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n\r\n                <ComposedChart width={500} height={250} data={data}>\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={40} />\r\n                    <CartesianGrid stroke=\"#f5f5f5\" />\r\n                    <Bar dataKey=\"Low - High\" fill=\"#008800\" />\r\n                    {/* <Bar dataKey=\"open - close\" fill=\"#cc33ff\"/> */}\r\n                    <Area type=\"monotSix\" dataKey=\"last\" fill=\"#4da3ff\" stroke=\"#267bad\" />\r\n                </ComposedChart>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    //build a selection div for chart types---------\r\n\r\n    const handleTypeChange = (e) => {\r\n        setType(e.target.value);\r\n    };\r\n    const buildSelection = () => {\r\n        return (\r\n            <Radio.Group value={chartType} onChange={handleTypeChange} >\r\n                <Radio.Button value=\"Bar\">Bar Chart</Radio.Button>\r\n                <Radio.Button value=\"Line\">Line Chart</Radio.Button>\r\n                <Radio.Button value=\"Combo\">Combined Chart</Radio.Button>\r\n            </Radio.Group>\r\n\r\n        )\r\n    }\r\n\r\n    //build a selection div for data time ---------\r\n    const handleTimeChange = (e) => {\r\n        setTime(e.target.value);\r\n    };\r\n    const buildTimeSelection = () => {\r\n        return (\r\n            <Radio.Group value={timeType} onChange={handleTimeChange}>\r\n                <Radio.Button value=\"today\">TODAY</Radio.Button>\r\n                <Radio.Button value=\"1month\">1 MONTH</Radio.Button>\r\n                <Radio.Button value=\"3month\">3 MONTH</Radio.Button>\r\n                <Radio.Button value=\"6month\">6 MONTH</Radio.Button>\r\n                <Radio.Button value=\"1year\">1 YEAR</Radio.Button>\r\n            </Radio.Group>\r\n\r\n        )\r\n    }\r\n\r\n    let body = null\r\n    let userDataDiv = null;\r\n    let showData;\r\n    let selectDiv = buildSelection();\r\n    let selectTimeDiv = buildTimeSelection();\r\n    // set user customized stock data----------------------------------\r\n    if (timeType === '1month') {\r\n        showData = userOneMonData;\r\n    } else if (timeType === '3month') {\r\n        showData = userThreeMonData;\r\n    } else if (timeType === '6month') {\r\n        showData = userSixMonData;\r\n    } else if (timeType === '1year') {\r\n        showData = userOneYearData;\r\n    } else {\r\n        showData = userData; // intraday data\r\n    }\r\n    // console.log('showData', showData);\r\n\r\n    if (showData) {\r\n\r\n        if (timeType === 'today') {\r\n            if (chartType === 'Bar') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildBarChartForUser(chart);\r\n                })\r\n            } else if (chartType === 'Line') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildLineChartForUser(chart);\r\n                })\r\n            } else if (chartType === 'Combo') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildComChartForUser(chart);\r\n\r\n                })\r\n            } else {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildBarChartForUser(chart);\r\n                })\r\n            }\r\n        } else {\r\n            if (chartType === 'Bar') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildBarChart(chart);\r\n                })\r\n            } else if (chartType === 'Line') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildLineChart(chart);\r\n                })\r\n            } else if (chartType === 'Combo') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildComChart(chart);\r\n\r\n                })\r\n            } else {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildBarChart(chart);\r\n                })\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n    // return---------------------------------\r\n    if (chartData) {\r\n        if (chartType === 'Bar') {\r\n            body = chartData.map((chart) => {\r\n                return buildBarChart(chart);\r\n            })\r\n        } else if (chartType === 'Line') {\r\n            body = chartData.map((chart) => {\r\n                return buildLineChart(chart);\r\n            })\r\n        } else if (chartType === 'Combo') {\r\n            body = chartData.map((chart) => {\r\n                return buildComChart(chart);\r\n\r\n            })\r\n        } else {\r\n            body = chartData.map((chart) => {\r\n                return buildBarChart(chart);\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header className=\"site-layout-background\" style={{ textAlign: 'center' }} style={{ padding: 0 }} >\r\n                    {selectDiv}\r\n                </Header>\r\n                <Typography><p className=\"chartTitle\">Market Indices</p></Typography>\r\n                <Row gutter={16}>\r\n                    {body}\r\n                </Row>\r\n                <br />\r\n                <br />\r\n                <Typography><p className=\"chartTitle\">Your Following Stocks</p></Typography>\r\n                <Header className=\"site-layout-background\" style={{ textAlign: 'center' }} style={{ padding: 0 }} >\r\n                    {selectTimeDiv}\r\n                </Header>\r\n                <Row gutter={16}>\r\n                    <br />\r\n                    {userDataDiv ? userDataDiv : (<Typography><p className=\"Info\">Your are not Following any stocks or you need to log in to see the data.</p></Typography>)}\r\n                </Row>\r\n                <BackTop>\r\n                    <div style={style}>UP</div>\r\n                </BackTop>\r\n            </div>\r\n\r\n        )\r\n\r\n    } else if (loading) {\r\n        return (\r\n            <Alert\r\n                message=\"Loading\"\r\n                description=\"Please wait a few seconds...\"\r\n                type=\"info\"\r\n            />)\r\n    } else if (error) {\r\n        return (\r\n            <Alert\r\n                message=\"404 Error\"\r\n                description=\"Something wrong, please try again later.\"\r\n                type=\"error\"\r\n            />)\r\n    }\r\n\r\n}\r\nexport default Charts;","import React, { useEffect, useState, useContext } from 'react';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport axios from 'axios'\r\nimport 'antd/dist/antd.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Row, Col, Alert, Typography, Card, Tag, Image, Comment, BackTop } from 'antd';\r\nimport imageMagick from 'imagemagick';\r\nimport fs from 'fs'\r\nimport '../App.css';\r\nimport SearchNews from './SearchNews';\r\n\r\n\r\nconst style = {\r\n    height: 30,\r\n    width: 30,\r\n    lineHeight: '40px',\r\n    borderRadius: 4,\r\n    backgroundColor: '#00254d',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    fontSize: 14,\r\n};\r\n\r\nconst userTest = { id: 'idabc', stockList: ['AAPL', 'IBM', 'BA', 'GOOGL', 'FB', 'NVDA'] }\r\nlet testMode = false;\r\n\r\nconst News = (props) => {\r\n    const content = useContext(AuthContext);\r\n\r\n    const [news, setNews] = useState(undefined);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [userNews, setUserNews] = useState(undefined);\r\n    const [searchNews, setSearchNews] = useState(undefined);\r\n    const [user, setUser] = useState(undefined);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const baseUrl = \"https://newsapi.org/v2/top-headlines?\"\r\n    const key = \"apiKey=1e4211b8b7a3444cbbb2e736508f489a\"\r\n    const serverUrl = \"https://cors-anywhere.herokuapp.com/http://ownstockmodel.herokuapp.com/api/user/\"\r\n\r\n\r\n    //set delay because of API limitition...\r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n    //get company name from ticker for news search\r\n    async function getCompanyName(ticker) {\r\n        if (!ticker || ticker === '') throw 'You need to provide ticker'\r\n        // console.log(ticker)\r\n        try {\r\n            const nameData = await axios.get('https://api.iextrading.com/1.0/ref-data/symbols')\r\n            let symbolList = nameData.data\r\n\r\n            //  console.log(symbolList);\r\n            // console.log(symbolList.length)\r\n            for (let i = 0; i < symbolList.length; i++) {\r\n                //  console.log(symbolList[i])\r\n                if (symbolList[i].symbol == ticker) {\r\n                    //console.log(symbolList[i])        \r\n                    return symbolList[i].name;\r\n                }\r\n            }\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    //shuffle an array\r\n    function shuffle(arr) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            let x = Math.floor(Math.random() * arr.length);\r\n            let y = Math.floor(Math.random() * arr.length);\r\n            if (x === y) { //for dont change arr[index] with self !!!\r\n                continue;\r\n            }\r\n            let temp0 = arr[x];\r\n            arr[x] = arr[y];\r\n            arr[y] = temp0;\r\n        }\r\n        return arr\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        //fetch public news-------\r\n        async function fetchPulicNews() {\r\n\r\n            let resultList = []\r\n            try {\r\n                console.log('news useEffect fired.\\n');\r\n                let symbolList = ['stock', 'NASDAQ', 'market'];\r\n\r\n                for (let i = 0; i < symbolList.length; i++) {\r\n\r\n                    // console.log(newName);\r\n                    let url = baseUrl + `q=${symbolList[i]}&${key}`\r\n                    // console.log(url)\r\n                    try {\r\n                        const news = await axios.get(url);\r\n                        if (news.data && news.data.articles) {\r\n                            // console.log(news.data.articles)\r\n                            if (news.data.articles.length > 0) {\r\n                                for (let j = 0; j < news.data.articles.length; j++) {\r\n                                    let currNews = news.data.articles[j];\r\n                                    let key = uuidv4();\r\n                                    //  console.log('publicNews:',currNews);\r\n                                    // imageProcess(key,currNews.urlToImage);\r\n                                    // to do :using imageMagick to process\r\n                                    let newsDate = new Date(currNews.publishedAt).toLocaleString()\r\n                                    //  console.log(newsDate);\r\n                                    let item = {\r\n                                        key: key,\r\n                                        title: currNews.title,\r\n                                        url: currNews.url,\r\n                                        //  image: `../img/${key}-resized.jpg`,\r\n                                        image: currNews.urlToImage,\r\n                                        content: currNews.content,\r\n                                        description: currNews.description,\r\n                                        source: currNews.source.name,\r\n                                        author: currNews.author,\r\n                                        date: newsDate\r\n\r\n                                    }\r\n\r\n                                    resultList.push(item);\r\n                                }\r\n                            }\r\n                        }\r\n                    } catch (error) {\r\n                        // console.log(error);\r\n                        continue;\r\n                    }\r\n                }\r\n                let result = shuffle(resultList);\r\n                setNews(result);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                // console.log(error)\r\n                setError(true);\r\n            }\r\n        }\r\n\r\n        //fetch news data as an random array----------------------\r\n        async function fetchNewsList(stockList) {\r\n            //let currUser = Object.assign(userTest);\r\n            let resultList = []\r\n            try {\r\n                console.log('news useEffect fired.\\n');\r\n                let symbolList = stockList;\r\n                if (symbolList.length > 0) {\r\n                    for (let i = 0; i < symbolList.length; i++) {\r\n                        let companyName = await getCompanyName(symbolList[i]);\r\n                        let newName = companyName.split(' ')\r\n                        // console.log(newName);\r\n                        let url = baseUrl + `q=${newName[0]}&${key}`\r\n                        // console.log(url)\r\n                        try {\r\n                            const news = await axios.get(url);\r\n                            if (news.data && news.data.articles) {\r\n                                // console.log(news.data.articles)\r\n                                if (news.data.articles.length > 0) {\r\n                                    for (let j = 0; j < news.data.articles.length; j++) {\r\n                                        let currNews = news.data.articles[j];\r\n                                        let key = uuidv4();\r\n\r\n                                        let newsDate = new Date(currNews.publishedAt).toLocaleString()\r\n                                        //console.log(newsDate);\r\n                                        let item = {\r\n                                            key: key,\r\n                                            title: currNews.title,\r\n                                            url: currNews.url,\r\n                                            //  image: `../img/${key}-resized.jpg`,\r\n                                            image: currNews.urlToImage,\r\n                                            content: currNews.content,\r\n                                            description: currNews.description,\r\n                                            source: currNews.source.name,\r\n                                            author: currNews.author,\r\n                                            date: newsDate\r\n\r\n                                        }\r\n\r\n                                        resultList.push(item);\r\n                                    }\r\n                                }\r\n                            }\r\n                        } catch (error) {\r\n                            // console.log(error);\r\n                            continue;\r\n                        }\r\n\r\n                    }\r\n                    let result = shuffle(resultList);\r\n\r\n                    setUserNews(result);\r\n                    setLoading(false);\r\n                }\r\n\r\n            } catch (error) {\r\n                // console.log(error)\r\n                setError(true);\r\n            }\r\n        }\r\n        fetchPulicNews();\r\n\r\n        async function getUserData() {\r\n            if (content) {\r\n                const { currentUser } = content\r\n\r\n                console.log('news current User', currentUser);\r\n                if (currentUser) {\r\n                    let userId = currentUser.uid\r\n                    console.log('user id', userId)\r\n\r\n                    try {\r\n                        const user = await axios.get(serverUrl + userId);\r\n                        if (user) {\r\n                            fetchNewsList(user.data.stockList);\r\n                        } else {\r\n                            throw 'user not found'\r\n                        }\r\n\r\n                    } catch (error) {\r\n                        console.log(error);\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        getUserData();\r\n\r\n    }, [])\r\n    // let searchDataDiv = null;\r\n    // useEffect(() => {\r\n    //     async function fetchSearchNews() {\r\n\r\n    //         let resultList = []\r\n\r\n    //         console.log('search news useEffect fired.\\n');\r\n\r\n    //         let url = baseUrl + `q=${searchTerm}&${key}`\r\n    //         try {\r\n    //             const news = await axios.get(url);\r\n    //             if (news.data && news.data.articles) {\r\n    //                 // console.log(news.data.articles)\r\n    //                 if (news.data.articles.length > 0) {\r\n    //                     for (let j = 0; j < news.data.articles.length; j++) {\r\n    //                         let currNews = news.data.articles[j];\r\n    //                         let key = uuidv4();\r\n    //                         //  console.log('publicNews:',currNews);\r\n    //                         // imageProcess(key,currNews.urlToImage);\r\n    //                         // to do :using imageMagick to process\r\n    //                         let newsDate = new Date(currNews.publishedAt).toLocaleString()\r\n    //                         //  console.log(newsDate);\r\n    //                         let item = {\r\n    //                             key: key,\r\n    //                             title: currNews.title,\r\n    //                             url: currNews.url,\r\n    //                             //  image: `../img/${key}-resized.jpg`,\r\n    //                             image: currNews.urlToImage,\r\n    //                             content: currNews.content,\r\n    //                             description: currNews.description,\r\n    //                             source: currNews.source.name,\r\n    //                             author: currNews.author,\r\n    //                             date: newsDate\r\n\r\n    //                         }\r\n\r\n    //                         resultList.push(item);\r\n    //                     }\r\n    //                     setSearchNews(resultList);\r\n    //                     setLoading(false);\r\n    //                 }\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //         }\r\n\r\n\r\n    //     }\r\n    //     if (searchTerm) {\r\n    //         fetchSearchNews();\r\n    //     }\r\n\r\n    // }, [searchTerm]);\r\n    // //console.log(props)\r\n    // const searchValue = async (value) => {\r\n    //     setSearchTerm(value);\r\n    // };\r\n    // build news slide\r\n    const buildSlide = (news) => {\r\n\r\n        return (\r\n            <Col key={news.key} className=\"gutter-row\" xs={24} sm={24} md={12} lg={8} >\r\n\r\n                <Card key={news.key}\r\n                    hoverable\r\n                    style={{ padding: '8px 0' }}\r\n                    title={news.title ? news.title : \" \"}\r\n                    // style={{ width: 700}}\r\n                    extra={<a href={news.url} aria-label=\"more content link\">More</a>}\r\n                >\r\n                    <Image className=\"center\" src={news.image} alt=\"News Image\" />\r\n                    <p>\r\n                        <Tag color=\"blue\">{news.source}</Tag>\r\n                    </p>\r\n\r\n                    <Comment\r\n                        author={news.author}\r\n                        datetime={news.date}\r\n                        content={news.description ? news.description.substring(0, 200) : \"\"}\r\n                    />\r\n                </Card>\r\n\r\n            </Col>\r\n\r\n\r\n        )\r\n\r\n\r\n    }\r\n\r\n    let newsBody = null\r\n    //console.log(news);\r\n    const sample = [\r\n        {\r\n            author: \"Tina Zeinlinger, Jan Guldner\",\r\n            content: \"Trading-Apps sind auf dem Vormarsch und mit ihnen der Trend zum immer schnelleren Handeln und Spekulieren. Börsencoaches und Finanzgurus im Internet nutzen das aus. In ihren Online-Seminaren und Vide… [+798 chars]\",\r\n            date: \"5/18/2021, 8:53:30 AM\",\r\n            description: \"Tina hat sich als Daytraderin an der Börse versucht. Was sie von Börsentrainern gelernt hat, auf welche Marketingtricks sie reingefallen ist und was CFDs mit Brokkoli zu tun haben.\",\r\n            image: \"https://www.wiwo.de/images/wiwo_money_mates_640x360px_v2/27180132/2-format11240.jpg\",\r\n            key: \"2d6f7bba-6b8e-4cbe-85a5-18ebd2a50d59\",\r\n            source: \"Wirtschafts Woche\",\r\n            title: \"Daytrading lernen: Funktioniert Geld verdienen mit Trading Apps?\",\r\n            url: \"https://www.wiwo.de/podcast/money-mates/podcast-money-mates-daytrading-lernen-was-taugen-boersen-seminare-und-onlinekurse/27180130.html\"\r\n        },\r\n        {\r\n            author: \"Herbert Lash\",\r\n            content: \"NEW YORK/LONDON (Reuters) - Global stock markets fell on Thursday as a continued rise in the number of coronavirus cases dashed hopes of a swift recovery from the pandemic-induced economic slump and … [+4758 chars]\",\r\n            date: \"6/18/2020, 3:36:18 PM\",\r\n            description: \"Global stock markets fell on Thursday as a continued rise in the number of coronavirus cases dashed hopes of a swift recovery from the pandemic-induced economic slump and drove demand for safe-haven currencies such as the dollar and Japanese yen.\",\r\n            image: \"https://s2.reutersmedia.net/resources/r/?m=02&d=20200618&t=2&i=1522723273&w=1200&r=LYNXMPEG5H1UF\",\r\n            key: \"a90d5656-99c5-4dd0-8b59-a07cc754c081\",\r\n            source: \"Reuters\",\r\n            title: \"World stock markets slip on second wave virus fears, safe-havens rise\",\r\n            url: \"http://feeds.reuters.com/~r/reuters/topNews/~3/XK0b5K8AM14/world-stock-markets-slip-on-second-wave-virus-fears-safe-havens-rise-idUSKBN23P001\"\r\n        },\r\n        {\r\n            author: \"FourFourTwo Staff\",\r\n            content: \"Arsenal manager Mikel Arteta has pinpointed five positions that the club need to strengthen this summer, according to reports.\\r\\nThe Gunners ran out 1-0 winners against Chelsea on Wednesday thanks to … [+2140 chars]\",\r\n            date: \"5/13/2021, 6:23:01 AM\",\r\n            description: \"The Spaniard is keen to improve his squad when the transfer market reopens\",\r\n            image: \"https://cdn.mos.cms.futurecdn.net/cGSbzSU4G7BjktnaEiwBc5-1200-80.jpg\",\r\n            key: \"cca9120d-4a70-46c3-ba1a-94150a80d614\",\r\n            source: \"FourFourTwo\",\r\n            title: \"Arsenal transfer news: Mikel Arteta wants to strengthen five positions this summer\",\r\n            url: \"https://www.fourfourtwo.com/news/arsenal-transfer-news-mikel-arteta-wants-to-strengthen-five-positions-this-summer\"\r\n        },\r\n        {\r\n            author: \"FourFourTwo Staff\",\r\n            content: \"Liverpool manager Jurgen Klopp has ruled out marquee signings in this summers transfer market.\\r\\nThe Reds have endured a disappointing season and might need to win all four of their remaining games to… [+2037 chars]\",\r\n            date: \"5/13/2021, 5:00:01 AM\",\r\n            description: \"The Reds boss does not expect to entice a world-class superstar to Anfield this summer\",\r\n            image: \"https://cdn.mos.cms.futurecdn.net/QNerreSfu6u8gfT4DRTHsc-1200-80.jpg\",\r\n            key: \"1aacad58-ade2-40e9-9803-21d39b9969da\",\r\n            source: \"FourFourTwo\",\r\n            title: \"Liverpool transfer news: Jurgen Klopp rules out marquee signings in ‘strange’ market\",\r\n            url: \"https://www.fourfourtwo.com/news/liverpool-transfer-news-jurgen-klopp-rules-out-marquee-signings-in-strange-market\",\r\n        },\r\n        {\r\n            author: \"Ryan Gilliam\",\r\n            content: \"BioWare clearly put some love into the Mass Effect Legendary edition, with a host of small changes included for the biggest of Mass Effect fans. Players discovered one such change over the weekend, w… [+2923 chars]\",\r\n            date: \"5/17/2021, 11:35:09 AM\",\r\n            description: \"Tali’Zorah, one of Mass Effect’s most important crewmates, had a rough ending in Mass Effect 3. After players romanced her, they got a stock image of a woman that was supposed to be her on their bed. But with the Mass Effect Legendary Edition, BioWare finally…\",\r\n            image: \"https://cdn.vox-cdn.com/thumbor/8hnecxOkECAtHBQcVgDwmKrsBpY=/0x0:960x503/fit-in/1200x630/cdn.vox-cdn.com/assets/4689397/mass-effect-2-shepard-tali-romance_960.jpg\",\r\n            key: \"9e6b5650-8bd9-42cf-97c0-847e7fa4f948\",\r\n            source: \"Polygon\",\r\n            title: \"Mass Effect Legendary Edition finally lets players see Tali’s face\",\r\n            url: \"https://www.polygon.com/22440235/mass-effect-legendary-edition-3-tali-zorah-face-image-controversy-update\"\r\n        },\r\n        {\r\n            author: \"Ivan Mehta\",\r\n            content: \"China is one of the biggest markets in the world for Apples products. In its recent quarterly results, the company registered a whopping $17.7 billion in iPhone sales in the region.\\r\\nHowever, this st… [+3242 chars]\",\r\n            date: \"5/18/2021, 7:08:17 AM\",\r\n            description: \"China is one of the biggest markets in the world for Apple's products. In its recent quarterly results, the company registered a whopping $17.7 billion in iPhone sales in the region.\\r\\n\\r\\nHowever, ...\",\r\n            image: \"https://img-cdn.tnwcdn.com/image/tnw?filter_last=1&fit=1280%2C640&url=https%3A%2F%2Fcdn0.tnwcdn.com%2Fwp-content%2Fblogs.dir%2F1%2Ffiles%2F2020%2F06%2FTim-Cook-closeup.jpg&signature=dce038f2370ffd2d2f883d998d5de0a6\",\r\n            key: \"640e1646-067b-4ce3-a02a-cdeff2aa4d89\",\r\n            source: \"The Next Web\",\r\n            title: \"How Apple reportedly gave up control of iCloud for business growth in China\",\r\n            url: \"http://thenextweb.com/news/apple-icloud-security-china-encryption-nyt-report\"\r\n        }\r\n    ]\r\n    let infoDiv = null;\r\n    if (searchNews) {\r\n        newsBody = searchNews.map((singleNews) => {\r\n            return buildSlide(singleNews);\r\n        })\r\n    } else if (userNews) {\r\n        newsBody = userNews.map((news) => {\r\n            return buildSlide(news);\r\n        })\r\n    } else if (news) {\r\n        newsBody = news.map((singleNews) => {\r\n            return buildSlide(singleNews);\r\n        })\r\n    } else {\r\n        infoDiv = <div>These are sample news. Go to localhost:3000 for user following news.</div>\r\n        newsBody = sample.map((singleNews) => {\r\n            return buildSlide(singleNews);\r\n        })\r\n    }\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <Alert\r\n                message=\"Loading\"\r\n                description=\"Please wait a few seconds...\"\r\n                type=\"info\"\r\n            />)\r\n    }\r\n    else {\r\n        return (\r\n            <div >\r\n                {/* <SearchNews searchValue={searchValue} /> */}\r\n                {infoDiv}\r\n                <br />\r\n                <Row gutter={16}>\r\n                    {newsBody}\r\n                </Row>\r\n                <BackTop>\r\n                    <div style={style}>UP</div>\r\n                </BackTop>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default News;","import React from 'react';\r\nimport { doSocialSignIn } from '../firebase/FirebaseFunctions';\r\n\r\nconst SocialSignIn = () => {\r\n  const socialSignOn = async (provider) => {\r\n    try {\r\n      await doSocialSignIn(provider);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <img\r\n        onClick={() => socialSignOn('google')}\r\n        alt=\"google signin\"\r\n        src=\"/imgs/btn_google_signin.png\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialSignIn;","import React, { useContext } from 'react';\r\nimport SocialSignIn from './SocialSignIn';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport {\r\n  doSignInWithEmailAndPassword,\r\n  doPasswordReset\r\n} from '../firebase/FirebaseFunctions';\r\n\r\nfunction SignIn() {\r\n  const  currentUser  = useContext(AuthContext);\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    let { email, password } = event.target.elements;\r\n\r\n    try {\r\n      await doSignInWithEmailAndPassword(email.value, password.value);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const passwordReset = (event) => {\r\n    event.preventDefault();\r\n    let email = document.getElementById('email').value;\r\n    if (email) {\r\n      doPasswordReset(email);\r\n      alert('Password reset email was sent');\r\n    } else {\r\n      alert(\r\n        'Please enter an email address below before you click the forgot password link'\r\n      );\r\n    }\r\n  };\r\n  if (currentUser.currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Log in</h1>\r\n      <form onSubmit={handleLogin}>\r\n        <div className=\"form-group\">\r\n          <label>\r\n            Email:\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>\r\n            Password:\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\">Log in</button>\r\n\r\n        <button className=\"forgotPassword\" onClick={passwordReset}>\r\n          Forgot Password\r\n        </button>\r\n      </form>\r\n\r\n      <br />\r\n      <SocialSignIn />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst Loading = () => {\r\n    return <p>This is SignIn Page</p>\r\n};\r\n\r\nexport default Loading;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { doCreateUserWithEmailAndPassword } from '../firebase/FirebaseFunctions';\r\nimport {AuthContext}  from '../firebase/Auth';\r\nimport SocialSignIn from './SocialSignIn';\r\nimport axios from 'axios';\r\nfunction SignUp() {\r\n  const  currentUser  = useContext(AuthContext);\r\n  const [ifcurrentUser, setcurrentUser] = useState(false);\r\n  const [pwMatch, setPwMatch] = useState('');\r\n/*\r\n  const bool_func = async () => {\r\n    let obj_info = {\r\n      userName: currentUser.currentUser.email,\r\n      profileImg: ''\r\n    }\r\n    console.log(\"bro\")\r\n    setcurrentUser(true)\r\n    await axios.post(`https://localhost:3006/api/user/${currentUser.currentUser.uid}`, obj_info)\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"in useEffect, Signup\")\r\n    \r\n\r\n    if (currentUser.currentUser) {\r\n      console.log(currentUser.currentUser.uid)\r\n      bool_func()\r\n    }\r\n\r\n  }, [])\r\n*/\r\n\r\n\r\n  if(currentUser.currentUser){\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    const { displayName, email, passwordOne, passwordTwo } = e.target.elements;\r\n    if (passwordOne.value !== passwordTwo.value) {\r\n      setPwMatch('Passwords do not match');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      console.log(\"Start creating the user\")\r\n      await doCreateUserWithEmailAndPassword(\r\n        email.value,\r\n        passwordOne.value,\r\n        displayName\r\n      );\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Sign up</h1>\r\n      {pwMatch && <h4 className=\"error\">{pwMatch}</h4>}\r\n      <form onSubmit={handleSignUp}>\r\n        <div className=\"form-group\">\r\n          <label>\r\n            Name:\r\n            <input\r\n              className=\"form-control\"\r\n              required\r\n              name=\"displayName\"\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>\r\n            Email:\r\n            <input\r\n              className=\"form-control\"\r\n              required\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>\r\n            Password:\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"passwordOne\"\r\n              name=\"passwordOne\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>\r\n            Confirm Password:\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"passwordTwo\"\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <button id=\"submitButton\" name=\"submitButton\" type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n      </form>\r\n      <br />\r\n      <SocialSignIn />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useContext, useState } from 'react';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport { doChangePassword } from '../firebase/FirebaseFunctions';\r\nimport '../App.css';\r\n\r\nfunction ChangePassword() {\r\n  const  currentUser  = useContext(AuthContext);\r\n  const [pwMatch, setPwMatch] = useState('');\r\n  console.log(currentUser);\r\n\r\n  const submitForm = async (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      currentPassword,\r\n      newPasswordOne,\r\n      newPasswordTwo\r\n    } = event.target.elements;\r\n\r\n    if (newPasswordOne.value !== newPasswordTwo.value) {\r\n      setPwMatch('New Passwords do not match, please try again');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      await doChangePassword(\r\n        currentUser.currentUser.email,\r\n        currentPassword.value,\r\n        newPasswordOne.value\r\n      );\r\n      alert('Password has been changed, you will now be logged out');\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  if (currentUser.currentUser.providerData[0].providerId === 'password') {\r\n    return (\r\n      <div>\r\n        {pwMatch && <h4 className=\"error\">{pwMatch}</h4>}\r\n        <h2>Change Password</h2>\r\n        <form onSubmit={submitForm}>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              Current Password:\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"currentPassword\"\r\n                id=\"currentPassword\"\r\n                type=\"password\"\r\n                placeholder=\"Current Password\"\r\n                required\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>\r\n              New Password:\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"newPasswordOne\"\r\n                id=\"newPasswordOne\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              Confirm New Password:\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"newPasswordTwo\"\r\n                id=\"newPasswordTwo\"\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                required\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <button type=\"submit\">Change Password</button>\r\n        </form>\r\n        <br />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h2>\r\n          You are signed in using a Social Media Provider, You cannot change\r\n          your password\r\n        </h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChangePassword;","import React from 'react';\r\nimport SignOutButton from './SignOut';\r\nimport '../App.css';\r\nimport ChangePassword from './ChangePassword';\r\n\r\nfunction Account() {\r\n  return (\r\n    <div>\r\n      <h2>Account Page</h2>\r\n      <ChangePassword />\r\n      <SignOutButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Account;","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../firebase/Auth';\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const currentUser  = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) =>\r\n        !!currentUser.currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={'sigin'} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;","import React, {useState, useEffect, useContext} from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport '../App.css';\r\n\r\n\r\nconst Profile = (props) => {\r\n    const currentUser = useContext(AuthContext)\r\n\r\n    const [profileData, setProfileData] = useState(undefined);\r\n    const [profileId, setprofileId] = useState('')\r\n    const [loading, setloading] = useState(true);\r\n    let base_url = `https://cors-anywhere.herokuapp.com/http://ownstockmodel.herokuapp.com/api/user/${currentUser.currentUser.uid}`\r\n    const updateProfile = async (event) => {\r\n        event.preventDefault();\r\n        let { userName, addStock, deleteStock } = event.target.elements;\r\n        const user_info = await axios.get(base_url)\r\n        let old_stock_list = user_info.data.stockList\r\n        let updateName, updatestock;\r\n        if(userName.value !== '') updateName = userName.value\r\n        else updateName = user_info.data.userName\r\n        if(addStock.value !== '') old_stock_list.push(addStock.value)\r\n        if(deleteStock.value !== '' && !old_stock_list.includes(deleteStock.value)){\r\n\r\n        }\r\n        if(deleteStock.value !== '' && old_stock_list.includes(deleteStock.value)) {\r\n            for(let i = 0; i < old_stock_list.length; i++){\r\n                if(old_stock_list[i] === deleteStock.value){\r\n                    old_stock_list.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        try {\r\n          await axios.patch(base_url, {userName: updateName, profileImg: '', stockList: old_stock_list})\r\n          alert(\"Successfully update user info, Please refreash the page\")\r\n        } catch (error) {\r\n          alert(error);\r\n        }\r\n      };\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                base_url = `https://cors-anywhere.herokuapp.com/http://ownstockmodel.herokuapp.com/api/user/${currentUser.currentUser.uid}`\r\n                const user_info = await axios.get(base_url)\r\n                \r\n                if(user_info.data.userName === null && user_info.data.profileImg === null){\r\n                    user_info = await axios.patch(base_url, {userName: currentUser.currentUser.email, profileImg: '', stockList: ['AAPL', 'IBM', 'NVDA']})\r\n                }\r\n                console.log(user_info)\r\n                setProfileData(user_info.data);\r\n                setloading(false);\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const each_stock = (stock_name) => {\r\n        return <p>{stock_name + '\\t'}</p>\r\n    }\r\n    if(loading){\r\n        return <div>loading</div>\r\n    }\r\n    else{\r\n        console.log(profileData.stockList)\r\n        let html_stock_list = profileData.stockList.map((stock_name) => {\r\n            return each_stock(stock_name);\r\n        })\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h1>User Name: {profileData.userName}</h1>\r\n    \r\n                <h1>User Img: {profileData.profileImg}</h1>\r\n\r\n                <h2>Stock that is watching: </h2>\r\n    \r\n                {html_stock_list}\r\n\r\n                <form onSubmit={updateProfile}>\r\n                    <div className=\"form-group\">\r\n                    <label>\r\n                        Change user name:\r\n                        <input\r\n                        className=\"form-control\"\r\n                        name=\"userName\"\r\n                        id=\"userName\"\r\n                        type=\"userName\"\r\n                        placeholder=\"userName\"\r\n                        />\r\n                    </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>\r\n                        Add Stock:\r\n                        <input\r\n                        className=\"form-control\"\r\n                        name=\"addStock\"\r\n                        type=\"addStock\"\r\n                        placeholder=\"Add Stock\"\r\n                        />\r\n                    </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>\r\n                        Remove Stock:\r\n                        <input\r\n                        className=\"form-control\"\r\n                        name=\"deleteStock\"\r\n                        type=\"deleteStock\"\r\n                        placeholder=\"Remove Stock\"\r\n                        />\r\n                    </label>\r\n                    </div>\r\n                    <button type=\"submit\">update profile</button>\r\n                \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport '../App.css';\r\nimport { List, Avatar } from 'antd';\r\nconst About = () => {\r\n\r\n    const data = [\r\n        {\r\n            title: 'Peijin Zhou',\r\n            github:\"https://github.com/PeijinZhou\"\r\n        },\r\n        {\r\n            title: 'Jiashu Wang',\r\n            github:\"https://github.com/39xdgy\"\r\n        },\r\n        {\r\n            title: 'Ying Liu',\r\n            github:\"https://github.com/yingliu928\"\r\n\r\n        },\r\n        {\r\n            title: 'Vishal Manjunath',\r\n            github:\"https://github.com/vishm08\"\r\n        },\r\n        {\r\n            title: 'Shaunak Saklikar',\r\n            github:\"\"\r\n        },\r\n    ];\r\n    return (\r\n        <div>\r\n            <p className=\"chartName\">Group Members</p>\r\n            <br/>\r\n            <p>We are CS graduate students of Stevens Insititute of Technology.</p>\r\n        <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={data}\r\n            renderItem={item => (\r\n                <List.Item>\r\n                    <List.Item.Meta\r\n                     \r\n                        title={<a href=\"https://ant.design\">{item.title}</a>}\r\n                        description={<a href={item.github}>{item.github}</a>}\r\n                    />\r\n                </List.Item>\r\n            )}\r\n        />\r\n        </div>\r\n\r\n   \r\n    )\r\n};\r\n\r\nexport default About;","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Navigation from './components/Navigation';\r\nimport Home from './components/Home';\r\nimport Charts from './components/Charts'\r\nimport News from './components/News'\r\nimport { AuthProvider } from './firebase/Auth';\r\nimport { Layout } from 'antd';\r\nimport SignIn from './components/SignIn';\r\nimport Loading from './components/Loading';\r\nimport SignUp from './components/SignUp'\r\nimport Account from './components/Account'\r\nimport PrivateRoute from './components/PrivateRoute'\r\nimport Profile from './components/Profile';\r\nimport About from './components/About';\r\n\r\nconst {Content}=Layout;\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <Router>\r\n        <div className='App'>\r\n          <header>\r\n            <Navigation />\r\n          </header>\r\n          <Layout className='site-layout'>\r\n            <Content className=\"main-content\" >\r\n              <div className='App-body'>\r\n                <Route exact path='/' component={Home}/>\r\n                <Route exact path='/charts' component={Charts}/>\r\n                <Route exact path='/news' component={News}/>\r\n                <Route exact path='/sigin' component = {SignIn}/>\r\n                <Route exact path='/signup' component = {SignUp}/>\r\n                <Route exact path='/loading' component = {Loading}/>\r\n\r\n                <Route exact path='/aboutUs' component = {About}/>\r\n\r\n                <Route exact path='/siginup' component = {SignUp}/>\r\n\r\n                <PrivateRoute path=\"/account\" component={Account} />\r\n                <PrivateRoute path=\"/profile\" component={Profile} />\r\n              \r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </div>\r\n      </Router>\r\n      </AuthProvider>\r\n  );\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
{"version":3,"sources":["firebase/Firebase.js","firebase/Auth.js","firebase/FirebaseFunctions.js","components/SignOut.js","components/Navigation.js","components/Home.js","components/Charts.js","components/News.js","components/SocialSignIn.js","components/SignIn.js","components/Loading.js","components/SignUp.js","components/ChangePassword.js","components/Account.js","components/PrivateRoute.js","components/Profile.js","components/About.js","components/modelComponents/TradingData/StockDataFolder/UpdateStatsPrice.js","components/modelComponents/TradingData/StockDataFolder/UpdateStatsDetails.js","components/modelComponents/extraFeaturesFolder/DarkButtonsDisplay.js","components/modelComponents/TradingData/NotFound.js","components/modelComponents/TradingData/ChartsFolder/LCDiagram.js","components/utils/title.js","components/utils/formatDate.js","components/modelComponents/TradingData/ChartsFolder/HADiagram.js","components/modelComponents/TradingData/ChartsFolder/StylizedCandlestick/topcorner/TopCornerDisplay.js","components/modelComponents/TradingData/ChartsFolder/StylizedCandlestick/banner/BannerDisplay.js","components/modelComponents/TradingData/ChartsFolder/StylizedCandlestick/chart/DetailsDisplay.js","components/modelComponents/TradingData/ChartsFolder/StylizedCandlestick/chart/TimeMarkerDisplay.js","components/modelComponents/TradingData/ChartsFolder/StylizedCandlestick/chart/HoverMarkersDisplay.js","components/modelComponents/TradingData/ChartsFolder/StylizedCandlestick/chart/CandleStickChart.js","components/modelComponents/TradingData/ChartsFolder/StylizedCandlestick/index.js","components/modelComponents/TradingData/StockDataFolder/StockQuoteData.js","components/modelComponents/TradingData/Loading.js","components/utils/fetch.js","components/modelComponents/TradingData/MarketDataDetails.js","components/modelComponents/TradingData/StockDataFolder/index.js","components/modelComponents/TradingData/WithInstantSearch.js","components/modelComponents/TradingData/Search/index.js","components/modelComponents/TradingData/Header.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loadingUser","setLoadingUser","useEffect","auth","onAuthStateChanged","user","Provider","value","doCreateUserWithEmailAndPassword","email","password","displayName","a","createUserWithEmailAndPassword","updateProfile","doChangePassword","oldPassword","newPassword","credential","EmailAuthProvider","reauthenticateWithCredential","updatePassword","doSignOut","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSocialSignIn","provider","socialProvider","GoogleAuthProvider","signInWithPopup","sendPasswordResetEmail","signOut","SignOutButton","to","onClick","Sider","Layout","Navigation","NavigationAuth","className","style","overflow","height","position","left","theme","defaultSelectedKeys","mode","Item","SignOut","NavigationUnAuth","useContext","Title","Select","Option","Typography","userTest","Header","Content","id","stockList","Home","props","undefined","userData","userOneMonData","userThreeMonData","userSixMonData","userOneYearData","chartData","setChartData","loading","setLoading","error","setError","chartType","timeType","symbol","baseUrl2","func2","key2","sleep","ms","Promise","resolve","setTimeout","Object","assign","console","log","resultList","i","length","url","axios","get","single","data","symbolResult","curr","xyObject","date","substring","low","high","close","open","push","obj","index","symbolData","fetchData","showData","buildBarChart","xs","sm","md","lg","BarChart","width","barCategoryGap","reverseStackOrder","CartesianGrid","strokeDasharray","XAxis","dataKey","padding","right","YAxis","type","domain","Tooltip","Legend","verticalAlign","Bar","fill","toString","buildLineChart","margin","top","bottom","Line","dot","stroke","buildBarChartForUser","body","Group","Button","map","chart","buildLineChartForUser","ComposedChart","Area","buildComChartForUser","buildComChart","gutter","message","description","lineHeight","borderRadius","backgroundColor","color","textAlign","fontSize","Charts","content","setUserData","setUserOneMonData","setUserThreeMonData","setUserSixMonData","setUserOneYearData","setType","setTime","func3","getIntodayData","getOneMonthData","getThreeMonthData","getSixMonthData","getOneYearData","syb","today","Date","yesterday","setDate","getDate","toISOString","endDate","thisMonth","getMonth","startDate4","setMonth","url_1year","getData","dataArr","j","newElement","Obj","startDate3","url_6month","SixMonObj","startDate2","url_3month","ThreeMonObj","startDate1","url_1month","OneMonObj","userResultList","currDate","getUTCDate","toLocaleTimeString","last","userId","uid","sl","handleTypeChange","e","target","handleTimeChange","userDataDiv","selectDiv","onChange","selectTimeDiv","News","news","setNews","userNews","setUserNews","searchNews","baseUrl","key","serverUrl","getCompanyName","ticker","nameData","symbolList","name","shuffle","arr","x","Math","floor","random","y","temp0","articles","currNews","uuidv4","newsDate","publishedAt","toLocaleString","item","title","image","urlToImage","source","author","result","fetchNewsList","companyName","newName","split","fetchPulicNews","getUserData","buildSlide","hoverable","extra","href","aria-label","src","alt","datetime","newsBody","infoDiv","singleNews","SocialSignIn","socialSignOn","alert","SignIn","handleLogin","event","preventDefault","elements","onSubmit","placeholder","required","document","getElementById","doPasswordReset","Loading","SignUp","pwMatch","setPwMatch","handleSignUp","passwordOne","passwordTwo","ChangePassword","submitForm","currentPassword","newPasswordOne","newPasswordTwo","providerData","providerId","Account","PrivateRoute","RouteComponent","component","rest","render","routeProps","Profile","profileData","setProfileData","setloading","base_url","userName","addStock","deleteStock","user_info","old_stock_list","updateName","includes","splice","patch","profileImg","html_stock_list","stock_name","each_stock","About","itemLayout","dataSource","github","renderItem","Meta","StatWrap","styled","div","StatsPrice","change","percent","toFixed","formattedValue","num","List","floated","StatsDetails","Fragment","Grid","Row","columns","Column","regularMarketOpen","regularMarketDayHigh","regularMarketDayLow","regularMarketVolume","forwardPE","marketCap","fiftyTwoWeekHigh","fiftyTwoWeekLow","fiftyTwoWeekHighChangePercent","trailingAnnualDividendRate","dividendDate","epsTrailingTwelveMonths","DarkButtonStyles","DarkButton","default","activePeriod","setActivePeriod","timeRangeArray","period","stopPropagation","clickEffect","toUpperCase","setTitle","d3","Component","quote","formatMillisecond","timeFormat","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","customTimeFormatter","ChartStyles","HeikinAshi","ha","heikinAshi","ema20","ema","options","windowSize","merge","d","c","accessor","ema50","smaVolume50","sma","sourcePath","this","initialData","calculatedData","ratio","day","volume","sort","discontinuousTimeScaleProvider","inputDateAccessor","xScaleProvider","xScale","xAccessor","displayXAccessor","xExtents","max","seriesName","clamp","yExtents","axisAt","orient","ticks","at","displayFormat","format","yAccessor","itemType","edgeAt","origin","w","h","tickFormat","fitWidth","Banner","tickerSymbol","transform","strokeWidth","fontFamily","StyledBanner","withParentSize","parentWidth","parentHeight","wCenter","hCenter","topCenter","bottomCenter","fillOpacity","logo","increaseNumItems","decreaseNumItems","numItems","StyledDetails","Details","formatPrice","formatNumber","bucket","yScale","bandwidth","halfway","range","boxShadow","fontWeight","StyledTimeMarker","TimeMarker","time","formatTime","HoverMarker","yPoint","x1","x2","y1","y2","strokeOpacity","dy","invert","ySelector","price","bisectDate","Chart","handleTooltip","xSelector","showTooltip","localPoint","x0","d0","d1","tooltipData","tooltipLeft","tooltipTop","state","activeBucket","buckets","hideTooltip","start","end","maxHighPrice","minLowPrice","maxVolume","scaleBand","b","timeScale","scaleTime","scaleLinear","volumeHeight","yVolumeScale","ref","s","svg","GradientOrangeRed","GridRows","lineStyle","pointerEvents","scale","GridColumns","hollow","AxisRight","hideZero","hideTicks","hideAxisLine","tickStroke","tickValues","tickLabelProps","dx","textAnchor","AxisLeft","onMouseMove","xPoint","bandWidth","step","val","setState","onMouseLeave","AxisBottom","withTooltip","StyleWrapper","setNumItems","imgSrc","setImgSrc","slice","sortedBuckets","ascending","min","fetchIntradayData","entries","cols","QuoteData","regularMarketPrice","p1","intraDayFetcher","endsWith","now","getTime","setYear","getFullYear","_p1","_p2","chartDataHandler","fetcher","Segment","Image","onError","size","longName","regularMarketChange","regularMarketChangePercent","stackable","display","justifyContent","xAxis","yAxis","page","Dimmer","active","Loader","inline","defaultProps","parseSparkData","closes","response","indicators","timestamps","timestamp","ts","unixTimeParser","dataZip","fetchIndiciesData","symbols","join","parsedData","spark","COLLECTION","DataContext","DataProvider","fetchingIncidies","setFetchingIndicies","fetchingQuote","setFetchingQuote","setSymbol","quoteData","setQuoteData","peers","indiciesData","setIndiciesData","onMount","YahooQuoteFetcher","quoteResponse","YahooChartDataFetcher","interval","p2","fetched","extractChartData","fetchedData","ohlcv","handleSymbolChange","setTicker","minHeight","searchClient","algoliasearch","WithInstantSearch","InstantSearch","indexName","resultRenderer","Label","letterSpacing","paddingLeft","connectAutoComplete","withRouter","hits","setVal","Search","transparent","icon","iconPosition","fluid","input","onSearchChange","_","debounce","refine","leading","selectFirstResult","onResultSelect","history","results","chain","Symbol","Description","HeaderStyles","ticking","timezone","App","exact","path","match","params","toLowerCase","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.a0644d23.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyADpCYy5NTH_XfmPZ3aLBoy3kEVsdMqk-8\",\r\n    authDomain: \"stock-web-19682.firebaseapp.com\",\r\n    databaseURL: \"https://stock-web-19682-default-rtdb.firebaseio.com\",\r\n    projectId: \"stock-web-19682\",\r\n    storageBucket: \"stock-web-19682.appspot.com\",\r\n    messagingSenderId: \"829141757660\",\r\n    appId: \"1:829141757660:web:43e343088f8719efaace19\",\r\n    measurementId: \"G-WXP8M5V4PM\"\r\n});\r\n\r\nconst storage = firebase.storage();\r\n\r\nexport { storage, firebaseApp as default};","import React, { useState, useEffect } from 'react';\r\nimport firebaseApp from './Firebase';\r\n\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [loadingUser, setLoadingUser] = useState(true);\r\n\r\n    useEffect(() => {\r\n        firebaseApp.auth().onAuthStateChanged((user) => {\r\n            setCurrentUser(user);\r\n            setLoadingUser(false);\r\n        });\r\n    }, []);\r\n\r\n    if (loadingUser) {\r\n        return <div>Loading....</div>;\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ currentUser }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};","import firebase from 'firebase/app';\r\n\r\nasync function doCreateUserWithEmailAndPassword(email, password, displayName) {\r\n    await firebase.auth().createUserWithEmailAndPassword(email, password);\r\n    firebase.auth().currentUser.updateProfile({displayName: displayName});\r\n}\r\n\r\nasync function doChangePassword(email, oldPassword, newPassword) {\r\n    let credential = firebase.auth.EmailAuthProvider.credential(\r\n        email,\r\n        oldPassword\r\n    );\r\n    await firebase.auth().currentUser.reauthenticateWithCredential(credential);\r\n    await firebase.auth().currentUser.updatePassword(newPassword);\r\n    await doSignOut();\r\n}\r\n\r\nasync function doSignInWithEmailAndPassword(email, password) {\r\n    await firebase.auth().signInWithEmailAndPassword(email,password);\r\n}\r\n\r\nasync function doSocialSignIn(provider) {\r\n    let socialProvider = null;\r\n    if (provider === 'google') {\r\n        socialProvider = new firebase.auth.GoogleAuthProvider();\r\n    } \r\n    await firebase.auth().signInWithPopup(socialProvider);\r\n}\r\n\r\nasync function doPasswordReset(email) {\r\n    await firebase.auth().sendPasswordResetEmail(email);\r\n}\r\n\r\nasync function doSignOut() {\r\n    await firebase.auth().signOut();\r\n}\r\n\r\nexport {\r\n    doCreateUserWithEmailAndPassword,\r\n    doChangePassword,\r\n    doSignInWithEmailAndPassword,\r\n    doSocialSignIn,\r\n    doPasswordReset,\r\n    doSignOut\r\n};\r\n","import React from 'react';\r\nimport { doSignOut } from '../firebase/FirebaseFunctions';\r\nimport { Link,Route } from 'react-router-dom';\r\nconst SignOutButton = () => {\r\n  return (\r\n   \r\n    // <button className =\"signOut\" type=\"button\" onClick={doSignOut}>\r\n    //   Sign Out\r\n    // </button>\r\n    <Link to='/' onClick={doSignOut}>Sign Out</Link>\r\n   \r\n  );\r\n};\r\n\r\nexport default SignOutButton;","import React, {useContext} from 'react';\r\nimport { Link,Route } from 'react-router-dom';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport SignOutButton from './SignOut' \r\nimport '../App.css';\r\n\r\nimport { Layout, Menu } from 'antd';\r\n\r\nconst { Sider } = Layout;\r\n\r\nconst Navigation = () => {\r\n    const currentUser  = useContext(AuthContext);\r\n\r\n    const NavigationAuth = () => {\r\n        return(\r\n            <Layout className='hide-mobile'>\r\n                <Sider\r\n                    style={{\r\n                        overflow:'auto',\r\n                        height:'100vh',\r\n                        position:'fixed',\r\n                        left:0,\r\n                    }}\r\n                >\r\n                    <Menu theme='dark' defaultSelectedKeys={['0']} mode='inline'>\r\n                        <Menu.Item key='0' className='logo'>\r\n                            <Link to='/'>STOCKWEB</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='1'>\r\n                            <Link to='/'>Home</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='2'>\r\n                            <Link to='/aboutUs'>About Us</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='8'>\r\n                            <Link to='/account'>Account information</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='3'>\r\n                            <Link to='/profile'>Profile</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='4'>\r\n                            <Link to='/charts'>Charts</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='5'>\r\n                            <Link to='/model'>Model</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='6'>\r\n                            <Link to='/News' >News</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='7'>\r\n                            <SignOutButton/>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n            </Layout>\r\n        );\r\n    };\r\n\r\n    const NavigationUnAuth = () => {\r\n        return (\r\n            <Layout className='hide-mobile'>\r\n                <Sider\r\n                    style={{\r\n                        overflow:'auto',\r\n                        height:'100vh',\r\n                        position:'fixed',\r\n                        left:0,\r\n                    }}\r\n                >\r\n                    <Menu theme='dark' defaultSelectedKeys={['0']} mode='inline'>\r\n                        <Menu.Item key='1' className='logo'>\r\n                            <Link to='/'>STOCKWEB</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='2'>\r\n                            <Link to='/'>Home</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='3'>\r\n                            <Link to='/aboutUs'>About Us</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='4'>\r\n                            <Link to='/sigin'>Sign-In</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='8'>\r\n                            <Link to='/signup'>Sign-Up</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='5'>\r\n                            <Link to='/charts'>Charts</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='6'>\r\n                            <Link to='/models'>Models</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key='7'>\r\n                            <Link to='/news'>News</Link>\r\n                        </Menu.Item>\r\n                        {/* <Menu.Item key='7'>\r\n                            <Link to='/logout'>Logout</Link>\r\n                        </Menu.Item> */}\r\n                    </Menu>\r\n                </Sider>\r\n            </Layout>\r\n        );\r\n    };\r\n\r\n    if(currentUser.currentUser){\r\n        return (<div><NavigationAuth/></div>)\r\n    }\r\n    else{\r\n        return (<div><NavigationUnAuth/></div>)\r\n    }\r\n};\r\n\r\nexport default Navigation;","import React, {useEffect, useState,useContext} from 'react';\r\nimport {AuthContext} from '../firebase/Auth';\r\nimport axios from 'axios'\r\n\r\nimport '../antd.css';\r\nimport { Layout, Row, Col, Select, Radio, Alert, Typography, BackTop } from 'antd';\r\nimport { BarChart, Bar, Line, Area, ComposedChart, LineChart, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\nconst { Header, Sider, Content } = Layout;\r\nconst userTest = { id: 'idabc', stockList: ['AAPL', 'IBM', 'BA', 'GOOGL', 'FB', 'NVDA'] }\r\nlet testMode = true;\r\n\r\nconst style = {\r\n    height: 30,\r\n    width: 30,\r\n    lineHeight: '40px',\r\n    borderRadius: 4,\r\n    backgroundColor: '#00254d',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    fontSize: 14,\r\n};\r\n\r\nfunction Home(props) {\r\n    // const {currentUser} = useContext(AuthContext);\r\n    const [userData, setUserData] = useState(undefined);\r\n    const [userOneMonData, setUserOneMonData] = useState(undefined);//1 month\r\n    const [userThreeMonData, setUserThreeMonData] = useState(undefined);//3 month\r\n    const [userSixMonData, setUserSixMonData] = useState(undefined);//6 month\r\n    const [userOneYearData, setUserOneYearData] = useState(undefined);//1 year\r\n    const [user, setUser] = useState(undefined);\r\n    //user.stockList\r\n    const [chartData, setChartData] = useState(undefined);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [chartType, setType] = useState('Bar');\r\n    const [timeType, setTime] = useState('today');\r\n    const symbol = ['GOOG', 'AAPL', 'AMZN','NKE','SBUX','BA']\r\n\r\n    const key = \"AWWY4QSC0AS018VB\"\r\n    const func = 'TIME_SERIES_INTRADAY'\r\n    const baseUrl1 = `https://www.alphavantage.co/query?`\r\n    const baseUrl2 = 'https://api.marketstack.com/v1/'\r\n    const func2 = \"eod?\"\r\n    const func3 = \"intraday?\"\r\n    const key2 = 'access_key=bc3f4991e9abb86d188bede651d502f4&'\r\n\r\n\r\n    const setUserFunc = () => {\r\n        setUser(userTest);\r\n    }\r\n    let currentUser = Object.assign(userTest);\r\n    //set delay because of API limitition...\r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    //effect when user not loggin\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                console.log(\"user not login useEffect fired.\")\r\n                let resultList = [];\r\n                for (let i = 0; i < symbol.length; i++) {\r\n                    let syb = symbol[i]\r\n                    // let url = baseUrl1+`function=${func}&symbol=${syb}&interval=15min&apikey=${key}`;\r\n                    let url = baseUrl2 + func2 + key2 + `symbols=${syb}&interval=15min`\r\n                    // console.log(url)\r\n                    const single = await axios.get(url);\r\n                    let { data } = single\r\n                    await sleep(1100);\r\n                    // console.log(\"data for chart:\\n\")\r\n                    //  console.log(data)\r\n                    if (data.data) {\r\n                        //   console.log(data.data);\r\n                        let symbolResult = []\r\n                        for (let i = data.data.length - 1; i >= 0; i--) {\r\n                            let curr = data.data[i]\r\n                            //only show today's data\r\n                            //To do: add 1week,1month 6month,1year,5year\r\n                            let xyObject = {\r\n                                date: curr.date.substring(0, 10),\r\n                                low: curr.low,\r\n                                high: curr.high,\r\n                                close: curr.close,\r\n                                \"Low - High\": [curr.low, curr.high],\r\n                                \"open - close\": [curr.open, curr.close]\r\n                            }\r\n                            symbolResult.push(xyObject)\r\n                        }\r\n                        let obj = {\r\n                            index: i,\r\n                            symbol: symbol[i],\r\n                            symbolData: symbolResult\r\n                        }\r\n                        resultList.push(obj);\r\n                    }\r\n                }\r\n                setChartData(resultList);\r\n                setLoading(false);\r\n                // console.log(resultList);           \r\n            } catch (error) {\r\n                setError(true);\r\n            }\r\n        }\r\n        fetchData();\r\n        // if (!!currentUser) {\r\n        //     getIntodayData();\r\n        //     getOneMonthData();\r\n        //     getThreeMonthData();\r\n        //     getSixMonthData();\r\n        //     getOneYearData();\r\n        // }\r\n\r\n    }, [])\r\n\r\n    async function getIntodayData() {\r\n        let userResultList = [];\r\n        if (currentUser.stockList.length > 0) {\r\n            for (let i = 0; i < currentUser.stockList.length; i++) {\r\n\r\n                let syb = currentUser.stockList[i];\r\n                //for logged in user, get intraday data.\r\n                let url = baseUrl2 + func3 + key2 + `symbols=${syb}&interval=15min`\r\n                // console.log(url);\r\n                try {\r\n                    const single = await axios.get(url);\r\n                    let { data } = single\r\n                    await sleep(1100);\r\n                    // console.log(data)\r\n                    if (data.data) {\r\n                        let symbolResult = []\r\n                        for (let i = data.data.length - 1; i >= 0; i--) {//reverse time\r\n                            let curr = data.data[i]\r\n                            // console.log(curr)\r\n                            const today = new Date();\r\n                            // console.log(today.getUTCDate());\r\n                            const currDate = new Date(data.data[i].date);\r\n                            if (today.getUTCDate() === currDate.getUTCDate()) {\r\n                                //only show today's data\r\n                                //To do: add 1week,1month 6month,1year,5year\r\n                                let xyObject = {\r\n                                    date: currDate.toLocaleTimeString(),\r\n                                    low: curr.low,\r\n                                    last: curr.last,\r\n                                    high: curr.high,\r\n                                    close: curr.close,\r\n                                    open: curr.open,\r\n                                    \"open - last\": [curr.open, curr.last],\r\n                                    \"Low - High\": [curr.low, curr.high],\r\n                                    \"open - close\": [curr.open, curr.close],\r\n                                }\r\n                                symbolResult.push(xyObject)\r\n                            }\r\n                        }\r\n                        let obj = {\r\n                            index: i,\r\n                            symbol: syb,\r\n                            symbolData: symbolResult\r\n                        }\r\n                        userResultList.push(obj);\r\n                    } else {\r\n                        console.log(error);\r\n                        continue\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                    continue\r\n                }\r\n            }\r\n            setUserData(userResultList);\r\n            console.log('Introday user data', userResultList)\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    async function getOneMonthData() {\r\n        let currentUser = Object.assign(userTest);\r\n        let userData = [];\r\n        //for test\r\n        // console.log(currentUser);\r\n        if (currentUser.stockList.length > 0) {\r\n            for (let i = 0; i < currentUser.stockList.length; i++) {\r\n                let syb = currentUser.stockList[i];\r\n                let today = new Date();\r\n                let yesterday = new Date(today.setDate(today.getDate() - 1)).toISOString().substring(0, 10);\r\n                // console.log('yesterDay',yesterday);\r\n                let endDate = yesterday;\r\n                //  console.log('endDate',endDate);\r\n                let thisMonth = today.getMonth();\r\n                let startDate1; // 1 month ago\r\n                startDate1 = new Date(today.setMonth(thisMonth - 1)).toISOString().substring(0, 10);\r\n                let url_1month = baseUrl2 + func2 + key2 + `symbols=${syb}&date_from=${startDate1}&date_to=${endDate}`;\r\n                try {\r\n                    const getData = await axios.get(url_1month);\r\n                    await sleep(1100);\r\n                    if (getData && getData.data && getData.data.data) {\r\n                        let dataArr = getData.data.data;\r\n                        //console.log('SixMonData',dataArr);\r\n                        let resultList = [];\r\n                        for (let j = dataArr.length - 1; j >= 0; j--) {\r\n                            let curr = dataArr[j];\r\n                            let newElement = {\r\n                                date: curr.date.substring(0, 10),\r\n                                open: curr.open,\r\n                                close: curr.close,\r\n                                high: curr.high,\r\n                                low: curr.low,\r\n                                \"Low - High\": [curr.low, curr.high],\r\n                                \"open - close\": [curr.open, curr.close]\r\n                            }\r\n                            resultList.push(newElement);\r\n                        }\r\n                        // console.log('resultList',resultList);\r\n                        let OneMonObj = {\r\n                            index: i,\r\n                            symbol: syb,\r\n                            symbolData: resultList\r\n                        }\r\n                        userData.push(OneMonObj);\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                     continue;\r\n                }\r\n            }\r\n            console.log('One Mon user data', userData);\r\n            setUserOneMonData(userData);\r\n        }\r\n\r\n    }\r\n\r\n    async function getThreeMonthData() {\r\n        let currentUser = Object.assign(userTest);\r\n        let userData = [];\r\n        //for test\r\n        // console.log(currentUser);\r\n        if (currentUser.stockList.length > 0) {\r\n            for (let i = 0; i < currentUser.stockList.length; i++) {\r\n                let syb = currentUser.stockList[i];\r\n                let today = new Date();\r\n                let yesterday = new Date(today.setDate(today.getDate() - 1)).toISOString().substring(0, 10);\r\n                // console.log('yesterDay',yesterday);\r\n                let endDate = yesterday;\r\n                //  console.log('endDate',endDate);\r\n                let thisMonth = today.getMonth();\r\n                //  let startDate1; // 1 month ago\r\n                let startDate2; // 6 month ago\r\n                //  let startDate3; // 12 month ago\r\n                // startDate1 = new Date(today.setMonth(thisMonth - 1)).toISOString().substring(0,10);\r\n                startDate2 = new Date(today.setMonth(thisMonth - 3)).toISOString().substring(0, 10);\r\n                let url_3month = baseUrl2 + func2 + key2 + `symbols=${syb}&date_from=${startDate2}&date_to=${endDate}`;\r\n                try {\r\n                    const getData = await axios.get(url_3month);\r\n                    await sleep(1100);\r\n                    if (getData && getData.data && getData.data.data) {\r\n                        let dataArr = getData.data.data;\r\n                        //console.log('SixMonData',dataArr);\r\n                        let resultList = [];\r\n\r\n                        for (let j = dataArr.length - 1; j >= 0; j--) {\r\n                            let curr = dataArr[j];\r\n                            let newElement = {\r\n                                date: curr.date.substring(0, 10),\r\n                                open: curr.open,\r\n                                close: curr.close,\r\n                                high: curr.high,\r\n                                low: curr.low,\r\n                                \"Low - High\": [curr.low, curr.high],\r\n                                \"open - close\": [curr.open, curr.close]\r\n                            }\r\n                            resultList.push(newElement);\r\n                        }\r\n                        // console.log('resultList',resultList);\r\n                        let ThreeMonObj = {\r\n                            index: i,\r\n                            symbol: syb,\r\n                            symbolData: resultList\r\n                        }\r\n                        userData.push(ThreeMonObj);\r\n\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                     continue;\r\n                }\r\n\r\n\r\n            }\r\n            console.log('three Month user data', userData);\r\n            setUserThreeMonData(userData);\r\n        }\r\n\r\n    }\r\n    //------------get six month data--------------------------------------- \r\n    async function getSixMonthData() {\r\n        let currentUser = Object.assign(userTest);\r\n        let userData = [];\r\n        //for test\r\n        // console.log(currentUser);\r\n        if (currentUser.stockList.length > 0) {\r\n            for (let i = 0; i < currentUser.stockList.length; i++) {\r\n                let syb = currentUser.stockList[i];\r\n                let today = new Date();\r\n                let yesterday = new Date(today.setDate(today.getDate() - 1)).toISOString().substring(0, 10);\r\n                // console.log('yesterDay',yesterday);\r\n                let endDate = yesterday;\r\n                //  console.log('endDate',endDate);\r\n                let thisMonth = today.getMonth();\r\n                let startDate3; // 12 month ago\r\n                startDate3 = new Date(today.setMonth(thisMonth - 6)).toISOString().substring(0, 10);\r\n                let url_6month = baseUrl2 + func2 + key2 + `symbols=${syb}&date_from=${startDate3}&date_to=${endDate}`;\r\n               \r\n                try {\r\n                    const getData = await axios.get(url_6month);\r\n                    await sleep(1100);\r\n                    if (getData && getData.data && getData.data.data) {\r\n                        let dataArr = getData.data.data;\r\n                        //console.log('SixMonData',dataArr);\r\n                        let resultList = [];\r\n\r\n                        for (let j = dataArr.length - 1; j >= 0; j--) {\r\n                            let curr = dataArr[j];\r\n                            let newElement = {\r\n                                date: curr.date.substring(0, 10),\r\n                                open: curr.open,\r\n                                close: curr.close,\r\n                                high: curr.high,\r\n                                low: curr.low,\r\n                                \"Low - High\": [curr.low, curr.high],\r\n                                \"open - close\": [curr.open, curr.close]\r\n                            }\r\n                            resultList.push(newElement);\r\n                        }\r\n                        // console.log('resultList',resultList);\r\n                        let SixMonObj = {\r\n                            index: i,\r\n                            symbol: syb,\r\n                            symbolData: resultList\r\n                        }\r\n                        userData.push(SixMonObj);\r\n\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                     continue;\r\n                }\r\n\r\n\r\n            }\r\n            console.log('Six Month user data', userData);\r\n            setUserSixMonData(userData);\r\n        }\r\n\r\n    }\r\n    //------------get one year data--------------------------------------- \r\n    async function getOneYearData() {\r\n        let currentUser = Object.assign(userTest);\r\n        let userData = [];\r\n        //for test\r\n        // console.log(currentUser);\r\n        if (currentUser.stockList.length > 0) {\r\n            for (let i = 0; i < currentUser.stockList.length; i++) {\r\n                let syb = currentUser.stockList[i];\r\n                let today = new Date();\r\n                let yesterday = new Date(today.setDate(today.getDate() - 1)).toISOString().substring(0, 10);\r\n                // console.log('yesterDay',yesterday);\r\n                let endDate = yesterday;\r\n                let thisMonth = today.getMonth();\r\n                let startDate4;  //12 month\r\n                startDate4 = new Date(today.setMonth(thisMonth - 12)).toISOString().substring(0, 10);\r\n\r\n                let url_1year = baseUrl2 + func2 + key2 + `symbols=${syb}&date_from=${startDate4}&date_to=${endDate}`;\r\n                try {\r\n                    const getData = await axios.get(url_1year);\r\n                    await sleep(1100);\r\n                    if (getData && getData.data && getData.data.data) {\r\n                        let dataArr = getData.data.data;\r\n                        //console.log('SixMonData',dataArr);\r\n                        let resultList = [];\r\n\r\n                        for (let j = dataArr.length - 1; j >= 0; j--) {\r\n                            let curr = dataArr[j];\r\n                            let newElement = {\r\n                                date: curr.date.substring(0, 10),\r\n                                open: curr.open,\r\n                                close: curr.close,\r\n                                high: curr.high,\r\n                                low: curr.low,\r\n                                \"Low - High\": [curr.low, curr.high],\r\n                                \"open - close\": [curr.open, curr.close]\r\n                            }\r\n                            resultList.push(newElement);\r\n                        }\r\n                        // console.log('resultList',resultList);\r\n                        let Obj = {\r\n                            index: i,\r\n                            symbol: syb,\r\n                            symbolData: resultList\r\n                        }\r\n                        userData.push(Obj);\r\n\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                    continue;\r\n                }\r\n\r\n\r\n            }\r\n            console.log('12 Month user data', userData);\r\n            setUserOneYearData(userData);\r\n        }\r\n\r\n    }\r\n\r\n    //build bar chart-----------------------\r\n    const buildBarChart = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12}>\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n                <BarChart width={500} height={250} data={data} barCategoryGap={'30%'} reverseStackOrder={true}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" padding={{ left: 20, right: 20 }} />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={36} />\r\n                    <Bar dataKey=\"Low - High\" fill=\"#00cc00\" />\r\n                </BarChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //build line chart-----------------------\r\n    const buildLineChart = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12}>\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n                <LineChart width={500} height={250} data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={36} />\r\n                    <Line type='natural' dot={false} dataKey=\"high\" stroke=\"#6e69cb\" />\r\n                    <Line type='natural' dot={false} dataKey=\"low\" stroke=\"#008800\" />\r\n                </LineChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //build combo chart-----------------------------\r\n    const buildComChart = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12}>\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n                <ComposedChart width={500} height={250} data={data}>\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={36} />\r\n                    <CartesianGrid stroke=\"#f5f5f5\" />\r\n                    <Bar dataKey=\"Low - High\" fill=\"#00cc00\" />\r\n                    {/* <Bar dataKey=\"open - close\" fill=\"#cc33ff\"/> */}\r\n                    <Area type=\"monotSix\" dataKey=\"close\" fill=\" #4da3ff\" stroke=\" #cce5ff\" />\r\n                </ComposedChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //Build Charts for symbol (loggin user)  --------------------\r\n    //build bar chart-----------------------\r\n    const buildBarChartForUser = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n\r\n                <BarChart width={500} height={250} data={data} barCategoryGap={'30%'} reverseStackOrder={true}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={36} />\r\n                    <Bar dataKey=\"open - last\" fill=\"#00cc00\" />\r\n                </BarChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //build line chart-----------------------\r\n    const buildLineChartForUser = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n\r\n                <LineChart width={500} height={250} data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={36} />\r\n                    <Line type='natural' dot={false} dataKey=\"last\" stroke=\"#4da3ff\" />\r\n                </LineChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //build combo chart-----------------------------\r\n    const buildComChartForUser = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n\r\n                <ComposedChart width={500} height={250} data={data}>\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={36} />\r\n                    <CartesianGrid stroke=\"#f5f5f5\" />\r\n                    <Bar dataKey=\"Low - High\" fill=\"#00cc00\" />\r\n                    {/* <Bar dataKey=\"open - close\" fill=\"#cc33ff\"/> */}\r\n                    <Area type=\"monotSix\" dataKey=\"last\" fill=\"#4da3ff\" stroke=\" #cce5ff\" />\r\n                </ComposedChart>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    //build a selection div for chart types---------\r\n\r\n    const handleTypeChange = (e) => {\r\n        setType(e.target.value);\r\n    };\r\n    const buildSelection = () => {\r\n        return (\r\n            <Radio.Group value={chartType} onChange={handleTypeChange}>\r\n                {/* <Radio.Button value=\"Bar\">Bar Chart</Radio.Button>\r\n                <Radio.Button value=\"Line\">Line Chart</Radio.Button>\r\n                <Radio.Button value=\"Combo\">Combined Chart</Radio.Button> */}\r\n            </Radio.Group>\r\n\r\n        )\r\n    }\r\n\r\n    //build a selection div for data time ---------\r\n    const handleTimeChange = (e) => {\r\n        setTime(e.target.value);\r\n    };\r\n    const buildTimeSelection = () => {\r\n        return (\r\n            <Radio.Group value={timeType} onChange={handleTimeChange}>\r\n                <Radio.Button value=\"today\">TODAY</Radio.Button>\r\n                <Radio.Button value=\"1month\">1 MONTH</Radio.Button>\r\n                <Radio.Button value=\"3month\">3 MONTH</Radio.Button>\r\n                <Radio.Button value=\"6month\">6 MONTH</Radio.Button>\r\n                <Radio.Button value=\"1year\">1 YEAR</Radio.Button>\r\n            </Radio.Group>\r\n\r\n        )\r\n    }\r\n\r\n    let body = null\r\n    let userDataDiv = null;\r\n    let showData;\r\n    let selectDiv = buildSelection();\r\n    let selectTimeDiv = buildTimeSelection();\r\n    // set user customized stock data----------------------------------\r\n    if (timeType === '1month') {\r\n        showData = userOneMonData;\r\n        console.log('showData', showData);\r\n    } else if (timeType === '3month') {\r\n        showData = userThreeMonData;\r\n    } else if (timeType === '6month') {\r\n        showData = userSixMonData;\r\n    } else if (timeType === '1year') {\r\n        showData = userOneYearData;\r\n    } else {\r\n        showData = userData;\r\n    }\r\n    console.log('showData', showData);\r\n\r\n    if (showData) {\r\n        if (timeType === 'today') {\r\n            if (chartType === 'Bar') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildBarChartForUser(chart);\r\n                })\r\n            } else if (chartType === 'Line') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildLineChartForUser(chart);\r\n                })\r\n            } else if (chartType === 'Combo') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildComChartForUser(chart);\r\n\r\n                })\r\n            } else {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildBarChartForUser(chart);\r\n                })\r\n            }\r\n        } else {\r\n            if (chartType === 'Bar') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildBarChart(chart);\r\n                })\r\n            } else if (chartType === 'Line') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildLineChart(chart);\r\n                })\r\n            } else if (chartType === 'Combo') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildComChart(chart);\r\n\r\n                })\r\n            } else {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildBarChart(chart);\r\n                })\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n    // return---------------------------------\r\n    if (chartData) {\r\n        // if (chartType === 'Bar') {\r\n        //     body = chartData.map((chart) => {\r\n        //         return buildBarChart(chart);\r\n        //     })\r\n        // } else if (chartType === 'Line') {\r\n        //     body = chartData.map((chart) => {\r\n        //         return buildLineChart(chart);\r\n        //     })\r\n        // } else if (chartType === 'Combo') {\r\n        //     body = chartData.map((chart) => {\r\n        //         return buildComChart(chart);\r\n\r\n        //     })\r\n        // } else {\r\n        body = chartData.map((chart) => {\r\n            return buildLineChart(chart);\r\n        })\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <Title>Welcome to Stock Web!</Title>\r\n                {/* <Header className=\"site-layout-background\" style={{ textAlign: 'center' }} style={{ padding: 0 }} >\r\n                    {selectDiv}\r\n                </Header> */}\r\n                <Typography><p className=\"chartName\">Popular Stock Prices</p></Typography>\r\n                <Row gutter={16}>\r\n                    {body}\r\n                </Row>\r\n                <br />\r\n                <br />\r\n                {/* <Typography><Title level={3}>Top Stocks</Title></Typography>\r\n                <Header className=\"site-layout-background\" style={{ textAlign: 'center' }} style={{ padding: 0 }} >\r\n                    {selectTimeDiv}\r\n                </Header>\r\n                <Row gutter={16}>\r\n                    <br />\r\n                    {userDataDiv ? userDataDiv : (<Typography><Title level={4}>Your are not Following any Stocks</Title></Typography>)}\r\n                </Row>\r\n                <BackTop>\r\n                    <div style={style}>UP</div>\r\n                </BackTop> */}\r\n            </div>\r\n\r\n        )\r\n\r\n    } else if (loading) {\r\n        return (\r\n            <Alert\r\n                message=\"Loading\"\r\n                description=\"Please wait a second...\"\r\n                type=\"info\"\r\n            />)\r\n    } else if (error) {\r\n        return (\r\n            <Alert\r\n                message=\"404 Error\"\r\n                description=\"Something wrong, please try again.\"\r\n                type=\"error\"\r\n            />)\r\n    }\r\n\r\n}\r\nexport default Home;","import React, { useEffect, useState, useContext } from 'react';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport axios from 'axios'\r\nimport '../antd.css';\r\nimport '../App.css';\r\n//import uuid from 'uuid'\r\nimport { Layout, Row, Col, Select, Radio, Alert, Typography, BackTop } from 'antd';\r\nimport { BarChart, Bar, Line, Area, ComposedChart, LineChart, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nconst { Header } = Layout;\r\nconst userTest = { id: 'idabc', stockList: ['AAPL', 'IBM', 'BA', 'GOOGL', 'FB'] }\r\nlet testMode = false;\r\n\r\nconst style = {\r\n    height: 30,\r\n    width: 30,\r\n    lineHeight: '40px',\r\n    borderRadius: 4,\r\n    backgroundColor: '#00254d',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    fontSize: 14,\r\n};\r\n\r\nfunction Charts() {\r\n    const content = useContext(AuthContext);\r\n    const [userData, setUserData] = useState(undefined);\r\n    const [userOneMonData, setUserOneMonData] = useState(undefined);//1 month\r\n    const [userThreeMonData, setUserThreeMonData] = useState(undefined);//3 month\r\n    const [userSixMonData, setUserSixMonData] = useState(undefined);//6 month\r\n    const [userOneYearData, setUserOneYearData] = useState(undefined);//1 year\r\n    const [user, setUser] = useState(undefined);\r\n    //user.stockList\r\n    const [chartData, setChartData] = useState(undefined);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [chartType, setType] = useState('Bar');\r\n    const [timeType, setTime] = useState('today');\r\n    const symbol = ['DJI.INDX', 'NDX.INDX', 'NYA.INDX']\r\n\r\n\r\n    const baseUrl2 = 'https://api.marketstack.com/v1/'\r\n    const func2 = \"eod?\"\r\n    const func3 = \"intraday?\"\r\n    const key2 = 'access_key=bc3f4991e9abb86d188bede651d502f4&'\r\n    //const serverUrl = \"https://cors-anywhere.herokuapp.com/https://ownstockmodel.herokuapp.com/api/user/\"\r\n    const serverUrl = \"http://localhost:3006/api/user/\"\r\n\r\n\r\n    //set delay because of API limitition...\r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    //effect when user not loggin\r\n    useEffect(async () => {\r\n        async function fetchData() {\r\n            try {\r\n                \r\n                console.log(\"user not login useEffect fired.\")\r\n                let resultList = [];\r\n                for (let i = 0; i < symbol.length; i++) {\r\n                    await sleep(1100);\r\n                    let syb = symbol[i]\r\n                    // let url = baseUrl1+`function=${func}&symbol=${syb}&interval=15min&apikey=${key}`;\r\n                    let url = baseUrl2 + func2 + key2 + `symbols=${syb}&interval=15min`\r\n                    // console.log(url)\r\n                    const single = await axios.get(url);\r\n                    let { data } = single\r\n                    await sleep(1100);\r\n                    // console.log(\"data for chart:\\n\")\r\n                    //  console.log(data)\r\n                    if (data.data) {\r\n                        //   console.log(data.data);\r\n                        let symbolResult = []\r\n                        for (let i = data.data.length - 1; i >= 0; i--) {\r\n                            let curr = data.data[i]\r\n                            //only show today's data\r\n                            //To do: add 1week,1month 6month,1year,5year\r\n                            let xyObject = {\r\n                                date: curr.date.substring(0, 10),\r\n                                low: curr.low,\r\n                                high: curr.high,\r\n                                close: curr.close,\r\n                                \"Low - High\": [curr.low, curr.high],\r\n                                \"open - close\": [curr.open, curr.close]\r\n                            }\r\n                            symbolResult.push(xyObject)\r\n                        }\r\n                        let obj = {\r\n                            index: i,\r\n                            symbol: symbol[i],\r\n                            symbolData: symbolResult\r\n                        }\r\n                        resultList.push(obj);\r\n                    }\r\n                }\r\n                setChartData(resultList);\r\n                setLoading(false);\r\n                // console.log(resultList);           \r\n            } catch (error) {\r\n                setError(true);\r\n            }\r\n        }\r\n        //get introday \r\n        async function getIntodayData(stockList) {\r\n            if (!stockList) throw 'no stockList'\r\n            let userResultList = [];\r\n            if (stockList.length > 0) {\r\n                for (let i = 0; i < stockList.length; i++) {\r\n\r\n                    let syb = stockList[i];\r\n                    //for logged in user, get intraday data.\r\n                    let url = baseUrl2 + func3 + key2 + `symbols=${syb}&interval=15min`\r\n                    // console.log(url);\r\n                    await sleep(1100);\r\n                    try {\r\n                        const single = await axios.get(url);\r\n                        let { data } = single\r\n\r\n                        // console.log(data)\r\n                        if (data.data) {\r\n                            let symbolResult = []\r\n                            for (let i = data.data.length - 1; i >= 0; i--) {//reverse time\r\n                                let curr = data.data[i]\r\n                                // console.log(curr)\r\n                                const today = new Date();\r\n                                // console.log(today.getUTCDate());\r\n                                const currDate = new Date(data.data[i].date);\r\n                                if (today.getUTCDate() === currDate.getUTCDate()) {\r\n                                    //only show today's data\r\n                                    //To do: add 1week,1month 6month,1year,5year\r\n                                    let xyObject = {\r\n                                        date: currDate.toLocaleTimeString(),\r\n                                        low: curr.low,\r\n                                        last: curr.last,\r\n                                        high: curr.high,\r\n                                        close: curr.close,\r\n                                        open: curr.open,\r\n                                        \"open - last\": [curr.open, curr.last],\r\n                                        \"Low - High\": [curr.low, curr.high],\r\n                                        \"open - close\": [curr.open, curr.close],\r\n                                    }\r\n                                    symbolResult.push(xyObject)\r\n                                }\r\n                            }\r\n                            let obj = {\r\n                                index: i,\r\n                                symbol: syb,\r\n                                symbolData: symbolResult\r\n                            }\r\n                            userResultList.push(obj);\r\n                        } else {\r\n                            // console.log(error);\r\n                            continue\r\n                        }\r\n                    } catch (error) {\r\n                        //  console.log(error);\r\n                        continue\r\n                    }\r\n                }\r\n                setUserData(userResultList);\r\n                console.log('Introday user data', userResultList)\r\n                setLoading(false);\r\n\r\n            }\r\n        }\r\n\r\n        //get One Month data\r\n        async function getOneMonthData(stockList) {\r\n            if (!stockList) throw 'no stockList'\r\n            let userData = [];\r\n\r\n            if (stockList.length > 0) {\r\n                for (let i = 0; i < stockList.length; i++) {\r\n                    let syb = stockList[i];\r\n                    let today = new Date();\r\n                    let yesterday = new Date(today.setDate(today.getDate() - 1)).toISOString().substring(0, 10);\r\n                    // console.log('yesterDay',yesterday);\r\n                    let endDate = yesterday;\r\n                    //  console.log('endDate',endDate);\r\n                    let thisMonth = today.getMonth();\r\n                    let startDate1; // 1 month ago\r\n                    startDate1 = new Date(today.setMonth(thisMonth - 1)).toISOString().substring(0, 10);\r\n                    let url_1month = baseUrl2 + func2 + key2 + `symbols=${syb}&date_from=${startDate1}&date_to=${endDate}`;\r\n                    await sleep(1100);\r\n                    try {\r\n                        const getData = await axios.get(url_1month);\r\n\r\n                        if (getData && getData.data && getData.data.data) {\r\n                            let dataArr = getData.data.data;\r\n                            //console.log('SixMonData',dataArr);\r\n                            let resultList = [];\r\n                            for (let j = dataArr.length - 1; j >= 0; j--) {\r\n                                let curr = dataArr[j];\r\n                                let newElement = {\r\n                                    date: curr.date.substring(0, 10),\r\n                                    open: curr.open,\r\n                                    close: curr.close,\r\n                                    high: curr.high,\r\n                                    low: curr.low,\r\n                                    \"Low - High\": [curr.low, curr.high],\r\n                                    \"open - close\": [curr.open, curr.close]\r\n                                }\r\n                                resultList.push(newElement);\r\n                            }\r\n                            // console.log('resultList',resultList);\r\n                            let OneMonObj = {\r\n                                index: i,\r\n                                symbol: syb,\r\n                                symbolData: resultList\r\n                            }\r\n                            userData.push(OneMonObj);\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        continue;\r\n                    }\r\n                }\r\n                console.log('One Mon user data', userData);\r\n                setUserOneMonData(userData);\r\n\r\n            }\r\n\r\n        }\r\n        //get threee month data\r\n        async function getThreeMonthData(stockList) {\r\n            if (!stockList) throw 'no stockList'\r\n            let userData = [];\r\n\r\n            if (stockList.length > 0) {\r\n                for (let i = 0; i < stockList.length; i++) {\r\n                    let syb = stockList[i];\r\n                    let today = new Date();\r\n                    let yesterday = new Date(today.setDate(today.getDate() - 1)).toISOString().substring(0, 10);\r\n                    // console.log('yesterDay',yesterday);\r\n                    let endDate = yesterday;\r\n                    //  console.log('endDate',endDate);\r\n                    let thisMonth = today.getMonth();\r\n                    //  let startDate1; // 1 month ago\r\n                    let startDate2; // 6 month ago\r\n                    //  let startDate3; // 12 month ago\r\n                    // startDate1 = new Date(today.setMonth(thisMonth - 1)).toISOString().substring(0,10);\r\n                    startDate2 = new Date(today.setMonth(thisMonth - 3)).toISOString().substring(0, 10);\r\n                    let url_3month = baseUrl2 + func2 + key2 + `symbols=${syb}&date_from=${startDate2}&date_to=${endDate}`;\r\n                    await sleep(1100);\r\n                    try {\r\n                        const getData = await axios.get(url_3month);\r\n\r\n                        if (getData && getData.data && getData.data.data) {\r\n                            let dataArr = getData.data.data;\r\n                            //console.log('SixMonData',dataArr);\r\n                            let resultList = [];\r\n\r\n                            for (let j = dataArr.length - 1; j >= 0; j--) {\r\n                                let curr = dataArr[j];\r\n                                let newElement = {\r\n                                    date: curr.date.substring(0, 10),\r\n                                    open: curr.open,\r\n                                    close: curr.close,\r\n                                    high: curr.high,\r\n                                    low: curr.low,\r\n                                    \"Low - High\": [curr.low, curr.high],\r\n                                    \"open - close\": [curr.open, curr.close]\r\n                                }\r\n                                resultList.push(newElement);\r\n                            }\r\n                            // console.log('resultList',resultList);\r\n                            let ThreeMonObj = {\r\n                                index: i,\r\n                                symbol: syb,\r\n                                symbolData: resultList\r\n                            }\r\n                            userData.push(ThreeMonObj);\r\n\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        continue;\r\n                    }\r\n\r\n\r\n                }\r\n                console.log('three Month user data', userData);\r\n                setUserThreeMonData(userData);\r\n\r\n            }\r\n\r\n        }\r\n        //------------get six month data--------------------------------------- \r\n        async function getSixMonthData(stockList) {\r\n            if (!stockList) throw 'no stockList'\r\n            let userData = [];\r\n            //for test\r\n\r\n            if (stockList.length > 0) {\r\n                for (let i = 0; i < stockList.length; i++) {\r\n                    let syb = stockList[i];\r\n                    let today = new Date();\r\n                    let yesterday = new Date(today.setDate(today.getDate() - 1)).toISOString().substring(0, 10);\r\n                    // console.log('yesterDay',yesterday);\r\n                    let endDate = yesterday;\r\n                    //  console.log('endDate',endDate);\r\n                    let thisMonth = today.getMonth();\r\n                    let startDate3; // 12 month ago\r\n                    startDate3 = new Date(today.setMonth(thisMonth - 6)).toISOString().substring(0, 10);\r\n                    let url_6month = baseUrl2 + func2 + key2 + `symbols=${syb}&date_from=${startDate3}&date_to=${endDate}`;\r\n                    await sleep(1100);\r\n                    try {\r\n                        const getData = await axios.get(url_6month);\r\n\r\n                        if (getData && getData.data && getData.data.data) {\r\n                            let dataArr = getData.data.data;\r\n                            //console.log('SixMonData',dataArr);\r\n                            let resultList = [];\r\n\r\n                            for (let j = dataArr.length - 1; j >= 0; j--) {\r\n                                let curr = dataArr[j];\r\n                                let newElement = {\r\n                                    date: curr.date.substring(0, 10),\r\n                                    open: curr.open,\r\n                                    close: curr.close,\r\n                                    high: curr.high,\r\n                                    low: curr.low,\r\n                                    \"Low - High\": [curr.low, curr.high],\r\n                                    \"open - close\": [curr.open, curr.close]\r\n                                }\r\n                                resultList.push(newElement);\r\n                            }\r\n                            // console.log('resultList',resultList);\r\n                            let SixMonObj = {\r\n                                index: i,\r\n                                symbol: syb,\r\n                                symbolData: resultList\r\n                            }\r\n                            userData.push(SixMonObj);\r\n\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        continue;\r\n                    }\r\n\r\n\r\n                }\r\n                console.log('Six Month user data', userData);\r\n                setUserSixMonData(userData);\r\n\r\n            }\r\n\r\n        }\r\n        //------------get one year data--------------------------------------- \r\n        async function getOneYearData(stockList) {\r\n            if (!stockList) throw 'no stockList'\r\n\r\n            let userData = [];\r\n            //for test\r\n\r\n            if (stockList.length > 0) {\r\n                for (let i = 0; i < stockList.length; i++) {\r\n                    let syb = stockList[i];\r\n                    let today = new Date();\r\n                    let yesterday = new Date(today.setDate(today.getDate() - 1)).toISOString().substring(0, 10);\r\n                    // console.log('yesterDay',yesterday);\r\n                    let endDate = yesterday;\r\n                    let thisMonth = today.getMonth();\r\n                    let startDate4;  //12 month\r\n                    startDate4 = new Date(today.setMonth(thisMonth - 12)).toISOString().substring(0, 10);\r\n\r\n                    let url_1year = baseUrl2 + func2 + key2 + `symbols=${syb}&date_from=${startDate4}&date_to=${endDate}&limit=500`;\r\n                    await sleep(1100);\r\n                    try {\r\n                        const getData = await axios.get(url_1year);\r\n\r\n                        if (getData && getData.data && getData.data.data) {\r\n                            let dataArr = getData.data.data;\r\n                            //console.log('SixMonData',dataArr);\r\n                            let resultList = [];\r\n\r\n                            for (let j = dataArr.length - 1; j >= 0; j--) {\r\n                                let curr = dataArr[j];\r\n                                let newElement = {\r\n                                    date: curr.date.substring(0, 10),\r\n                                    open: curr.open,\r\n                                    close: curr.close,\r\n                                    high: curr.high,\r\n                                    low: curr.low,\r\n                                    \"Low - High\": [curr.low, curr.high],\r\n                                    \"open - close\": [curr.open, curr.close]\r\n                                }\r\n                                resultList.push(newElement);\r\n                            }\r\n                            // console.log('resultList',resultList);\r\n                            let Obj = {\r\n                                index: i,\r\n                                symbol: syb,\r\n                                symbolData: resultList\r\n                            }\r\n                            userData.push(Obj);\r\n\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        continue;\r\n                    }\r\n\r\n\r\n                }\r\n                console.log('12 Month user data', userData);\r\n                setUserOneYearData(userData);\r\n            }\r\n\r\n        }\r\n\r\n        fetchData();\r\n        //get user info\r\n \r\n       \r\n            if (content) {\r\n                const { currentUser } = content\r\n               // console.log(currenUser);\r\n                if (currentUser) {\r\n                    let userId = currentUser.uid \r\n                    console.log('user id', userId)\r\n                    try {\r\n                        let user = await axios.get(serverUrl+userId);\r\n                        console.log(user);\r\n                       // let user = Object.assign({},userTest)\r\n                        console.log('test user here', user)\r\n                        if(user){\r\n                            let sl = user.data;\r\n                            console.log('sl',sl)\r\n                            getIntodayData(user.data.stockList);\r\n                            getOneMonthData(user.data.stockList);\r\n                            getThreeMonthData(user.data.stockList);\r\n                            getSixMonthData(user.data.stockList);\r\n                            getOneYearData(user.data.stockList);\r\n                        }else{\r\n                            throw 'user not found'\r\n                        }\r\n                        \r\n                    } catch (error) {\r\n                        console.log(error);\r\n                    }\r\n    \r\n                }\r\n    \r\n    \r\n    \r\n            }\r\n        \r\n      \r\n\r\n\r\n    }, [])\r\n\r\n\r\n    //build bar chart-----------------------\r\n    const buildBarChart = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n                <BarChart width={500} height={250} data={data} barCategoryGap={'30%'} reverseStackOrder={true}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" padding={{ left: 20, right: 20 }} />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={40} />\r\n                    <Bar dataKey=\"Low - High\" fill=\"#008800\" />\r\n                </BarChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //build line chart-----------------------\r\n    const buildLineChart = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n                <LineChart width={500} height={250} data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={40} />\r\n                    <Line type='natural' dot={false} dataKey=\"high\" stroke=\"#6e69cb\" />\r\n                    <Line type='natural' dot={false} dataKey=\"low\" stroke=\"#008800\" />\r\n                </LineChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //build combo chart-----------------------------\r\n    const buildComChart = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n                <ComposedChart width={500} height={250} data={data}>\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={40} />\r\n                    <CartesianGrid stroke=\"#f5f5f5\" />\r\n                    <Bar dataKey=\"Low - High\" fill=\"#008800\" />\r\n                    {/* <Bar dataKey=\"open - close\" fill=\"#cc33ff\"/> */}\r\n                    <Area type=\"monotSix\" dataKey=\"close\" fill=\" #4da3ff\" stroke=\"#267bad\" />\r\n                </ComposedChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //Build Charts for symbol (loggin user)  --------------------\r\n    //build bar chart-----------------------\r\n    const buildBarChartForUser = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n\r\n                <BarChart width={500} height={250} data={data} barCategoryGap={'30%'} reverseStackOrder={true}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={40} />\r\n                    <Bar dataKey=\"open - last\" fill=\"#008800\" />\r\n                </BarChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //build line chart-----------------------\r\n    const buildLineChartForUser = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n\r\n                <LineChart width={500} height={250} data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={40} />\r\n                    <Line type='natural' dot={false} dataKey=\"last\" stroke=\"#4da3ff\" />\r\n                </LineChart>\r\n            </Col>\r\n        )\r\n    }\r\n    //build combo chart-----------------------------\r\n    const buildComChartForUser = (chartData) => {\r\n        let data = chartData.symbolData;\r\n\r\n        return (\r\n            <Col key={chartData.index.toString()} className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} >\r\n                <Typography><p className=\"chartName\">{chartData.symbol}</p></Typography>\r\n\r\n                <ComposedChart width={500} height={250} data={data}>\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" height={40} />\r\n                    <CartesianGrid stroke=\"#f5f5f5\" />\r\n                    <Bar dataKey=\"Low - High\" fill=\"#008800\" />\r\n                    {/* <Bar dataKey=\"open - close\" fill=\"#cc33ff\"/> */}\r\n                    <Area type=\"monotSix\" dataKey=\"last\" fill=\"#4da3ff\" stroke=\"#267bad\" />\r\n                </ComposedChart>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    //build a selection div for chart types---------\r\n\r\n    const handleTypeChange = (e) => {\r\n        setType(e.target.value);\r\n    };\r\n    const buildSelection = () => {\r\n        return (\r\n            <Radio.Group value={chartType} onChange={handleTypeChange} >\r\n                <Radio.Button value=\"Bar\">Bar Chart</Radio.Button>\r\n                <Radio.Button value=\"Line\">Line Chart</Radio.Button>\r\n                <Radio.Button value=\"Combo\">Combined Chart</Radio.Button>\r\n            </Radio.Group>\r\n\r\n        )\r\n    }\r\n\r\n    //build a selection div for data time ---------\r\n    const handleTimeChange = (e) => {\r\n        setTime(e.target.value);\r\n    };\r\n    const buildTimeSelection = () => {\r\n        return (\r\n            <Radio.Group value={timeType} onChange={handleTimeChange}>\r\n                <Radio.Button value=\"today\">TODAY</Radio.Button>\r\n                <Radio.Button value=\"1month\">1 MONTH</Radio.Button>\r\n                <Radio.Button value=\"3month\">3 MONTH</Radio.Button>\r\n                <Radio.Button value=\"6month\">6 MONTH</Radio.Button>\r\n                <Radio.Button value=\"1year\">1 YEAR</Radio.Button>\r\n            </Radio.Group>\r\n\r\n        )\r\n    }\r\n\r\n    let body = null\r\n    let userDataDiv = null;\r\n    let showData;\r\n    let selectDiv = buildSelection();\r\n    let selectTimeDiv = buildTimeSelection();\r\n    // set user customized stock data----------------------------------\r\n    if (timeType === '1month') {\r\n        showData = userOneMonData;\r\n    } else if (timeType === '3month') {\r\n        showData = userThreeMonData;\r\n    } else if (timeType === '6month') {\r\n        showData = userSixMonData;\r\n    } else if (timeType === '1year') {\r\n        showData = userOneYearData;\r\n    } else if(timeType === 'today') {\r\n        showData = userData; // intraday data\r\n    }else{\r\n        showData = chartData\r\n    }\r\n    // console.log('showData', showData);\r\n\r\n    if (showData) {\r\n\r\n        if (timeType === 'today') {\r\n            if (chartType === 'Bar') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildBarChartForUser(chart);\r\n                })\r\n            } else if (chartType === 'Line') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildLineChartForUser(chart);\r\n                })\r\n            } else if (chartType === 'Combo') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildComChartForUser(chart);\r\n\r\n                })\r\n            } else {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildBarChartForUser(chart);\r\n                })\r\n            }\r\n        } else {\r\n            if (chartType === 'Bar') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildBarChart(chart);\r\n                })\r\n            } else if (chartType === 'Line') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildLineChart(chart);\r\n                })\r\n            } else if (chartType === 'Combo') {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildComChart(chart);\r\n\r\n                })\r\n            } else {\r\n                userDataDiv = showData.map((chart) => {\r\n                    return buildBarChart(chart);\r\n                })\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n    // return---------------------------------\r\n    if (chartData) {\r\n        if (chartType === 'Bar') {\r\n            body = chartData.map((chart) => {\r\n                return buildBarChart(chart);\r\n            })\r\n        } else if (chartType === 'Line') {\r\n            body = chartData.map((chart) => {\r\n                return buildLineChart(chart);\r\n            })\r\n        } else if (chartType === 'Combo') {\r\n            body = chartData.map((chart) => {\r\n                return buildComChart(chart);\r\n\r\n            })\r\n        } else {\r\n            body = chartData.map((chart) => {\r\n                return buildBarChart(chart);\r\n            })\r\n        }\r\n    }\r\n    if(chartData || showData){\r\n        return (\r\n            <div>\r\n                <Header className=\"site-layout-background\" style={{ textAlign: 'center' }} style={{ padding: 0 }} >\r\n                    {selectDiv}\r\n                </Header>\r\n                <Typography><p className=\"chartTitle\">Market Indices</p></Typography>\r\n                <Row gutter={16}>\r\n                    {body}\r\n                </Row>\r\n                <br />\r\n                <br />\r\n                <Typography><p className=\"chartTitle\">Your Following Stocks</p></Typography>\r\n                <Header className=\"site-layout-background\" style={{ textAlign: 'center' }} style={{ padding: 0 }} >\r\n                    {selectTimeDiv}\r\n                </Header>\r\n                <Row gutter={16}>\r\n                    <br />\r\n                    {userDataDiv ? userDataDiv : (<Typography><p className=\"Info\">Your are not Following any stocks or you need to log in to see the data.</p></Typography>)}\r\n                </Row>\r\n                <BackTop>\r\n                    <div style={style}>UP</div>\r\n                </BackTop>\r\n            </div>\r\n\r\n        )\r\n\r\n    } else if (loading) {\r\n        return (\r\n            <Alert\r\n                message=\"Loading\"\r\n                description=\"Please wait a few seconds...\"\r\n                type=\"info\"\r\n            />)\r\n    } else if (error) {\r\n        return (\r\n            <Alert\r\n                message=\"404 Error\"\r\n                description=\"Something wrong, please try again later.\"\r\n                type=\"error\"\r\n            />)\r\n    }\r\n\r\n}\r\nexport default Charts;","import React, { useEffect, useState, useContext } from 'react';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport axios from 'axios'\r\nimport 'antd/dist/antd.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Row, Col, Alert, Typography, Card, Tag, Image, Comment, BackTop } from 'antd';\r\nimport imageMagick from 'imagemagick';\r\nimport fs from 'fs'\r\nimport '../App.css';\r\nimport SearchNews from './SearchNews';\r\n\r\n\r\nconst style = {\r\n    height: 30,\r\n    width: 30,\r\n    lineHeight: '40px',\r\n    borderRadius: 4,\r\n    backgroundColor: '#00254d',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    fontSize: 14,\r\n};\r\n\r\nconst userTest = { id: 'idabc', stockList: ['AAPL', 'IBM', 'BA', 'GOOGL', 'FB', 'NVDA'] }\r\nlet testMode = false;\r\n\r\nconst News = (props) => {\r\n    const content = useContext(AuthContext);\r\n\r\n    const [news, setNews] = useState(undefined);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [userNews, setUserNews] = useState(undefined);\r\n    const [searchNews, setSearchNews] = useState(undefined);\r\n    const [user, setUser] = useState(undefined);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const baseUrl = \"https://newsapi.org/v2/top-headlines?\"\r\n    const key = \"apiKey=1e4211b8b7a3444cbbb2e736508f489a\"\r\n   // const serverUrl = \"https://cors-anywhere.herokuapp.com/http://ownstockmodel.herokuapp.com/api/user/\"\r\n    const serverUrl = \"http://localhost:3006/api/user/\"\r\n\r\n    //set delay because of API limitition...\r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n    //get company name from ticker for news search\r\n    async function getCompanyName(ticker) {\r\n        if (!ticker || ticker === '') throw 'You need to provide ticker'\r\n        // console.log(ticker)\r\n        try {\r\n            const nameData = await axios.get('https://api.iextrading.com/1.0/ref-data/symbols')\r\n            let symbolList = nameData.data\r\n\r\n            //  console.log(symbolList);\r\n            // console.log(symbolList.length)\r\n            for (let i = 0; i < symbolList.length; i++) {\r\n                //  console.log(symbolList[i])\r\n                if (symbolList[i].symbol == ticker) {\r\n                    //console.log(symbolList[i])        \r\n                    return symbolList[i].name;\r\n                }\r\n            }\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n    //shuffle an array\r\n    function shuffle(arr) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            let x = Math.floor(Math.random() * arr.length);\r\n            let y = Math.floor(Math.random() * arr.length);\r\n            if (x === y) { //for dont change arr[index] with self !!!\r\n                continue;\r\n            }\r\n            let temp0 = arr[x];\r\n            arr[x] = arr[y];\r\n            arr[y] = temp0;\r\n        }\r\n        return arr\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        //fetch public news-------\r\n        async function fetchPulicNews() {\r\n\r\n            let resultList = []\r\n            try {\r\n                console.log('news useEffect fired.\\n');\r\n                let symbolList = ['stock', 'NASDAQ', 'market'];\r\n\r\n                for (let i = 0; i < symbolList.length; i++) {\r\n\r\n                    // console.log(newName);\r\n                    let url = baseUrl + `q=${symbolList[i]}&${key}`\r\n                    // console.log(url)\r\n                    try {\r\n                        const news = await axios.get(url);\r\n                        if (news.data && news.data.articles) {\r\n                            // console.log(news.data.articles)\r\n                            if (news.data.articles.length > 0) {\r\n                                for (let j = 0; j < news.data.articles.length; j++) {\r\n                                    let currNews = news.data.articles[j];\r\n                                    let key = uuidv4();\r\n                                    //  console.log('publicNews:',currNews);\r\n                                    // imageProcess(key,currNews.urlToImage);\r\n                                    // to do :using imageMagick to process\r\n                                    let newsDate = new Date(currNews.publishedAt).toLocaleString()\r\n                                    //  console.log(newsDate);\r\n                                    let item = {\r\n                                        key: key,\r\n                                        title: currNews.title,\r\n                                        url: currNews.url,\r\n                                        //  image: `../img/${key}-resized.jpg`,\r\n                                        image: currNews.urlToImage,\r\n                                        content: currNews.content,\r\n                                        description: currNews.description,\r\n                                        source: currNews.source.name,\r\n                                        author: currNews.author,\r\n                                        date: newsDate\r\n\r\n                                    }\r\n\r\n                                    resultList.push(item);\r\n                                }\r\n                            }\r\n                        }\r\n                    } catch (error) {\r\n                        // console.log(error);\r\n                        continue;\r\n                    }\r\n                }\r\n                let result = shuffle(resultList);\r\n                setNews(result);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                // console.log(error)\r\n                setError(true);\r\n            }\r\n        }\r\n\r\n        //fetch news data as an random array----------------------\r\n        async function fetchNewsList(stockList) {\r\n            //let currUser = Object.assign(userTest);\r\n            let resultList = []\r\n            try {\r\n                console.log('news useEffect fired.\\n');\r\n                let symbolList = stockList;\r\n                if (symbolList.length > 0) {\r\n                    for (let i = 0; i < symbolList.length; i++) {\r\n                        let companyName = await getCompanyName(symbolList[i]);\r\n                        let newName = companyName.split(' ')\r\n                        // console.log(newName);\r\n                        let url = baseUrl + `q=${newName[0]}&${key}`\r\n                        // console.log(url)\r\n                        try {\r\n                            const news = await axios.get(url);\r\n                            if (news.data && news.data.articles) {\r\n                                // console.log(news.data.articles)\r\n                                if (news.data.articles.length > 0) {\r\n                                    for (let j = 0; j < news.data.articles.length; j++) {\r\n                                        let currNews = news.data.articles[j];\r\n                                        let key = uuidv4();\r\n\r\n                                        let newsDate = new Date(currNews.publishedAt).toLocaleString()\r\n                                        //console.log(newsDate);\r\n                                        let item = {\r\n                                            key: key,\r\n                                            title: currNews.title,\r\n                                            url: currNews.url,\r\n                                            //  image: `../img/${key}-resized.jpg`,\r\n                                            image: currNews.urlToImage,\r\n                                            content: currNews.content,\r\n                                            description: currNews.description,\r\n                                            source: currNews.source.name,\r\n                                            author: currNews.author,\r\n                                            date: newsDate\r\n\r\n                                        }\r\n\r\n                                        resultList.push(item);\r\n                                    }\r\n                                }\r\n                            }\r\n                        } catch (error) {\r\n                            // console.log(error);\r\n                            continue;\r\n                        }\r\n\r\n                    }\r\n                    let result = shuffle(resultList);\r\n\r\n                    setUserNews(result);\r\n                    setLoading(false);\r\n                }\r\n\r\n            } catch (error) {\r\n                // console.log(error)\r\n                setError(true);\r\n            }\r\n        }\r\n        fetchPulicNews();\r\n\r\n        async function getUserData() {\r\n            if (content) {\r\n                const { currentUser } = content\r\n\r\n                console.log('news current User', currentUser);\r\n                if (currentUser) {\r\n                    let userId = currentUser.uid\r\n                    console.log('user id', userId)\r\n\r\n                    try {\r\n                        const user = await axios.get(serverUrl + userId);\r\n                        if (user) {\r\n                            fetchNewsList(user.data.stockList);\r\n                        } else {\r\n                            throw 'user not found'\r\n                        }\r\n\r\n                    } catch (error) {\r\n                        console.log(error);\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        getUserData();\r\n\r\n    }, [])\r\n    // let searchDataDiv = null;\r\n    // useEffect(() => {\r\n    //     async function fetchSearchNews() {\r\n\r\n    //         let resultList = []\r\n\r\n    //         console.log('search news useEffect fired.\\n');\r\n\r\n    //         let url = baseUrl + `q=${searchTerm}&${key}`\r\n    //         try {\r\n    //             const news = await axios.get(url);\r\n    //             if (news.data && news.data.articles) {\r\n    //                 // console.log(news.data.articles)\r\n    //                 if (news.data.articles.length > 0) {\r\n    //                     for (let j = 0; j < news.data.articles.length; j++) {\r\n    //                         let currNews = news.data.articles[j];\r\n    //                         let key = uuidv4();\r\n    //                         //  console.log('publicNews:',currNews);\r\n    //                         // imageProcess(key,currNews.urlToImage);\r\n    //                         // to do :using imageMagick to process\r\n    //                         let newsDate = new Date(currNews.publishedAt).toLocaleString()\r\n    //                         //  console.log(newsDate);\r\n    //                         let item = {\r\n    //                             key: key,\r\n    //                             title: currNews.title,\r\n    //                             url: currNews.url,\r\n    //                             //  image: `../img/${key}-resized.jpg`,\r\n    //                             image: currNews.urlToImage,\r\n    //                             content: currNews.content,\r\n    //                             description: currNews.description,\r\n    //                             source: currNews.source.name,\r\n    //                             author: currNews.author,\r\n    //                             date: newsDate\r\n\r\n    //                         }\r\n\r\n    //                         resultList.push(item);\r\n    //                     }\r\n    //                     setSearchNews(resultList);\r\n    //                     setLoading(false);\r\n    //                 }\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //         }\r\n\r\n\r\n    //     }\r\n    //     if (searchTerm) {\r\n    //         fetchSearchNews();\r\n    //     }\r\n\r\n    // }, [searchTerm]);\r\n    // //console.log(props)\r\n    // const searchValue = async (value) => {\r\n    //     setSearchTerm(value);\r\n    // };\r\n    // build news slide\r\n    const buildSlide = (news) => {\r\n\r\n        return (\r\n            <Col key={news.key} className=\"gutter-row\" xs={24} sm={24} md={12} lg={8} >\r\n\r\n                <Card key={news.key}\r\n                    hoverable\r\n                    style={{ padding: '8px 0' }}\r\n                    title={news.title ? news.title : \" \"}\r\n                    // style={{ width: 700}}\r\n                    extra={<a href={news.url} aria-label=\"more content link\">More</a>}\r\n                >\r\n                    <Image className=\"center\" src={news.image} alt=\"News Image\" />\r\n                    <p>\r\n                        <Tag color=\"blue\">{news.source}</Tag>\r\n                    </p>\r\n\r\n                    <Comment\r\n                        author={news.author}\r\n                        datetime={news.date}\r\n                        content={news.description ? news.description.substring(0, 200) : \"\"}\r\n                    />\r\n                </Card>\r\n\r\n            </Col>\r\n\r\n\r\n        )\r\n\r\n\r\n    }\r\n\r\n    let newsBody = null\r\n    //console.log(news);\r\n    const sample = [\r\n        {\r\n            author: \"Tina Zeinlinger, Jan Guldner\",\r\n            content: \"Trading-Apps sind auf dem Vormarsch und mit ihnen der Trend zum immer schnelleren Handeln und Spekulieren. Börsencoaches und Finanzgurus im Internet nutzen das aus. In ihren Online-Seminaren und Vide… [+798 chars]\",\r\n            date: \"5/18/2021, 8:53:30 AM\",\r\n            description: \"Tina hat sich als Daytraderin an der Börse versucht. Was sie von Börsentrainern gelernt hat, auf welche Marketingtricks sie reingefallen ist und was CFDs mit Brokkoli zu tun haben.\",\r\n            image: \"https://www.wiwo.de/images/wiwo_money_mates_640x360px_v2/27180132/2-format11240.jpg\",\r\n            key: \"2d6f7bba-6b8e-4cbe-85a5-18ebd2a50d59\",\r\n            source: \"Wirtschafts Woche\",\r\n            title: \"Daytrading lernen: Funktioniert Geld verdienen mit Trading Apps?\",\r\n            url: \"https://www.wiwo.de/podcast/money-mates/podcast-money-mates-daytrading-lernen-was-taugen-boersen-seminare-und-onlinekurse/27180130.html\"\r\n        },\r\n        {\r\n            author: \"Herbert Lash\",\r\n            content: \"NEW YORK/LONDON (Reuters) - Global stock markets fell on Thursday as a continued rise in the number of coronavirus cases dashed hopes of a swift recovery from the pandemic-induced economic slump and … [+4758 chars]\",\r\n            date: \"6/18/2020, 3:36:18 PM\",\r\n            description: \"Global stock markets fell on Thursday as a continued rise in the number of coronavirus cases dashed hopes of a swift recovery from the pandemic-induced economic slump and drove demand for safe-haven currencies such as the dollar and Japanese yen.\",\r\n            image: \"https://s2.reutersmedia.net/resources/r/?m=02&d=20200618&t=2&i=1522723273&w=1200&r=LYNXMPEG5H1UF\",\r\n            key: \"a90d5656-99c5-4dd0-8b59-a07cc754c081\",\r\n            source: \"Reuters\",\r\n            title: \"World stock markets slip on second wave virus fears, safe-havens rise\",\r\n            url: \"http://feeds.reuters.com/~r/reuters/topNews/~3/XK0b5K8AM14/world-stock-markets-slip-on-second-wave-virus-fears-safe-havens-rise-idUSKBN23P001\"\r\n        },\r\n        {\r\n            author: \"FourFourTwo Staff\",\r\n            content: \"Arsenal manager Mikel Arteta has pinpointed five positions that the club need to strengthen this summer, according to reports.\\r\\nThe Gunners ran out 1-0 winners against Chelsea on Wednesday thanks to … [+2140 chars]\",\r\n            date: \"5/13/2021, 6:23:01 AM\",\r\n            description: \"The Spaniard is keen to improve his squad when the transfer market reopens\",\r\n            image: \"https://cdn.mos.cms.futurecdn.net/cGSbzSU4G7BjktnaEiwBc5-1200-80.jpg\",\r\n            key: \"cca9120d-4a70-46c3-ba1a-94150a80d614\",\r\n            source: \"FourFourTwo\",\r\n            title: \"Arsenal transfer news: Mikel Arteta wants to strengthen five positions this summer\",\r\n            url: \"https://www.fourfourtwo.com/news/arsenal-transfer-news-mikel-arteta-wants-to-strengthen-five-positions-this-summer\"\r\n        },\r\n        {\r\n            author: \"FourFourTwo Staff\",\r\n            content: \"Liverpool manager Jurgen Klopp has ruled out marquee signings in this summers transfer market.\\r\\nThe Reds have endured a disappointing season and might need to win all four of their remaining games to… [+2037 chars]\",\r\n            date: \"5/13/2021, 5:00:01 AM\",\r\n            description: \"The Reds boss does not expect to entice a world-class superstar to Anfield this summer\",\r\n            image: \"https://cdn.mos.cms.futurecdn.net/QNerreSfu6u8gfT4DRTHsc-1200-80.jpg\",\r\n            key: \"1aacad58-ade2-40e9-9803-21d39b9969da\",\r\n            source: \"FourFourTwo\",\r\n            title: \"Liverpool transfer news: Jurgen Klopp rules out marquee signings in ‘strange’ market\",\r\n            url: \"https://www.fourfourtwo.com/news/liverpool-transfer-news-jurgen-klopp-rules-out-marquee-signings-in-strange-market\",\r\n        },\r\n        {\r\n            author: \"Ryan Gilliam\",\r\n            content: \"BioWare clearly put some love into the Mass Effect Legendary edition, with a host of small changes included for the biggest of Mass Effect fans. Players discovered one such change over the weekend, w… [+2923 chars]\",\r\n            date: \"5/17/2021, 11:35:09 AM\",\r\n            description: \"Tali’Zorah, one of Mass Effect’s most important crewmates, had a rough ending in Mass Effect 3. After players romanced her, they got a stock image of a woman that was supposed to be her on their bed. But with the Mass Effect Legendary Edition, BioWare finally…\",\r\n            image: \"https://cdn.vox-cdn.com/thumbor/8hnecxOkECAtHBQcVgDwmKrsBpY=/0x0:960x503/fit-in/1200x630/cdn.vox-cdn.com/assets/4689397/mass-effect-2-shepard-tali-romance_960.jpg\",\r\n            key: \"9e6b5650-8bd9-42cf-97c0-847e7fa4f948\",\r\n            source: \"Polygon\",\r\n            title: \"Mass Effect Legendary Edition finally lets players see Tali’s face\",\r\n            url: \"https://www.polygon.com/22440235/mass-effect-legendary-edition-3-tali-zorah-face-image-controversy-update\"\r\n        },\r\n        {\r\n            author: \"Ivan Mehta\",\r\n            content: \"China is one of the biggest markets in the world for Apples products. In its recent quarterly results, the company registered a whopping $17.7 billion in iPhone sales in the region.\\r\\nHowever, this st… [+3242 chars]\",\r\n            date: \"5/18/2021, 7:08:17 AM\",\r\n            description: \"China is one of the biggest markets in the world for Apple's products. In its recent quarterly results, the company registered a whopping $17.7 billion in iPhone sales in the region.\\r\\n\\r\\nHowever, ...\",\r\n            image: \"https://img-cdn.tnwcdn.com/image/tnw?filter_last=1&fit=1280%2C640&url=https%3A%2F%2Fcdn0.tnwcdn.com%2Fwp-content%2Fblogs.dir%2F1%2Ffiles%2F2020%2F06%2FTim-Cook-closeup.jpg&signature=dce038f2370ffd2d2f883d998d5de0a6\",\r\n            key: \"640e1646-067b-4ce3-a02a-cdeff2aa4d89\",\r\n            source: \"The Next Web\",\r\n            title: \"How Apple reportedly gave up control of iCloud for business growth in China\",\r\n            url: \"http://thenextweb.com/news/apple-icloud-security-china-encryption-nyt-report\"\r\n        }\r\n    ]\r\n    let infoDiv = null;\r\n    if (searchNews) {\r\n        newsBody = searchNews.map((singleNews) => {\r\n            return buildSlide(singleNews);\r\n        })\r\n    } else if (userNews) {\r\n        newsBody = userNews.map((news) => {\r\n            return buildSlide(news);\r\n        })\r\n    } else if (news) {\r\n        newsBody = news.map((singleNews) => {\r\n            return buildSlide(singleNews);\r\n        })\r\n    } else {\r\n        infoDiv = <div>These are sample news. Go to localhost:3000 for user following news.</div>\r\n        newsBody = sample.map((singleNews) => {\r\n            return buildSlide(singleNews);\r\n        })\r\n    }\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <Alert\r\n                message=\"Loading\"\r\n                description=\"Please wait a few seconds...\"\r\n                type=\"info\"\r\n            />)\r\n    }\r\n    else {\r\n        return (\r\n            <div >\r\n                {/* <SearchNews searchValue={searchValue} /> */}\r\n                {infoDiv}\r\n                <br />\r\n                <Row gutter={16}>\r\n                    {newsBody}\r\n                </Row>\r\n                <BackTop>\r\n                    <div style={style}>UP</div>\r\n                </BackTop>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default News;","import React from 'react';\r\nimport { doSocialSignIn } from '../firebase/FirebaseFunctions';\r\n\r\nconst SocialSignIn = () => {\r\n  const socialSignOn = async (provider) => {\r\n    try {\r\n      await doSocialSignIn(provider);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <img\r\n        onClick={() => socialSignOn('google')}\r\n        alt=\"google signin\"\r\n        src=\"/imgs/btn_google_signin.png\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialSignIn;","import React, { useContext } from 'react';\r\nimport SocialSignIn from './SocialSignIn';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport {\r\n  doSignInWithEmailAndPassword,\r\n  doPasswordReset\r\n} from '../firebase/FirebaseFunctions';\r\n\r\nfunction SignIn() {\r\n  const  currentUser  = useContext(AuthContext);\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    let { email, password } = event.target.elements;\r\n\r\n    try {\r\n      await doSignInWithEmailAndPassword(email.value, password.value);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const passwordReset = (event) => {\r\n    event.preventDefault();\r\n    let email = document.getElementById('email').value;\r\n    if (email) {\r\n      doPasswordReset(email);\r\n      alert('Password reset email was sent');\r\n    } else {\r\n      alert(\r\n        'Please enter an email address below before you click the forgot password link'\r\n      );\r\n    }\r\n  };\r\n  if (currentUser.currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Log in</h1>\r\n      <form onSubmit={handleLogin}>\r\n        <div className=\"form-group\">\r\n          <label>\r\n            Email:\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>\r\n            Password:\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\">Log in</button>\r\n\r\n        <button className=\"forgotPassword\" onClick={passwordReset}>\r\n          Forgot Password\r\n        </button>\r\n      </form>\r\n\r\n      <br />\r\n      <SocialSignIn />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst Loading = () => {\r\n    return <p>This is SignIn Page</p>\r\n};\r\n\r\nexport default Loading;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { doCreateUserWithEmailAndPassword } from '../firebase/FirebaseFunctions';\r\nimport {AuthContext}  from '../firebase/Auth';\r\nimport SocialSignIn from './SocialSignIn';\r\nimport axios from 'axios';\r\nfunction SignUp() {\r\n  const  currentUser  = useContext(AuthContext);\r\n  const [ifcurrentUser, setcurrentUser] = useState(false);\r\n  const [pwMatch, setPwMatch] = useState('');\r\n/*\r\n  const bool_func = async () => {\r\n    let obj_info = {\r\n      userName: currentUser.currentUser.email,\r\n      profileImg: ''\r\n    }\r\n    console.log(\"bro\")\r\n    setcurrentUser(true)\r\n    await axios.post(`https://localhost:3006/api/user/${currentUser.currentUser.uid}`, obj_info)\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"in useEffect, Signup\")\r\n    \r\n\r\n    if (currentUser.currentUser) {\r\n      console.log(currentUser.currentUser.uid)\r\n      bool_func()\r\n    }\r\n\r\n  }, [])\r\n*/\r\n\r\n\r\n  if(currentUser.currentUser){\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    const { displayName, email, passwordOne, passwordTwo } = e.target.elements;\r\n    if (passwordOne.value !== passwordTwo.value) {\r\n      setPwMatch('Passwords do not match');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      console.log(\"Start creating the user\")\r\n      await doCreateUserWithEmailAndPassword(\r\n        email.value,\r\n        passwordOne.value,\r\n        displayName\r\n      );\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Sign up</h1>\r\n      {pwMatch && <h4 className=\"error\">{pwMatch}</h4>}\r\n      <form onSubmit={handleSignUp}>\r\n        <div className=\"form-group\">\r\n          <label>\r\n            Name:\r\n            <input\r\n              className=\"form-control\"\r\n              required\r\n              name=\"displayName\"\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>\r\n            Email:\r\n            <input\r\n              className=\"form-control\"\r\n              required\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>\r\n            Password:\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"passwordOne\"\r\n              name=\"passwordOne\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>\r\n            Confirm Password:\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"passwordTwo\"\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <button id=\"submitButton\" name=\"submitButton\" type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n      </form>\r\n      <br />\r\n      <SocialSignIn />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useContext, useState } from 'react';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport { doChangePassword } from '../firebase/FirebaseFunctions';\r\nimport '../App.css';\r\n\r\nfunction ChangePassword() {\r\n  const  currentUser  = useContext(AuthContext);\r\n  const [pwMatch, setPwMatch] = useState('');\r\n  console.log(currentUser);\r\n\r\n  const submitForm = async (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      currentPassword,\r\n      newPasswordOne,\r\n      newPasswordTwo\r\n    } = event.target.elements;\r\n\r\n    if (newPasswordOne.value !== newPasswordTwo.value) {\r\n      setPwMatch('New Passwords do not match, please try again');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      await doChangePassword(\r\n        currentUser.currentUser.email,\r\n        currentPassword.value,\r\n        newPasswordOne.value\r\n      );\r\n      alert('Password has been changed, you will now be logged out');\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  if (currentUser.currentUser.providerData[0].providerId === 'password') {\r\n    return (\r\n      <div>\r\n        {pwMatch && <h4 className=\"error\">{pwMatch}</h4>}\r\n        <h2>Change Password</h2>\r\n        <form onSubmit={submitForm}>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              Current Password:\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"currentPassword\"\r\n                id=\"currentPassword\"\r\n                type=\"password\"\r\n                placeholder=\"Current Password\"\r\n                required\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>\r\n              New Password:\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"newPasswordOne\"\r\n                id=\"newPasswordOne\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              Confirm New Password:\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"newPasswordTwo\"\r\n                id=\"newPasswordTwo\"\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                required\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <button type=\"submit\">Change Password</button>\r\n        </form>\r\n        <br />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h2>\r\n          You are signed in using a Social Media Provider, You cannot change\r\n          your password\r\n        </h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChangePassword;","import React from 'react';\r\nimport SignOutButton from './SignOut';\r\nimport '../App.css';\r\nimport ChangePassword from './ChangePassword';\r\n\r\nfunction Account() {\r\n  return (\r\n    <div>\r\n      <h2>Account Page</h2>\r\n      <ChangePassword />\r\n      <SignOutButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Account;","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../firebase/Auth';\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const currentUser  = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) =>\r\n        !!currentUser.currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={'sigin'} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;","import React, {useState, useEffect, useContext} from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport '../App.css';\r\n\r\n\r\nconst Profile = (props) => {\r\n    const currentUser = useContext(AuthContext)\r\n\r\n    const [profileData, setProfileData] = useState(undefined);\r\n    const [profileId, setprofileId] = useState('')\r\n    const [loading, setloading] = useState(true);\r\n\r\n    let base_url = `https://cors-anywhere.herokuapp.com/http://ownstockmodel.herokuapp.com/api/user/${currentUser.currentUser.uid}`\r\n\r\n    const updateProfile = async (event) => {\r\n        event.preventDefault();\r\n        let { userName, addStock, deleteStock } = event.target.elements;\r\n        const user_info = await axios.get(base_url)\r\n        let old_stock_list = user_info.data.stockList\r\n        let updateName, updatestock;\r\n        if(userName.value !== '') updateName = userName.value\r\n        else updateName = user_info.data.userName\r\n        if(addStock.value !== '') old_stock_list.push(addStock.value)\r\n        if(deleteStock.value !== '' && !old_stock_list.includes(deleteStock.value)){\r\n\r\n        }\r\n        if(deleteStock.value !== '' && old_stock_list.includes(deleteStock.value)) {\r\n            for(let i = 0; i < old_stock_list.length; i++){\r\n                if(old_stock_list[i] === deleteStock.value){\r\n                    old_stock_list.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        try {\r\n          await axios.patch(base_url, {userName: updateName, profileImg: '', stockList: old_stock_list})\r\n          alert(\"Successfully update user info, Please refreash the page\")\r\n        } catch (error) {\r\n          alert(error);\r\n        }\r\n      };\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n\r\n                base_url = `https://cors-anywhere.herokuapp.com/http://ownstockmodel.herokuapp.com/api/user/${currentUser.currentUser.uid}`\r\n\r\n                const user_info = await axios.get(base_url)\r\n                \r\n                if(user_info.data.userName === null && user_info.data.profileImg === null){\r\n                    user_info = await axios.patch(base_url, {userName: currentUser.currentUser.email, profileImg: '', stockList: ['AAPL', 'IBM', 'NVDA']})\r\n                }\r\n                console.log(user_info)\r\n                setProfileData(user_info.data);\r\n                setloading(false);\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const each_stock = (stock_name) => {\r\n        return <p key={stock_name}>{stock_name + '\\t'}</p>\r\n    }\r\n    if(loading){\r\n        return <div>loading</div>\r\n    }\r\n    else{\r\n        console.log(profileData.stockList)\r\n        let html_stock_list = profileData.stockList.map((stock_name) => {\r\n            return each_stock(stock_name);\r\n        })\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h1>User Name: {profileData.userName}</h1>\r\n    \r\n                <h1>User Img: {profileData.profileImg}</h1>\r\n\r\n                <h2>Stock that is watching: </h2>\r\n    \r\n                {html_stock_list}\r\n\r\n                <form onSubmit={updateProfile}>\r\n                    <div className=\"form-group\">\r\n                    <label>\r\n                        Change user name:\r\n                        <input\r\n                        className=\"form-control\"\r\n                        name=\"userName\"\r\n                        id=\"userName\"\r\n                        type=\"userName\"\r\n                        placeholder=\"userName\"\r\n                        />\r\n                    </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>\r\n                        Add Stock:\r\n                        <input\r\n                        className=\"form-control\"\r\n                        name=\"addStock\"\r\n                        type=\"addStock\"\r\n                        placeholder=\"Add Stock\"\r\n                        />\r\n                    </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>\r\n                        Remove Stock:\r\n                        <input\r\n                        className=\"form-control\"\r\n                        name=\"deleteStock\"\r\n                        type=\"deleteStock\"\r\n                        placeholder=\"Remove Stock\"\r\n                        />\r\n                    </label>\r\n                    </div>\r\n                    <button type=\"submit\">update profile</button>\r\n                \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport '../App.css';\r\nimport { List, Avatar } from 'antd';\r\nconst About = () => {\r\n\r\n    const data = [\r\n        {\r\n            title: 'Peijin Zhou',\r\n            github:\"https://github.com/PeijinZhou\"\r\n        },\r\n        {\r\n            title: 'Jiashu Wang',\r\n            github:\"https://github.com/39xdgy\"\r\n        },\r\n        {\r\n            title: 'Ying Liu',\r\n            github:\"https://github.com/yingliu928\"\r\n\r\n        },\r\n        {\r\n            title: 'Vishal Manjunath',\r\n            github:\"https://github.com/vishm08\"\r\n        },\r\n        {\r\n            title: 'Shaunak Saklikar',\r\n            github:\"\"\r\n        },\r\n    ];\r\n    return (\r\n        <div>\r\n            <p className=\"chartName\">Group Members</p>\r\n            <br/>\r\n            <p>We are CS graduate students of Stevens Insititute of Technology.</p>\r\n        <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={data}\r\n            renderItem={item => (\r\n                <List.Item>\r\n                    <List.Item.Meta\r\n                     \r\n                        title={<a href=\"https://ant.design\">{item.title}</a>}\r\n                        description={<a href={item.github}>{item.github}</a>}\r\n                    />\r\n                </List.Item>\r\n            )}\r\n        />\r\n        </div>\r\n\r\n   \r\n    )\r\n};\r\n\r\nexport default About;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StatWrap = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n  justify-content: flex-start;\r\n\r\n  @media (min-width: 768px) {\r\n    justify-content: space-around;\r\n    margin-top: 0.5rem;\r\n  }\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst StatsPrice = ({ last, change, percent, color }) => {\r\n  return (\r\n    <StatWrap>\r\n      <div style={{ fontSize: \"3vw\", padding: 0, margin: 0, lineHeight: 1 }}>\r\n        ${last.toFixed(2)}\r\n      </div>\r\n      <div\r\n        style={{\r\n          color: +change > 0 ? \"green\" : \"red\",\r\n          fontSize: \"1.5vw\",\r\n          lineHeight: 1,\r\n          padding: 0,\r\n          margin: 0\r\n        }}>\r\n        {change.toFixed(2)}\r\n        <br />\r\n        {percent.toFixed(2)}%\r\n      </div>\r\n    </StatWrap>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default StatsPrice;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, List } from \"semantic-ui-react\";\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Item = ({ title, value }) => {\r\n  let formattedValue = value;\r\n  let num = +value;\r\n\r\n  if (num && num.toString().includes(\".\")) formattedValue = num.toFixed(2);\r\n  return (\r\n    <List.Item>\r\n      <List.Content floated='right'>{formattedValue}</List.Content>\r\n      <List.Content floated='left' style={{ color: \"#a0a0a0\" }}>\r\n        {title}\r\n      </List.Content>\r\n    </List.Item>\r\n  );\r\n};\r\n\r\nconst InfoStyles =styled.div`\r\n\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:center;\r\n`\r\n\r\nconst StatsDetails2 = ({ data }) => {\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <div>\r\n        <Item title='Open' value={data.regularMarketOpen} />\r\n        <Item title='High' value={data.regularMarketDayHigh} />\r\n        <Item title='Low' value={data.regularMarketDayLow} />\r\n      </div>\r\n      <div>\r\n        <Item title='Volume' value={data.regularMarketVolume} />\r\n        <Item title='P/E' value={data.forwardPE} />\r\n        <Item title='Mkt Cap' value={data.marketCap} />\r\n      </div>\r\n\r\n      <div>\r\n        <Item title='52W H' value={data.fiftyTwoWeekHigh} />\r\n        <Item title='52W L' value={data.fiftyTwoWeekLow} />\r\n        <Item title='52W Ch' value={data.fiftyTwoWeekHighChangePercent} />\r\n      </div>\r\n      <div>\r\n        <Item title='Yield' value={data.trailingAnnualDividendRate} />\r\n        <Item title='Ex-Div' value={data.dividendDate} />\r\n        <Item title='EPS' value={data.epsTrailingTwelveMonths} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StatsDetails = ({ data }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid.Row columns={4}>\r\n        <Grid.Column>\r\n          <List>\r\n            <Item title='Open' value={data.regularMarketOpen} />\r\n            <Item title='High' value={data.regularMarketDayHigh} />\r\n            <Item title='Low' value={data.regularMarketDayLow} />\r\n          </List>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <List>\r\n            <Item title='Volume' value={data.regularMarketVolume} />\r\n            <Item title='P/E' value={data.forwardPE} />\r\n            <Item title='Mkt Cap' value={data.marketCap} />\r\n          </List>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <List>\r\n            <Item title='52W H' value={data.fiftyTwoWeekHigh} />\r\n            <Item title='52W L' value={data.fiftyTwoWeekLow} />\r\n            <Item title='52W Ch' value={data.fiftyTwoWeekHighChangePercent} />\r\n          </List>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <List>\r\n            <Item title='Yield' value={data.trailingAnnualDividendRate} />\r\n            <Item title='Ex-Div' value={data.dividendDate} />\r\n            <Item title='EPS' value={data.epsTrailingTwelveMonths} />\r\n          </List>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nStatsDetails.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nexport default StatsDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nconst DarkButtonStyles = styled.div`\r\n  display: inline-block;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 70px;\r\n  border-radius: 45px;\r\n  background: #151515;\r\n  box-shadow: inset 0 0 2px 2px rgba(0, 0, 0, 0.5);\r\n\r\n  ul {\r\n    display: inline-block;\r\n    padding: 3px 0px;\r\n    margin: 0 -2px;\r\n    list-style: none;\r\n    width: inherit;\r\n    height: inherit;\r\n    display: flex;\r\n  }\r\n  ul li {\r\n    display: flex;\r\n    margin: 1px 2px;\r\n    height: 90%;\r\n    width: 100%;\r\n    background: #202020;\r\n    border-top: 1px solid #353535;\r\n    box-shadow: 0 15px 20px 0 rgba(0, 0, 0, 0.5);\r\n    transition: all 0.5s;\r\n  }\r\n  ul li:nth-of-type(1) {\r\n    border-top-left-radius: 40px;\r\n    border-bottom-left-radius: 40px;\r\n    button {\r\n      border-top-left-radius: 40px;\r\n      border-bottom-left-radius: 40px;\r\n    }\r\n  }\r\n  ul li:last-of-type {\r\n    border-top-right-radius: 40px;\r\n    border-bottom-right-radius: 40px;\r\n    button {\r\n      border-bottom-right-radius: 40px;\r\n      border-top-right-radius: 40px;\r\n    }\r\n  }\r\n  ul li button {\r\n    height: 100%;\r\n    width: 100%;\r\n    color: #999999;\r\n    background: transparent;\r\n    background-color: transparent;\r\n    text-shadow: inset 1px 1px 2px rgba(225, 225, 225, 0.5);\r\n    background-clip: text;\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n    transition: all 0.5s;\r\n    border-style: hidden;\r\n    border: none;\r\n    outline: none;\r\n    &:focus {\r\n      outline: none;\r\n      outline-width: 0;\r\n      border-bottom: 1px solid #252525;\r\n      border-style: hidden;\r\n    }\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n    &:active {\r\n    }\r\n  }\r\n\r\n  .active {\r\n    border-style: none;\r\n    background: #151515;\r\n\r\n    border-bottom: 1px solid #252525;\r\n    box-shadow: inset 0 0 10px 1px rgba(0, 0, 0, 0.8);\r\n  }\r\n\r\n  .active-text {\r\n    color: crimson;\r\n    text-shadow: 0 0 15px rgba(220, 10, 10, 0.5);\r\n    background-clip: padding-box;\r\n  }\r\n`;\r\n\r\nexport default function DarkButton(props) {\r\n  const [activePeriod, setActivePeriod] = useState(props.default);\r\n\r\n  // useEffect(() => {\r\n  //   props.clickEffect(activePeriod);\r\n  // }, [props.clickEffect, activePeriod]);\r\n  return (\r\n    <DarkButtonStyles className='buttons-container'>\r\n      <ul>\r\n        {props.timeRangeArray.map(period => {\r\n      \r\n          return (\r\n            <li\r\n              key={period}\r\n              className={activePeriod === period ? \"active\" : null}>\r\n              <button\r\n                type='button'\r\n                onClick={e => {\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                  setActivePeriod(period);\r\n                  props.clickEffect(period.toUpperCase());\r\n                }}\r\n                className={\r\n                  activePeriod === period ? \"active-text\" : null\r\n                }>\r\n                {period.toUpperCase()}\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </DarkButtonStyles>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Image } from 'semantic-ui-react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h3>404</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as d3 from \"d3\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Label,\r\n  Header,\r\n  Statistic,\r\n  Segment,\r\n  Grid\r\n} from \"semantic-ui-react\";\r\n// !VX\r\nimport {  } from \"@vx/vx\";\r\nconst width = 400;\r\nconst height = 300;\r\nconst margin = { top: 20, right: 5, bottom: 20, left: 35 };\r\nlet timeParser = d3.timeParse(\"%Y%m%d%H:%M\");\r\nclass LineChart extends Component {\r\n  state = {\r\n    xAxisRef: React.createRef(),\r\n    yAxisRef: React.createRef(),\r\n\r\n    highs: null, // svg path command for all the high temps\r\n    lows: null, // svg path command for low temps,\r\n    // d3 helpers\r\n    xScale: d3.scaleTime().range([margin.left, width - margin.right]),\r\n    yScale: d3.scaleLinear().range([height - margin.bottom, margin.top]),\r\n    lineGenerator: d3.line()\r\n  };\r\n\r\n  xAxis = d3\r\n    .axisBottom()\r\n    .scale(this.state.xScale)\r\n    .ticks(5, \"%H:%M\");\r\n  yAxis = d3\r\n    .axisLeft()\r\n    .scale(this.state.yScale)\r\n    .ticks(5, \"$,.2f\");\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (!nextProps.data) return null; // data hasn't been loaded yet so do nothing\r\n    debugger;\r\n    const { data } = nextProps;\r\n    const { xScale, yScale, lineGenerator } = prevState;\r\n    const qualifiedData = _.filter(data, values => +values.close > 0);\r\n\r\n    // data has changed, so recalculate scale domains\r\n    const timeDomain = d3.extent(qualifiedData, d =>\r\n     new Date(`${d[\"date\"]}T${d[\"minute\"]}`)\r\n    );\r\n    xScale.domain(timeDomain);\r\n    yScale.domain(d3.extent(qualifiedData, d => +d.close));\r\n\r\n    // calculate line for lows\r\n    lineGenerator.x(d => xScale(new Date(`${d[\"date\"]}T${d[\"minute\"]}`)));\r\n    // lineGenerator.y(d => yScale(+d.low));\r\n    // const lows = lineGenerator(data);\r\n    // and then highs\r\n    lineGenerator.y(d => yScale(+d.average));\r\n    const highs = lineGenerator(qualifiedData);\r\n\r\n    return { highs };\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    d3.select(this.state.xAxisRef.current).call(this.xAxis);\r\n    d3.select(this.state.yAxisRef.current).call(this.yAxis);\r\n  }\r\n\r\n  render() {\r\n    let latestPrice = Math.round(this.props.latestPrice * 100) / 100;\r\n    let changePercent = Math.round(this.props.changePercent * 10000) / 100;\r\n    const { highs } = this.state;\r\n\r\n    console.log(this.props)\r\n    return (\r\n      <Segment>\r\n        <Link\r\n          to={\"/\" + this.props.name}\r\n          className={this.props.name}\r\n          >\r\n          <Grid columns={3}>\r\n            <Grid.Column width={10}>\r\n              <Header>\r\n                {this.props.companyName} ({this.props.name})\r\n              </Header>\r\n            </Grid.Column>\r\n            <Grid.Column textAlign='right' width={3}>\r\n              <Statistic > ${latestPrice} </Statistic>\r\n            </Grid.Column>\r\n            <Grid.Column textAlign='left' width={2}>\r\n                        <Label color={changePercent > 0 ? \"green\" : \"red\"}>\r\n                  {changePercent}%\r\n                </Label>           \r\n            </Grid.Column>\r\n          </Grid>\r\n    \r\n          <svg width={width} height={height}>\r\n            <path d={highs} fill='none' stroke='green' strokeWidth='2' />\r\n            {/* <path d={lows} fill='none' stroke={red} strokeWidth='2' /> */}\r\n            <g>\r\n              <g\r\n                ref={this.state.xAxisRef}\r\n                transform={`translate(0, ${height - margin.bottom})`}\r\n              />\r\n              <g\r\n                ref={this.state.yAxisRef}\r\n                transform={`translate(${margin.left}, 0)`}\r\n              />\r\n            </g>\r\n          </svg>\r\n        </Link>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LineChart;\r\n","const setTitle = (symbol, quote) => {\r\n  let title = '';\r\n  if (symbol && quote) {\r\n    //title = `${symbol} - ${quote}`;\r\n    title = '';\r\n  } else {\r\n    title = '';\r\n  }\r\n\r\n  document.title = title;\r\n  return title;\r\n};\r\n\r\nexport default setTitle;\r\n","import { timeFormat } from \"d3\";\r\nimport * as d3 from \"d3\";\r\n\r\n\r\nexport default timeFormat(\"%b %d\");\r\n\r\n\r\n\r\nconst formatMillisecond = d3.timeFormat(\".%L\"),\r\n\r\n  formatSecond = d3.timeFormat(\":%S\"),\r\n\r\n  formatMinute = d3.timeFormat(\"%I:%M\"),\r\n\r\n  formatHour = d3.timeFormat(\"%I %p\"),\r\n\r\n  formatDay = d3.timeFormat(\"%a %d\"),\r\n\r\n  formatWeek = d3.timeFormat(\"%a, %b %d\"),\r\n\r\n  formatMonth = d3.timeFormat(\"%B\"),\r\n\r\n  formatYear = d3.timeFormat(\"%Y\");\r\n\r\nconst printAllFormats = (date)=>{\r\n    console.log(\"formatMillisecond: \" + formatMillisecond(date));\r\n    console.log(\"formatSecond: \" + formatSecond(date));\r\n    console.log(\"formatMinute: \" + formatMinute(date));\r\n    console.log(\"formatHour: \" + formatHour(date));\r\n    console.log(\"formatDay: \" + formatDay(date));\r\n    console.log(\"formatWeek: \" + formatWeek(date));\r\n    console.log(\"formatMonth: \" + formatMonth(date));\r\n    console.log(\"formatYear: \" + formatYear(date));\r\n}\r\n\r\nexport function formatDateTime(date){\r\n\r\n    if(typeof(date)!=='string')\r\n    date= new Date(date)   \r\n\r\n    return null;\r\n\r\n}\r\n\r\nexport function customTimeFormatter(date) {\r\n    \r\n   // printAllFormats(date);\r\n    \r\n  const format = (\r\n      d3.timeSecond(date) > date\r\n    ? formatMillisecond\r\n    : d3.timeMinute(date) > date\r\n    ? formatSecond\r\n    : d3.timeHour(date) > date\r\n    ? formatMinute\r\n    : d3.timeDay(date) > date\r\n    ? formatHour\r\n    : d3.timeMonth(date) > date\r\n    ? formatDay\r\n    : d3.timeWeek(date) > date\r\n    ? formatWeek\r\n    : d3.timeYear(date) > date\r\n    ? formatMonth\r\n    : formatYear)(date);\r\n    // console.log(format)\r\n\r\nreturn format;\r\n}","import React from \"react\";\r\nimport {format, timeFormat} from 'd3';\r\nimport * as d3  from 'd3';\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport {\r\n  BarSeries,\r\n  AreaSeries,\r\n  CandlestickSeries,\r\n  LineSeries\r\n} from \"react-stockcharts/lib/series\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport {\r\n  CrossHairCursor,\r\n  EdgeIndicator,\r\n  CurrentCoordinate,\r\n  MouseCoordinateX,\r\n  MouseCoordinateY\r\n} from \"react-stockcharts/lib/coordinates\";\r\n\r\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\r\nimport {\r\n  OHLCTooltip,\r\n  MovingAverageTooltip\r\n} from \"react-stockcharts/lib/tooltip\";\r\nimport { ema, heikinAshi, sma } from \"react-stockcharts/lib/indicator\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { last } from \"react-stockcharts/lib/utils\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { customTimeFormatter } from \"../../../utils/formatDate\";\r\n\r\nconst ChartStyles = styled.div`\r\n  /* background: #666; */\r\n`;\r\n\r\nclass HeikinAshi extends React.Component {\r\n \r\n  render() {\r\n\r\n    const ha = heikinAshi();\r\n    const ema20 = ema()\r\n      .id(0)\r\n      .options({ windowSize: 20 })\r\n      .merge((d, c) => {\r\n        d.ema20 = c;\r\n      })\r\n      .accessor(d => d.ema20);\r\n\r\n    const ema50 = ema()\r\n      .id(2)\r\n      .options({ windowSize: 50 })\r\n      .merge((d, c) => {\r\n        d.ema50 = c;\r\n      })\r\n      .accessor(d => d.ema50);\r\n\r\n    const smaVolume50 = sma()\r\n      .id(3)\r\n      .options({ windowSize: 50, sourcePath: \"volume\" })\r\n      .merge((d, c) => {\r\n        d.smaVolume50 = c;\r\n      })\r\n      .accessor(d => d.smaVolume50);\r\n\r\n    const { type, data: initialData, width, ratio } = this.props;\r\n    const parsedData = initialData.map(day => {\r\n      day.date = new Date(day.date);\r\n      day.open = +day.open;\r\n      day.high = +day.high;\r\n      day.low = +day.low;\r\n      day.close = +day.close;\r\n      day.volume = +day.volume;\r\n      return day;\r\n    }).sort(d=>d.date,d3.ascending);\r\n    const calculatedData = smaVolume50(ema50(ema20(ha(parsedData))));\r\n    const xScaleProvider = discontinuousTimeScaleProvider.inputDateAccessor(\r\n      d => d.date\r\n    );\r\n    const { data, xScale, xAccessor, displayXAccessor } = xScaleProvider(\r\n      calculatedData\r\n    );\r\n\r\nconst start = xAccessor(last(data));\r\nconst end = xAccessor(data[Math.max(0, data.length - 500)]);\r\nconst xExtents = [start, end];\r\n\r\n    return (\r\n      <ChartStyles>\r\n        <ChartCanvas\r\n          height={this.props.height}\r\n          ratio={1}\r\n          width={+width}\r\n          margin={{ left: 50, right: 50, top: 10, bottom: 30 }}\r\n          seriesName={this.props.ticker}\r\n          type={type}\r\n          data={data}\r\n          xScale={xScale}\r\n          xAccessor={xAccessor}\r\n          displayXAccessor={displayXAccessor}\r\n          xExtents={xExtents}\r\n          clamp='both'>\r\n          <Chart\r\n            id={1}\r\n            height={this.props.height * 0.7}\r\n            yExtents={[\r\n              d => [d.high, d.low],\r\n              ema20.accessor(),\r\n              ema50.accessor()\r\n            ]}\r\n            padding={{ top: 10, bottom: 20 }}>\r\n            <YAxis axisAt='right' orient='right' ticks={5} />\r\n            <MouseCoordinateY\r\n              at='right'\r\n              orient='right'\r\n              displayFormat={format(\".1f\")}\r\n            />\r\n\r\n            <CandlestickSeries />\r\n            <LineSeries yAccessor={ema20.accessor()} stroke={ema20.stroke()} />\r\n            <LineSeries yAccessor={ema50.accessor()} stroke={ema50.stroke()} />\r\n\r\n            <CurrentCoordinate\r\n              yAccessor={ema20.accessor()}\r\n              fill={ema20.stroke()}\r\n            />\r\n            <CurrentCoordinate\r\n              yAccessor={ema50.accessor()}\r\n              fill={ema50.stroke()}\r\n            />\r\n\r\n            <EdgeIndicator\r\n              itemType='last'\r\n              orient='right'\r\n              edgeAt='right'\r\n              yAccessor={ema20.accessor()}\r\n              fill={ema20.fill()}\r\n            />\r\n            <EdgeIndicator\r\n              itemType='last'\r\n              orient='right'\r\n              edgeAt='right'\r\n              yAccessor={ema50.accessor()}\r\n              fill={ema50.fill()}\r\n            />\r\n            <EdgeIndicator\r\n              itemType='last'\r\n              orient='right'\r\n              edgeAt='right'\r\n              yAccessor={d => d.close}\r\n              fill={d => (d.close > d.open ? \"#6BA583\" : \"#FF0000\")}\r\n            />\r\n            <EdgeIndicator\r\n              itemType='first'\r\n              orient='left'\r\n              edgeAt='left'\r\n              yAccessor={ema20.accessor()}\r\n              fill={ema20.fill()}\r\n            />\r\n            <EdgeIndicator\r\n              itemType='first'\r\n              orient='left'\r\n              edgeAt='left'\r\n              yAccessor={ema50.accessor()}\r\n              fill={ema50.fill()}\r\n            />\r\n            <EdgeIndicator\r\n              itemType='first'\r\n              orient='left'\r\n              edgeAt='left'\r\n              yAccessor={d => d.close}\r\n              fill={d => (d.close > d.open ? \"#6BA583\" : \"#FF0000\")}\r\n            />\r\n\r\n            <OHLCTooltip origin={[-40, 0]} />\r\n            <MovingAverageTooltip\r\n              onClick={e => console.log(e)}\r\n              origin={[-38, 15]}\r\n              options={[\r\n                {\r\n                  yAccessor: ema20.accessor(),\r\n                  type: \"EMA\",\r\n                  stroke: ema20.stroke(),\r\n                  windowSize: ema20.options().windowSize\r\n                },\r\n                {\r\n                  yAccessor: ema50.accessor(),\r\n                  type: \"EMA\",\r\n                  stroke: ema50.stroke(),\r\n                  windowSize: ema50.options().windowSize\r\n                }\r\n              ]}\r\n            />\r\n          </Chart>\r\n          <Chart\r\n            id={2}\r\n            yExtents={[d => d.volume, smaVolume50.accessor()]}\r\n            height={this.props.height * 0.2}\r\n            margin={{ top: 10, bottom: 20 }}\r\n            origin={(w, h) => [0, h - this.props.height * 0.2]}>\r\n            <XAxis axisAt='bottom' orient='bottom' />\r\n\r\n            <YAxis\r\n              axisAt='left'\r\n              orient='left'\r\n              ticks={5}\r\n              tickFormat={format(\".2s\")}\r\n            />\r\n            <MouseCoordinateX\r\n              at='bottom'\r\n              orient='bottom'\r\n              displayFormat={customTimeFormatter}\r\n            />\r\n            <MouseCoordinateY\r\n              at='left'\r\n              orient='left'\r\n              displayFormat={format(\".2s\")}\r\n            />\r\n            <BarSeries\r\n              yAccessor={d => d.volume}\r\n              fill={d => (d.close > d.open ? \"#6BA583\" : \"#FF0000\")}\r\n            />\r\n\r\n            <CurrentCoordinate yAccessor={d => d.volume} fill='#9B0A47' />\r\n          </Chart>\r\n          <CrossHairCursor />\r\n        </ChartCanvas>\r\n      </ChartStyles>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nHeikinAshi = fitWidth(HeikinAshi);\r\nexport default HeikinAshi;\r\n","import React from 'react';\r\n\r\nexport default function Banner({ width, height, tickerSymbol }) {\r\n  return (\r\n    <div\r\n      className='topcorner'\r\n      style={{ position: \"absolute\", top: 0, left: 0 }}>\r\n      <svg height={height} width={width}>\r\n        <path fill='#f6f0f2' d={`M0,0L${width},0L0,${height}L0,0`} />\r\n        <path\r\n          fill='white'\r\n          d={`M0,0L${width},0L0,${height}L0,0`}\r\n          transform='scale(.95)'\r\n        />\r\n        <path\r\n          fill='transparent'\r\n          stroke='#ff6a88'\r\n          strokeWidth={1}\r\n          d={`M5,5L${width - 20},5L5,${height - 20}L5,5`}\r\n        />\r\n        <text\r\n          fontFamily='Droid Sans Mono'\r\n          fill='#ff6a88'\r\n          fontSize={14}\r\n          transform='translate(40,60)rotate(-40)'>\r\n          {tickerSymbol}\r\n\r\n        </text>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { withParentSize } from \"@vx/vx\";\r\nimport React from \"react\";\r\nconst Logo = withParentSize(function({ parentWidth, parentHeight }) {\r\n  const margin = {\r\n    top: 5,\r\n    bottom: 5,\r\n    right: 22,\r\n    left: 22\r\n  };\r\n  const width = parentWidth - margin.left - margin.right;\r\n  const wCenter = parentWidth / 2;\r\n  const hCenter = parentHeight / 2;\r\n  const topCenter = hCenter - hCenter * 0.25;\r\n  const bottomCenter = hCenter + hCenter * 0.25;\r\n  return (\r\n    <svg width={parentWidth} height={parentHeight}>\r\n      <g fill='#ff6f88'>\r\n        <path\r\n          fillOpacity={0.5}\r\n          d={`M${wCenter},${margin.top}L${wCenter},${topCenter}L${\r\n            margin.left\r\n          },${hCenter}L${wCenter},${margin.top}`}\r\n        />\r\n        <path\r\n          fillOpacity={0.6}\r\n          d={`M${wCenter},${margin.top}L${wCenter},${topCenter}L${parentWidth -\r\n            margin.right},${hCenter}L${wCenter},${margin.top}`}\r\n        />\r\n        <path\r\n          fillOpacity={0.8}\r\n          d={`M${wCenter},${topCenter}L${wCenter},${bottomCenter}L${\r\n            margin.left\r\n          },${hCenter}L${wCenter},${topCenter}`}\r\n        />\r\n        <path\r\n          fillOpacity={0.9}\r\n          d={`M${wCenter},${topCenter}L${wCenter},${bottomCenter}L${parentWidth -\r\n            margin.right},${hCenter}L${wCenter},${topCenter}`}\r\n        />\r\n        <path\r\n          fillOpacity={0.5}\r\n          d={`M${margin.left},${hCenter + 3}L${wCenter},${bottomCenter +\r\n            3}L${wCenter},${parentHeight - margin.bottom}L${\r\n            margin.left\r\n          },${hCenter + 3}`}\r\n        />\r\n        <path\r\n          fillOpacity={0.8}\r\n          d={`M${parentWidth - margin.right},${hCenter +\r\n            3}L${wCenter},${bottomCenter + 3}L${wCenter},${parentHeight -\r\n            margin.bottom}L${parentWidth - margin.right},${hCenter + 3}`}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n});\r\n\r\nconst StyledBanner = styled.div`\r\n  \r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translate(-40px, 75%);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n  image {\r\n    display: flex;\r\n    background-color: white;\r\n    width: 80px;\r\n    height: 80px;\r\n    box-shadow: 0 1px 10px rgba(0, 0, 0, 0.1);\r\n  }\r\n  .controls {\r\n    background-color: white;\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 0 1px 10px rgba(0, 0, 0, 0.1);\r\n    user-select: none;\r\n  }\r\n  .numitems {\r\n    margin: 0 0.5rem;\r\n    font-size: 22px;\r\n    min-width: 40px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport default function Banner({\r\n  logo,increaseNumItems,\r\n  decreaseNumItems,\r\n  numItems\r\n}) {\r\n  return (\r\n    <StyledBanner>\r\n        <div className='controls'>\r\n          <button onClick={increaseNumItems}>+</button>\r\n          <span className='numitems'>{numItems}</span>\r\n          <button onClick={decreaseNumItems}>-</button>\r\n        </div>   \r\n        <img style={{}} src={logo}/>     \r\n    </StyledBanner>\r\n  );\r\n}\r\n","import { Tooltip } from \"@vx/vx\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst StyledDetails = styled.div`\r\n  .details {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .detail {\r\n    margin-right: 1rem;\r\n  }\r\n  .tooltip-label {\r\n    font-size: 9px;\r\n    font-weight: 900;\r\n    color: #5473b8;\r\n  }\r\n`;\r\n\r\nexport default function Details({\r\n  formatPrice,\r\n  formatNumber,\r\n  bucket,\r\n  xScale,\r\n  yScale\r\n}) {\r\n  const left = xScale(bucket.date) + xScale.bandwidth() + 5;\r\n  const halfway = xScale.range()[1] / 2;\r\n\r\n\r\n  return (\r\n    <StyledDetails>\r\n      <Tooltip\r\n        style={{\r\n          borderRadius: 0,\r\n          boxShadow: \"0 1px 10px rgba(0,0,0,0.1)\",\r\n          backgroundColor: \"#27273f\",\r\n          color: \"white\",\r\n          transform: xScale(bucket.date) > halfway ? \"translate(-104%)\" : \"\"\r\n        }}\r\n        top={yScale(bucket.low)}\r\n        left={left}>\r\n        {\" \"}\r\n        <div className='details'>\r\n          <div className='detail'>\r\n            <div className='tooltip-label' style={{ fontSize: \"9px\",fontWeight: \"900\",color: \"#5473b8\"}}>high</div>\r\n            <div>{formatPrice(bucket.high)}</div>\r\n          </div>\r\n          <div className='detail'>\r\n            <div className='tooltip-label'>low</div>\r\n            <div>{formatPrice(bucket.low)}</div>\r\n          </div>\r\n          <div className='detail'>\r\n            <div className='tooltip-label'>open</div>\r\n            <div>{formatPrice(bucket.open)}</div>\r\n          </div>\r\n          <div className='detail'>\r\n            <div className='tooltip-label'>close</div>\r\n            <div>{formatPrice(bucket.close)}</div>\r\n          </div>\r\n          <div className='detail'>\r\n            <div className='tooltip-label'>volume</div>\r\n            <div>{formatNumber(bucket.volume)}</div>\r\n          </div>\r\n        </div>\r\n      </Tooltip>\r\n    </StyledDetails>\r\n  );\r\n}\r\n","import { Tooltip } from '@vx/vx';\r\nimport React from 'react';\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst StyledTimeMarker = styled.div`\r\n\r\n`;\r\n\r\nexport default function TimeMarker({ top, time, formatTime, xScale }) {\r\n  const left= xScale(time);\r\n  return (\r\n    <StyledTimeMarker>\r\n      <Tooltip\r\n        style={{\r\n          \r\n          borderRadius: 0,\r\n          boxShadow: \"0 1px 10px rgba(0,0,0,0.1)\",\r\n          backgroundColor: \"#27273f\",\r\n          color: \"white\",\r\n          fontSize: \"11px\"\r\n        }}\r\n        top={top}\r\n        left={left}>\r\n        <div>{formatTime(time)}</div>\r\n      </Tooltip>\r\n    </StyledTimeMarker>\r\n  );\r\n}\r\n","import { Bar, Line } from '@vx/vx';\r\nimport React from 'react';\r\n\r\nexport default function HoverMarker({\r\n  yScale,\r\n  xScale,\r\n  height,\r\n  width,\r\n  margin,\r\n  time,\r\n  yPoint,\r\n  formatPrice\r\n}) {\r\n  return (\r\n    <g>\r\n      <Bar\r\n        width={xScale.bandwidth()}\r\n        height={height - margin.bottom}\r\n        fill=\"white\"\r\n        fillOpacity={0.2}\r\n        x={xScale(time)}\r\n      />\r\n      <Line\r\n        x1={0}\r\n        x2={width}\r\n        y1={yPoint}\r\n        y2={yPoint}\r\n        stroke=\"white\"\r\n        strokeOpacity={0.6}\r\n      />\r\n      <rect\r\n        width={55}\r\n        height={20}\r\n        fill=\"#27273f\"\r\n        y={yPoint - 11}\r\n        x={width - 55}\r\n      />\r\n      <path\r\n        d={`M${width - 55},${yPoint - 11}L${width - 55},${yPoint -\r\n          11 +\r\n          20},L${width - 55 - 10},${yPoint},${width - 55},${yPoint - 11}`}\r\n        fill=\"#27273f\"\r\n      />\r\n      <text fontSize={11} x={width - 50} y={yPoint} dy=\"0.3em\" fill=\"white\">\r\n        {formatPrice(yScale.invert(yPoint))}\r\n      </text>\r\n    </g>\r\n  );\r\n}\r\n","import {\r\n  Bar,\r\n  Line,\r\n  Group,\r\n  Tooltip,\r\n  withTooltip,\r\n  withScreenSize,\r\n  withParentSize,\r\n  scaleTime,\r\n  scaleBand,\r\n  scaleLinear,\r\n  LinearGradient,\r\n  localPoint,\r\n  GridColumns,\r\n  GridRows,\r\n  AxisRight,\r\n  AxisLeft,\r\n  AxisBottom,\r\n  GradientOrangeRed\r\n} from \"@vx/vx\";\r\nimport * as d3 from \"d3\";\r\nimport Volume from \"./VolumeDisplay\";\r\nimport Details from \"./DetailsDisplay\";\r\nimport TimeMarker from \"./TimeMarkerDisplay\";\r\nimport HoverMarkers from \"./HoverMarkersDisplay\";\r\nimport React from \"react\";\r\n\r\nconst formatPrice = d3.format(\"$,.2f\");\r\nconst formatNumber = d3.format(\",.0f\");\r\nconst formatTime = d3.timeFormat(\"%I:%M%p\");\r\n\r\nconst xStock = d => new Date(d.date);\r\nconst xSelector = d => new Date(d.date);\r\nconst ySelector = d => d.price;\r\nconst bisectDate = d3.bisector(xSelector).left;\r\nclass Chart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeBucket: undefined,\r\n      yPoint: undefined\r\n    };\r\n  }\r\n\r\n  handleTooltip = ({ event, data, xSelector, xScale, yScale }) => {\r\n    console.log(`INSIDE HANDLE TOOLTIP${data}${event}`);\r\n    const { showTooltip } = this.props;\r\n    const { x } = localPoint(event);\r\n    const x0 = xScale.invert(x);\r\n    const index = bisectDate(data, x0, 1);\r\n    const d0 = data[index - 1];\r\n    const d1 = data[index];\r\n    let d = d0;\r\n    if (d1 && d1.date) {\r\n      d = x0 - xSelector(d0) > xSelector(d1) - x0 ? d1 : d0;\r\n    }\r\n    showTooltip({\r\n      tooltipData: d,\r\n      tooltipLeft: xScale(xSelector(d)),\r\n      tooltipTop: yScale(ySelector(d))\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      parentWidth,\r\n      parentHeight,\r\n      data,\r\n      showTooltip,\r\n      hideTooltip,\r\n      tooltipLeft,\r\n      tooltipTop,\r\n      tooltipData\r\n    } = this.props;\r\n    const { buckets, start, end, maxHighPrice, minLowPrice, maxVolume } = data;\r\n    const { activeBucket, yPoint } = this.state;\r\n\r\n    const margin = {\r\n      top: 0,\r\n      left: 0,\r\n      right: 40,\r\n      bottom: 80\r\n    };\r\n\r\n    const width = parentWidth;\r\n    const height = parentHeight;\r\n\r\n    const xScale = scaleBand({\r\n      range: [0, width - margin.right],\r\n      domain: buckets.map(b => b.date),\r\n      padding: 0.3\r\n    });\r\n    const timeScale = scaleTime({\r\n      range: [0, width - margin.right],\r\n      domain: [start, end]\r\n    });\r\n    const yScale = scaleLinear({\r\n      range: [height - margin.bottom, 20],\r\n      domain: [minLowPrice, maxHighPrice]\r\n    });\r\n\r\n    const volumeHeight = (height - margin.bottom) * 0.2;\r\n    const yVolumeScale = scaleLinear({\r\n      range: [volumeHeight, 0],\r\n      domain: [0, maxVolume]\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <svg width={width} height={height} ref={s => (this.svg = s)}>\r\n          <defs>\r\n            <GradientOrangeRed id='OrangeRed' />\r\n          </defs>\r\n          <Group top={margin.top} left={margin.left}>\r\n            <rect width={width} height={height} fill='url(#OrangeRed)' />\r\n            <GridRows\r\n              lineStyle={{ pointerEvents: \"none\" }}\r\n              width={width - margin.right}\r\n              height={height}\r\n              scale={yScale}\r\n              stroke='rgba(255,255,255,0.2)'\r\n            />\r\n            <GridColumns\r\n              lineStyle={{ pointerEvents: \"none\" }}\r\n              width={width}\r\n              height={height - margin.bottom}\r\n              scale={timeScale}\r\n              stroke='rgba(255,255,255,0.1)'\r\n            />\r\n          </Group>\r\n          {buckets.map(b => {\r\n            return (\r\n              <g key={`b-${b.date}`}>\r\n                <line\r\n                  //CANDLESTICK BOTTOM WICK\r\n                  x1={xScale(b.date) + xScale.bandwidth() / 2}\r\n                  x2={xScale(b.date) + xScale.bandwidth() / 2}\r\n                  y1={yScale(b.high)}\r\n                  y2={b.hollow ? yScale(b.close) : yScale(b.low)}\r\n                  stroke='white'\r\n                  strokeWidth={1}\r\n                />\r\n\r\n                <Bar\r\n                  data={b}\r\n                  width={xScale.bandwidth()}\r\n                  height={\r\n                    b.hollow\r\n                      ? yScale(b.open) - yScale(b.close)\r\n                      : yScale(b.close) - yScale(b.open)\r\n                  }\r\n                  fill={b.hollow ? \"transparent\" : \"white\"}\r\n                  stroke={b.hollow ? \"white\" : \"transparent\"}\r\n                  strokeWidth={1}\r\n                  x={xScale(b.date)}\r\n                  y={b.hollow ? yScale(b.close) : yScale(b.open)}\r\n                />\r\n                <Group top={height - margin.bottom - volumeHeight}>\r\n                  <Bar\r\n                    data={b}\r\n                    width={xScale.bandwidth()}\r\n                    height={volumeHeight - yVolumeScale(b.volume)}\r\n                    x={xScale(b.date)}\r\n                    y={yVolumeScale(b.volume)}\r\n                    fill={b.hollow ? \"transparent\" : \"white\"}\r\n                    stroke={b.hollow ? \"white\" : \"transparent\"}\r\n                    fillOpacity={0.7}\r\n                    strokeOpacity={0.7}\r\n                  />\r\n                </Group>\r\n                \r\n              </g>\r\n            );\r\n          })}\r\n          <Group top={height - margin.bottom - volumeHeight}>\r\n            <AxisRight\r\n              id='VOLUME_AXIS'\r\n              scale={yVolumeScale}\r\n              hideZero\r\n              hideTicks\r\n              hideAxisLine\r\n              tickStroke='white'\r\n              tickValues={yVolumeScale.ticks(3)}\r\n              tickLabelProps={(value, index) => ({\r\n                dx: \"2em\",\r\n                dy: \"-0.5em\",\r\n                textAnchor: \"middle\",\r\n                fill: \"black\",\r\n                fontSize: 8,\r\n                fillOpacity: 0.8\r\n              })}\r\n            />\r\n          </Group>\r\n          <AxisLeft\r\n            id='PRICE_AXIS'\r\n            left={width}\r\n            scale={yScale}\r\n            hideAxisLine\r\n            hideTicks\r\n            hideZero\r\n            tickFormat={formatPrice}\r\n            tickStroke='black'\r\n            tickValues={yScale.ticks(3)}\r\n            tickLabelProps={(value, index) => ({\r\n              dy: \"0.5em\",\r\n              textAnchor: \"end\",\r\n              fill: \"black\",\r\n              fontSize: 8,\r\n              fillOpacity: 0.8\r\n            })}\r\n          />\r\n          {activeBucket && (\r\n            <HoverMarkers\r\n              xScale={xScale}\r\n              yScale={yScale}\r\n              height={height}\r\n              width={width}\r\n              margin={margin}\r\n              time={activeBucket.date}\r\n              yPoint={yPoint}\r\n              formatPrice={formatPrice}\r\n            />\r\n          )}\r\n          <Bar\r\n            data={data}\r\n            width={width}\r\n            height={height - margin.bottom}\r\n            fill='transparent'\r\n\r\n            onMouseMove={event => {\r\n              const { x: xPoint, y: yPoint } = localPoint(this.svg, event);\r\n              const bandWidth = xScale.step();\r\n              const index = Math.floor(xPoint / bandWidth);\r\n              const val = buckets[index];\r\n              this.setState({\r\n                activeBucket: val,\r\n                yPoint\r\n              });\r\n            }}\r\n            onMouseLeave={event =>\r\n              this.setState({ activeBucket: undefined, yPoint: undefined })\r\n            }\r\n          />\r\n          <AxisBottom\r\n            top={height - margin.bottom}\r\n            scale={timeScale}\r\n            stroke='rgba(255,255,255,0.5)'\r\n            tickStroke='rgba(255,255,255,0.5)'\r\n            tickFormat={d3.timeFormat(\"%Y-%m-%d\")}\r\n            tickLabelProps={(value, index) => ({\r\n              textAnchor: \"middle\",\r\n              fill: \"white\",\r\n              fontSize: 8,\r\n              fillOpacity: 0.8\r\n            })}\r\n          />\r\n          \r\n        </svg>\r\n        {activeBucket && (\r\n          <div>\r\n            <TimeMarker\r\n              top={height - margin.bottom + 3}\r\n              xScale={xScale}\r\n              formatTime={d3.timeFormat(\"%Y-%m-%d\")}\r\n              time={activeBucket.date}\r\n            />\r\n            <Details\r\n              yScale={yScale}\r\n              xScale={xScale}\r\n              formatPrice={formatPrice}\r\n              formatNumber={formatNumber}\r\n              bucket={activeBucket}\r\n            />\r\n          </div>\r\n        )}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withParentSize(withTooltip(Chart));\r\n","import { default as TopCorner } from \"./topcorner/TopCornerDisplay\";\r\nimport { default as Banner } from \"./banner/BannerDisplay\";\r\nimport { default as Chart } from \"./chart/CandleStickChart\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {ascending} from 'd3'\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { customTimeFormatter } from \"../../../../utils/formatDate\";\r\n\r\n\r\n\r\nconst StyleWrapper = styled.div`\r\n  @import url(\"https://fonts.googleapis.com/css?family=Droid+Sans+Mono\");\r\n\r\n  .stylizedCandleStick {\r\n\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    justify-content: center;\r\n    align-content: center;\r\n    \r\n    /* background-color: #f6f0f2; */\r\n    font-family: \"Droid Sans Mono\", monospace;\r\n    padding:0;\r\n    margin:0;\r\n  }\r\n  .container {\r\n    height: 75vh;\r\n    width: 95vw;\r\n    /* background-color: #ecc3c7; */\r\n    position: relative;\r\n  }\r\n  .chart-container {\r\n    cursor: crosshair;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StylizedCandleStickChart = ({ ticker, data, logo, ...props }) => {\r\n\r\n    const [numItems, setNumItems] = useState(180);\r\n    const [imgSrc, setImgSrc] = useState(logo);\r\n    useEffect(() => {\r\n      setImgSrc(logo);\r\n    }, [logo]);\r\n\r\n    const increaseNumItems = () => {\r\n      if (numItems === 500) return;\r\n      setNumItems(numItems + 20);\r\n    };\r\n\r\n    const decreaseNumItems = () => {\r\n      if (numItems === 40) return;\r\n      setNumItems(numItems - 20);\r\n    };\r\n\r\n    const buckets = data\r\n      .map(b => {\r\n        const { date, open, high, low, close, volume } = b;\r\n        return {\r\n          date: new Date(date),\r\n          open: +open,\r\n          high: +high,\r\n          low: +low,\r\n          close: +close,\r\n          volume: +volume,\r\n          hollow: +close > +open\r\n        };\r\n      })\r\n      // .sort(d=>d.date,ascending)\r\n      .slice(0, numItems);\r\n    //console.log(buckets);\r\n    const sortedBuckets = buckets.sort(d=>d.date,ascending);\r\n    const maxHighPrice = Math.max(\r\n      ...buckets.map(b => Math.max(...[b.high, b.open, b.close]))\r\n    );\r\n    const minLowPrice = Math.min(\r\n      ...buckets.map(b => Math.min(...[b.low, b.open, b.close]))\r\n    );\r\n    const maxVolume = Math.max(...buckets.map(b => b.volume));\r\n\r\n    const start = sortedBuckets[0].date;\r\n    const end = sortedBuckets[sortedBuckets.length - 1].date;\r\n\r\n    return !data ? (\r\n      <h1>NO DATA</h1>\r\n    ) : (\r\n      <StyleWrapper>\r\n        <div className='stylizedCandleStick'>\r\n          <div className='container' width={props.width}>\r\n            <div className='chart-container'>\r\n              <Chart\r\n                data={{\r\n                  buckets: sortedBuckets,\r\n                  start,\r\n                  end,\r\n                  maxHighPrice,\r\n                  minLowPrice,\r\n                  maxVolume\r\n                }}\r\n              />\r\n            </div>\r\n            <TopCorner width={150} height={150} tickerSymbol={ticker} />\r\n\r\n            <Banner\r\n              logo={imgSrc}\r\n              numItems={numItems}\r\n              increaseNumItems={increaseNumItems}\r\n              decreaseNumItems={decreaseNumItems}\r\n            />\r\n          </div>\r\n        </div>\r\n      </StyleWrapper>\r\n    );\r\n \r\n};\r\n\r\nexport default fitWidth(StylizedCandleStickChart);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { Grid, Segment, Header, Image, Label } from \"semantic-ui-react\";\r\nimport Clock from \"react-live-clock\";\r\nimport StatsPrice from \"./UpdateStatsPrice\";\r\nimport StatsDetails from \"./UpdateStatsDetails\";\r\nimport DarkButtons from \"../../extraFeaturesFolder/DarkButtonsDisplay\";\r\nimport NotFound from \"../NotFound\";\r\nimport LineChart from \"../ChartsFolder/LCDiagram\";\r\nimport setTitle from \"../../../utils/title\";\r\nimport HeikinAshi from \"../ChartsFolder/HADiagram\";\r\nimport StylizedCandleStickChart from \"../ChartsFolder/StylizedCandlestick\";\r\n\r\nconst unixTimeParser = d3.timeParse(\"%s\");\r\n\r\nconst fetchDynamicTodayData = async symbol => {\r\n  const range = \"today\";\r\n  {\r\n    const data = await d3.json(\r\n      `https://api.iextrading.com/1.0/stock/aapl/chart/dynamic?chartReset=true`\r\n    );\r\n\r\n    data.data.forEach(d => {\r\n      let year = d.date.slice(0, 4);\r\n      let month = d.date.slice(4, 6);\r\n      let day = d.date.slice(6, 8);\r\n      const stringDate = `${year}-${month}-${day}T${d.minute}`;\r\n      d.date = new Date(stringDate);\r\n    });\r\n    return data.data;\r\n  }\r\n};\r\n\r\nconst fetchIntradayData = async symbol => {\r\n  const period = \"1min\";\r\n  const data = await d3.json(\r\n    `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${symbol}&interval=${period}&outputsize=full&apikey=TRDGNTGBQG2BI9J0`\r\n  );\r\n\r\n  return [\r\n    ...Object.entries(data[\"Time Series (1min)\"]).map(([date, cols]) => {\r\n      return {\r\n        date: new Date(date),\r\n        open: +cols[\"1. open\"],\r\n        high: +cols[\"2. high\"],\r\n        low: +cols[\"3. low\"],\r\n        close: +cols[\"4. close\"],\r\n        volume: +cols[\"5. volume\"]\r\n      };\r\n    })\r\n  ];\r\n};\r\n\r\nexport const colorPerf = num => {\r\n  if (num > 0) {\r\n    return \"green\";\r\n  } else if (num < 0) {\r\n    return \"red\";\r\n  }\r\n  return \"black\";\r\n};\r\nconst PeerPerformance = ({ peers, peerData }) => {\r\n  // console.log(peerData)\r\n  return peers.map((peer, i) =>\r\n    !peerData[peer] ? null : !peerData[peer].chart.length > 0 ? null : (\r\n      <LineChart\r\n        style={{ display: \"inlineBlock\" }}\r\n        key={`${i}-${peerData[peer].quote.symbol}`}\r\n        name={peerData[peer].quote.symbol}\r\n        companyName={peerData[peer].quote.companyName}\r\n        data={peerData[peer].chart}\r\n        latestPrice={peerData[peer].quote.latestPrice}\r\n        changePercent={peerData[peer].quote.changePercent}\r\n        volume={peerData[peer].quote.latestVolume}\r\n        width='150'\r\n        height='75'\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\nconst QuoteData = props => {\r\n  console.log(props.quote);\r\n\r\n  \r\n  const [chartData, setChartData] = useState(null);\r\n  setTitle(props.symbol, props.quote.regularMarketPrice);\r\n\r\n  const [activePeriod, setActivePeriod] = useState(\"YTD\");\r\n  const [imgSrc, setImgSrc] = useState(null);\r\n  const [historicalData, setHistoricalData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let p1 = 0,\r\n      p2 = 99999999999,\r\n      interval = \"1d\";\r\n\r\n    const intraDayFetcher = async () => {\r\n      const data = await fetchIntradayData(props.symbol);\r\n      setChartData(data);\r\n    };\r\n    if (activePeriod === \"1D\") {\r\n      intraDayFetcher();\r\n    } else {\r\n      if (activePeriod.endsWith(\"M\")) {\r\n        let num = [...activePeriod][0];\r\n        let d = new Date(Date.now());\r\n        d.setMonth(d.getMonth() - num);\r\n        console.log(d);\r\n\r\n        p1 = Math.floor(d.getTime() / 1000);\r\n\r\n      } else if (activePeriod.endsWith(\"Y\")) {\r\n        let num = [...activePeriod][0];\r\n        let d = new Date(Date.now());\r\n        d.setYear(d.getFullYear() - num);\r\n        p1 = Math.floor(d.getTime() / 1000);\r\n        \r\n      } else if (activePeriod === \"YTD\") {\r\n        p1 = new Date(d3.timeYear(Date.now())).getTime() / 1000;\r\n        \r\n      }\r\n      const fetcher = async (s, i, _p1, _p2) => {\r\n        let data = await props.chartDataHandler(s, i, _p1, _p2);\r\n        setChartData(data);\r\n      };\r\n\r\n      fetcher(props.symbol, interval, p1, p2);\r\n    }\r\n    return;\r\n  }, [activePeriod]);\r\n\r\n  console.log(props.quote);\r\n\r\n  return (\r\n    <Segment>\r\n      <Grid columns={3}>\r\n        <Grid.Column width={2}>\r\n          {imgSrc ? (\r\n            <Image\r\n              onError={e => setImgSrc(null)}\r\n              bottom\r\n              src={imgSrc}\r\n              size='small'\r\n            />\r\n          ) : null}\r\n        </Grid.Column>\r\n        <Grid.Column width={11}>\r\n          <Header\r\n            style={{\r\n              fontFamily: \"Dancing Script\",\r\n              fontSize: \"4vw\",\r\n              fontWeight: \"800\"\r\n            }}\r\n            textAlign='center'>\r\n            {props.quote.longName} ({props.quote.symbol})\r\n          </Header>\r\n        </Grid.Column>\r\n        <Grid.Column width={2}>\r\n          <StatsPrice\r\n            last={props.quote.regularMarketPrice}\r\n            change={props.quote.regularMarketChange}\r\n            percent={props.quote.regularMarketChangePercent}\r\n            color={colorPerf(props.quote.regularMarketChange)}\r\n          />\r\n        </Grid.Column>\r\n      </Grid>\r\n\r\n      <Grid stackable>\r\n        {!chartData ? (\r\n          \"NO DATA\"\r\n        ) : (\r\n          <>\r\n            <div\r\n              style={{\r\n                width: \"100vw\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                position: \"block\"\r\n              }}>\r\n              <HeikinAshi\r\n                style={{ margin: \"auto\" }}\r\n                height={600}\r\n                data={chartData}\r\n                type='hybrid'\r\n                ticker={props.symbol}\r\n                xAxis='date'\r\n                yAxis='volume'\r\n              />\r\n            </div>\r\n\r\n            <DarkButtons\r\n              default={\"YTD\"}\r\n              timeRangeArray={[\"1d\", \"1m\", \"3m\", \"6m\", \"1y\", \"ytd\", \"max\"]}\r\n              clickEffect={setActivePeriod}\r\n            />\r\n            <StatsDetails data={props.quote} />\r\n            <div\r\n              style={{\r\n                width: \"100vw\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                position: \"block\"\r\n              }}>\r\n              <StylizedCandleStickChart\r\n                style={{ margin: \"auto\" }}\r\n                height={600}\r\n                data={chartData}\r\n                ticker={props.symbol}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\nexport default QuoteData;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\nconst Loading = props => {\r\n  return props.page ? (\r\n    <Dimmer active page={false}>\r\n      <Loader inline content={props.content} />\r\n    </Dimmer>\r\n  ) : (\r\n    <Loader inline active content={props.content} />\r\n  );\r\n};\r\n\r\nLoading.propTypes = {\r\n  page: PropTypes.bool,\r\n  content: PropTypes.string,\r\n};\r\n\r\nLoading.defaultProps = {\r\n  page: true,\r\n  content: 'Loading...',\r\n};\r\n\r\nexport default Loading;\r\n","\r\nimport _ from \"lodash\";\r\n\r\nimport * as d3 from \"d3\";\r\n\r\n\r\n//https://cloud.iexapis.com/stable/stock/aapl/chart/1y?token=pk_930da6c1c50b4e33914febac3ab39fcb\r\nexport const fetchChart = async (symbol, range) => {\r\n  const data = await d3.json(\r\n    `https://cloud.iexapis.com/stable/stock/${symbol}/chart/${range}?token=pk_1b77cc50b5cc4138bf37e0c1a87768c5`,\r\n    \r\n\r\n    d3.autoType\r\n  );\r\n\r\n  return data;\r\n\r\n  \r\n};\r\nexport const fetchAllCharts = async symbol => {\r\n  const data = await Promise.all([\r\n    await fetchIntradayData(symbol),\r\n    await fetchChart(symbol, \"1m\"),\r\n    await fetchChart(symbol, \"3m\"),\r\n    await fetchChart(symbol, \"6m\"),\r\n    await fetchChart(symbol, \"1y\"),\r\n    await fetchChart(symbol, \"5y\"),\r\n    await fetchChart(symbol, \"ytd\")\r\n  ]);\r\n\r\n  return {\r\n    \"1D\": data[0],\r\n    \"1M\": data[1],\r\n    \"3M\": data[2],\r\n    \"6M\": data[3],\r\n    \"1Y\": data[4],\r\n    \"5Y\": data[5],\r\n    YTD: data[6]\r\n  };\r\n};\r\n\r\nexport const fetchQuote = async symbol => {\r\n  //https://cloud.iexapis.com/stable/stock/AIG/batch?token=pk_930da6c1c50b4e33914febac3ab39fcb&types=quote,logo,stats,news\r\n  const data = await d3.json(\r\n    `https://cloud.iexapis.com/stable/stock/${symbol}/batch?token=pk_1b77cc50b5cc4138bf37e0c1a87768c5&types=quote,logo,stats,news`,\r\n    d3.autoType\r\n  );\r\n  return data;\r\n};\r\n\r\n\r\nexport const fetchIntradayData = async symbol => {\r\n  const period = \"1min\";\r\n  const data = await d3.json(\r\n    `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${symbol}&interval=${period}&outputsize=full&apikey=TRDGNTGBQG2BI9J0`\r\n  );\r\n\r\n  return [\r\n    ...Object.entries(data[\"Time Series (1min)\"]).map(([date, cols]) => {\r\n      return {\r\n        ...cols,\r\n        date: new Date(date),\r\n        open: +cols[\"1. open\"],\r\n        high: +cols[\"2. high\"],\r\n        low: +cols[\"3. low\"],\r\n        close: +cols[\"4. close\"],\r\n        volume: +cols[\"5. volume\"]\r\n      };\r\n    })\r\n  ];\r\n};\r\n\r\nconst makeApiCall = async (symbol, period = \"1y\") => {\r\n  let timeParser = d3.timeParse(\"%Y-%m-%d\");\r\n  if (period === \"1d\") timeParser = d3.timeParse(\"%Y%m%d%H:%M\");\r\n\r\n  let prices = [];\r\n  let times = [];\r\n  const d = await d3.json(\r\n    `https://api.iextrading.com/1.0/stock/${symbol}/chart/${period}`\r\n  );\r\n\r\n  if (d[0][\"date\"] == null) {\r\n    makeApiCall(symbol, period);\r\n    return;\r\n  }\r\n\r\n  for (let i = 0; i < d.length; i++) {\r\n    if (d[i][\"marketNumberOfTrades\"] === 0 || d[i][\"marketAverage\"] === -1) {\r\n      d.splice(i, 1);\r\n      i--;\r\n      continue;\r\n    }\r\n\r\n    if (period === \"1d\") {\r\n      d[i][\"close\"] = d[i][\"marketAverage\"];\r\n      d[i][\"date\"] = timeParser(d[i][\"date\"] + d[i][\"minute\"]);\r\n    } else {\r\n      d[i][\"date\"] = timeParser(d[i][\"date\"]);\r\n    }\r\n\r\n    times.push(d[i][\"date\"]);\r\n    prices.push(d[i][\"close\"]);\r\n  }\r\n\r\n  return { times, prices, d };\r\n\r\n  \r\n};\r\nexport const fetchQuoteData = async (symbol, frequency) => {\r\n  const data = await Promise.all([\r\n    await fetchQuote(symbol),\r\n    await fetchAllCharts(symbol)\r\n    \r\n  ]);\r\n\r\n  return {\r\n    quote: data[0],\r\n    rangeData: data[1]\r\n  };\r\n};\r\n\r\n\r\n\r\n  const parseSparkData = data => data.map(x=>{  \r\n  let closes = x.response[0].indicators.quote[0].close;\r\n  let timestamps = x.response[0].timestamp.map(ts=>unixTimeParser(ts));\r\n  let dataZip = d3.zip(closes,timestamps);\r\n\r\n  const sparkData = {\r\n    symbol: x.symbol,\r\n    data: dataZip.map(d => {\r\n      return { date: d[1], value: d[0] };\r\n    })\r\n  };\r\n\r\n  return sparkData;\r\n  }) \r\n\r\n  const unixTimeParser = d3.timeParse(\"%s\");\r\n\r\nexport const fetchIndiciesData = async symbols => {\r\n  const data = await d3.json(\r\n    `https://cors-anywhere.herokuapp.com/query1.finance.yahoo.com/v7/finance/spark?symbols=${symbols.join(\r\n      \",\"\r\n    )}&range=2y&interval=1d&indicators=close&includeTimestamps=false&includePrePost=false`,\r\n    d3.autoType\r\n  );\r\n\r\nconst   parsedData = parseSparkData(data.spark.result);\r\n    return parsedData;\r\n\r\n}\r\n   ","import React, { useState, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport Loading from \"./Loading\";\r\nimport {\r\n  fetchQuoteData,\r\n   fetchIndiciesData\r\n} from \"../../utils/fetch\";\r\nimport _ from 'lodash';\r\nconst unixTimeParser = d3.timeParse(\"%s\");\r\n\r\nconst COLLECTION = [\"SPY\"];\r\n\r\nexport const DataContext = React.createContext();\r\n\r\nexport const DataProvider = props => {\r\n  const [fetchingIncidies, setFetchingIndicies] = useState({\r\n    loading: true,\r\n    error: null\r\n  });\r\n\r\n  const [fetchingQuote, setFetchingQuote] = useState({\r\n    loading: true,\r\n    error: null\r\n  });\r\n\r\n  const [symbol, setSymbol] = useState(null);\r\n  const [quoteData, setQuoteData] = useState(null);\r\n  const [peers, setPeers] = useState(null);\r\n  const [refresh, setRefresh] = useState(null);\r\n\r\n  const [indiciesData, setIndiciesData] = useState(null);\r\n  const onMount = async () => {\r\n    try {\r\n      // fetch indicies data\r\n      const data = await fetchIndiciesData(COLLECTION);\r\n\r\n      setIndiciesData(data);\r\n      setFetchingIndicies({ loading: false, error: null });\r\n    } catch (error) {\r\n      setFetchingIndicies({ loading: false, error });\r\n    }\r\n  };\r\n\r\n\r\n  \r\nconst YahooQuoteFetcher = async (symbol) => {\r\n   let quote = await d3.json(\r\n    `https://cors-anywhere.herokuapp.com/query1.finance.yahoo.com/v7/finance/quote?symbols=${symbol}`,d3.autoType\r\n  );\r\n  return { quote: quote.quoteResponse.result[0] };\r\n};\r\n\r\nconst YahooChartDataFetcher = async (symbol, interval, p1,p2) => {\r\n  let fetched = await d3.json(\r\n    `https://cors-anywhere.herokuapp.com/query1.finance.yahoo.com/v8/finance/chart/?symbol=${symbol}&period1=${p1}&period2=${p2}&interval=${interval}`,\r\n    d3.autoType\r\n  );\r\n  let chartData = await extractChartData(fetched);\r\n  return chartData.sort((a,b)=>b.date-a.date, d3.ascending);\r\n};\r\n\r\n\r\n\r\nconst extractChartData = fetchedData => {\r\n  let result = fetchedData.chart.result[0];\r\n  let ohlcv = result.indicators.quote[0];\r\n  return result.timestamp.map((x, i) => {\r\n    let obj = { date: unixTimeParser(x) };\r\n    obj.open = ohlcv.open[i];\r\n    obj.high = ohlcv.high[i];\r\n    obj.low = ohlcv.low[i];\r\n    obj.close = ohlcv.close[i];\r\n    obj.volume = ohlcv.volume[i];\r\n    return obj;\r\n  });\r\n};\r\n\r\nconst fetchMoneyFlows = async () => {\r\n  const file = await fetch(\r\n    \"http://cors-anywhere.herokuapp.com/online.wsj.com/mdc/public/npage/2_3045-mfgppl-mfxml2csv.html\"\r\n  );\r\n  let res = await file.text();\r\n  console.log(res);\r\n  let data = res.trim();\r\n  data = data.substring(data.indexOf(\"C\"));\r\n  data = d3.tsvParse(data, d3.autoType);\r\n  return data;\r\n};\r\n  const getPeers = async symbol => {\r\n    let peers = await d3.json(\r\n      `https://cloud.iexapis.com/stable/stock/${symbol}/peers?&token=pk_930da6c1c50b4e33914febac3ab39fcb`\r\n    );\r\n    if (Object.keys(peers).length > 0) {\r\n      const quotePeers = await d3.json(\r\n        `https://cloud.iexapis.com/stable/stock/market/batch?token=pk_930da6c1c50b4e33914febac3ab39fcb&symbols=${peers.join()}&types=quote,chart&range=1d`\r\n      );\r\n      console.log(quotePeers);\r\n      if(peers.length!=quotePeers.length)\r\n      {\r\n        // debugger;\r\n        peers.filter(x=>_.find(quotePeers,p=>p.quote.symbol===x))\r\n      }\r\n      setPeers({\r\n        peersFetched: true,\r\n        peers: peers,\r\n        peerData: quotePeers\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSymbolChange = async symbol => {\r\n    try {\r\n      setSymbol(symbol);\r\n      // fetch quote data\r\n      setFetchingQuote({ loading: true, error: null });\r\n      const data = await YahooQuoteFetcher(symbol);\r\n      // console.log(data);\r\n      // debugger;\r\n      setQuoteData(data);\r\n\r\n      setFetchingQuote({ loading: false, error: null });\r\n    } catch (error) {\r\n      setFetchingQuote({ loading: false, error });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onMount();\r\n  }, []);\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        symbol,\r\n        peers,\r\n        fetchingIncidies,\r\n        fetchingQuote,\r\n        quoteData,\r\n        indiciesData,\r\n        handleSymbolChange,\r\n        YahooChartDataFetcher,\r\n        YahooQuoteFetcher,\r\n        ...props\r\n      }}>\r\n      {fetchingIncidies.loading && <Loading />}\r\n      {props.children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport QuoteData from \"./StockQuoteData\";\r\nimport { DataContext } from \"../MarketDataDetails\";\r\n\r\nexport default props => {\r\n  \r\n  const {\r\n    fetchingQuote,\r\n    fetchingIncidies,\r\n    handleSymbolChange,\r\n    YahooChartDataFetcher,\r\n    YahooQuoteFetcher,\r\n    \r\n    quoteData\r\n  } = useContext(DataContext);\r\n  const [ticker, setTicker] = useState(props.symbol);\r\n  useEffect(() => {\r\n    handleSymbolChange(ticker);\r\n    \r\n  }, [ticker]);\r\n  useEffect(() => setTicker(props.symbol), [props.symbol]);\r\n    \r\n  return (\r\n    <Segment\r\n      loading={fetchingQuote.loading && !fetchingIncidies.loading}\r\n      style={{ minHeight: \"300px\" }}>\r\n      {ticker ? (\r\n        !fetchingQuote.loading && (\r\n          <QuoteData\r\n            symbol={props.symbol}\r\n            quote={quoteData.quote}\r\n            chartDataHandler={YahooChartDataFetcher}\r\n          />\r\n        )\r\n      ) : (\r\n        <h1>NO DATA</h1>\r\n      )}\r\n    </Segment>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { InstantSearch } from 'react-instantsearch-dom';\r\nimport algoliasearch from 'algoliasearch/lite';\r\n\r\n\r\nconst searchClient = algoliasearch(\r\n  '33EO0JJW59',\r\n  '82086de1fc1c9cc49784f09a485074ba'\r\n);\r\n\r\nconst WithInstantSearch = ({ children }) => {\r\n  return (\r\n    <InstantSearch\r\n      indexName='exchange-listings'\r\n      searchClient={searchClient}>\r\n      {children}\r\n    </InstantSearch>\r\n  );\r\n};\r\n\r\nWithInstantSearch.propTypes = {\r\n  children: PropTypes.element.isRequired\r\n};\r\n\r\nexport default WithInstantSearch;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\nimport { connectAutoComplete } from \"react-instantsearch-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Search, Label, Message } from \"semantic-ui-react\";\r\n\r\nconst formatHits = hits => {\r\n  return _.chain(hits)\r\n    .map(h => {\r\n      return { ticker: h.Symbol, name: h.Description };\r\n    })\r\n    .slice(0, 5)\r\n    .value();\r\n};\r\nconst resultRenderer = ({ ticker, name }) => (\r\n    <><Label>{ticker}</Label>\r\n  <span style={{ fontWeight: \"400\", fontSize: \"10px\", letterSpacing: 0, margin:0, paddingLeft:'5px' }}>\r\n     <i>{name}</i>\r\n  </span></>\r\n);\r\nconst SearchInput = props => {\r\n  const [val, setVal] = useState(\"\");\r\n\r\n  const onChange = (e, { value }) => {\r\n    setVal(value.toUpperCase());\r\n    props.refine(value.toUpperCase());\r\n  };\r\n\r\n  const onSelect = (e, { result }) => {\r\n    setVal(result.ticker);\r\n    props.history.push(`/model/${result.ticker}`);\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      color='black'\r\n      transparent\r\n      icon='search'\r\n      iconPosition='right'\r\n      style={{ width: \"100%\" }}\r\n      fluid\r\n      input={{ style: { width: \"100%\" } }}\r\n      size='small'\r\n      placeholder='Enter Company or Symbol'\r\n      value={val}\r\n      onSearchChange={_.debounce(onChange, 2000, {\r\n        leading: true\r\n      })}\r\n      selectFirstResult\r\n      onResultSelect={onSelect}\r\n      results={formatHits(props.hits)}\r\n      resultRenderer={resultRenderer}\r\n    />\r\n  );\r\n};\r\n\r\nSearchInput.propTypes = {\r\n  refine: PropTypes.func.isRequired,\r\n  hits: PropTypes.array.isRequired\r\n};\r\n\r\nexport default connectAutoComplete(withRouter(SearchInput));","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n// TRADING-DAY COMPONENTS\r\nimport Clock from \"react-live-clock\";\r\nimport SearchInput from \"./Search/index.js\";\r\n\r\nconst HeaderStyles = styled.div`\r\n  user-select: none;\r\n  @import url(https://fonts.googleapis.com/css?family=Arvo:700);\r\n  @import url(https://fonts.googleapis.com/css?family=Seaweed+Script);\r\n\r\n  #titling {\r\n    background-color: #222;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 20px 0;\r\n  }\r\n\r\n  .clock {\r\n    text-align: center;\r\n    background: white;\r\n    color: #000;\r\n    letter-spacing: 0.5rem;\r\n    color: black;\r\n    font-weight: 500;\r\n    font-size: 1.5rem;\r\n    border-radius: 0.25em;\r\n    line-height: 2rem;\r\n    align-self: center;\r\n  }\r\n  .search {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport default Header => {\r\n  return (\r\n    <HeaderStyles>\r\n      <div className='clock'>\r\n        <Clock\r\n          format={\"HH:mm:ss\"}\r\n          ticking={true}\r\n          timezone={\"America/New_York\"}\r\n          interval={1000}\r\n        />\r\n      </div>\r\n      <div>\r\n        <div className='search'>\r\n          <SearchInput />\r\n        </div>\r\n      </div>\r\n    </HeaderStyles>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Navigation from './components/Navigation';\r\nimport Home from './components/Home';\r\nimport Charts from './components/Charts'\r\nimport News from './components/News'\r\nimport { AuthProvider } from './firebase/Auth';\r\nimport { Layout } from 'antd';\r\nimport SignIn from './components/SignIn';\r\nimport Loading from './components/Loading';\r\nimport SignUp from './components/SignUp'\r\nimport Account from './components/Account'\r\nimport PrivateRoute from './components/PrivateRoute'\r\nimport Profile from './components/Profile';\r\nimport About from './components/About';\r\nimport Quote from \"./components/modelComponents/TradingData/StockDataFolder\";\r\nimport NotFound from \"./components/modelComponents/TradingData/NotFound\";\r\nimport WithInstantSearch from \"./components/modelComponents/TradingData/WithInstantSearch\";\r\nimport Header from \"./components/modelComponents/TradingData/Header\";\r\nimport { DataProvider } from \"./components/modelComponents/TradingData/MarketDataDetails\";\r\n\r\nconst {Content}=Layout;\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <Router>\r\n        <div className='App'>\r\n          <header>\r\n            <Navigation />\r\n          </header>\r\n          <Layout className='site-layout'>\r\n            <Content className=\"main-content\" >\r\n              <div className='App-body'>\r\n                <Route exact path='/' component={Home}/>\r\n                <Route exact path='/charts' component={Charts}/>\r\n                <Route exact path='/news' component={News}/>\r\n                <Route exact path='/sigin' component = {SignIn}/>\r\n                <Route exact path='/signup' component = {SignUp}/>\r\n                <Route exact path='/loading' component = {Loading}/>\r\n\r\n                <Route exact path='/aboutUs' component = {About}/>\r\n\r\n                <Route exact path='/siginup' component = {SignUp}/>\r\n\r\n                <PrivateRoute path=\"/account\" component={Account} />\r\n                <PrivateRoute path=\"/profile\" component={Profile} />\r\n              \r\n                <Route exact path='/model' render={props =>\r\n                                    <DataProvider>\r\n                                    <WithInstantSearch>\r\n                                        <Header />\r\n                                    </WithInstantSearch>\r\n                                    </DataProvider>\r\n                                  } />\r\n                <Route exact path='/model/:id' render={props => (\r\n                          <DataProvider>\r\n                        <WithInstantSearch>\r\n                            <Header />\r\n                        </WithInstantSearch>\r\n                        <br/>\r\n                          <Quote symbol={props.match.params.id.toLowerCase()} {...props} />\r\n                          </DataProvider>\r\n                        )}\r\n                      />\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </div>\r\n      </Router>\r\n      </AuthProvider>\r\n  );\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  \r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}